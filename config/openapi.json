{
  "openapi": "3.1.0",
  "info": {
    "version": "1.4.0",
    "title": "Open API",
    "description": "An Open API to the router. GET methods must not contain body. POST methods must contain body"
  },
  "components": {
    "securitySchemes": {
      "Basic_auth": {
        "type": "http",
        "scheme": "basic",
        "description": "Basic authorization by base64 encrypted CLI `user:password` transfered in the 'Authorization' request header with prefix 'Basic '"
      },
      "API_key": {
        "type": "apiKey",
        "in": "header",
        "name": "istok-api-key"
      },
      "Bearer_token": {
        "description": "JWT token given by router CLI is added to the 'Authorization' request header with prefix 'Bearer '",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ACK_FLAG": {
        "type": "string",
        "enum": [
          "+ACK",
          "-ACK"
        ],
        "description": "{+|-}ACK flag"
      },
      "ADDRESS_FAMILY": {
        "type": "string",
        "enum": [
          "ipv4",
          "ipv6"
        ],
        "description": "Address family"
      },
      "ADD_DEL": {
        "type": "string",
        "enum": [
          "add",
          "del"
        ],
        "description": "add|del"
      },
      "ALL_DYNAMIC_PROTOCOLS": {
        "type": "string",
        "enum": [
          "rip",
          "ripng",
          "ospf",
          "ospf6",
          "bgp",
          "isis"
        ],
        "description": "Dynamic routing protocol"
      },
      "ALL_LOG_TYPE": {
        "type": "string",
        "enum": [
          "access-list",
          "access-violation",
          "command-history",
          "daemon",
          "syslog",
          "bgp",
          "ip-pim",
          "ipv6-pim",
          "ospf",
          "telephony",
          "vpn",
          "pppoe-server",
          "pptp-server",
          "system-integrity"
        ],
        "description": "Log type"
      },
      "BASIC_CHAIN": {
        "type": "string",
        "enum": [
          "input",
          "forward",
          "output"
        ],
        "description": "input forward output"
      },
      "BAUD_RATE": {
        "type": "string",
        "enum": [
          "50",
          "75",
          "110",
          "134",
          "150",
          "300",
          "600",
          "1200",
          "1800",
          "2400",
          "4800",
          "9600",
          "19200",
          "38400",
          "57600",
          "115200",
          "230400",
          "460800",
          "921600"
        ],
        "description": "Baud rate"
      },
      "BOOL": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ],
        "description": "Boolean choice"
      },
      "BRIDGE_MODE": {
        "type": "string",
        "enum": [
          "brctl",
          "ovs"
        ],
        "description": "brctl|ovs"
      },
      "BWM_NG_UNIT_TYPE": {
        "type": "string",
        "enum": [
          "bits",
          "bytes",
          "packets",
          "errors"
        ],
        "description": "Bandwidth units"
      },
      "CIPHER": {
        "type": "string",
        "enum": [
          "3des-cbc",
          "aes128-cbc",
          "aes192-cbc",
          "aes256-cbc",
          "rijndael-cbc@lysator.liu.se",
          "aes128-ctr",
          "aes192-ctr",
          "aes256-ctr",
          "aes128-gcm@openssh.com",
          "aes256-gcm@openssh.com",
          "chacha20-poly1305@openssh.com"
        ],
        "description": "Cipher"
      },
      "CLASSIFY_TYPE": {
        "type": "string",
        "enum": [
          "ip",
          "mac",
          "masq"
        ],
        "description": "Classify type"
      },
      "CODEC_VALUE": {
        "type": "string",
        "enum": [
          "gsm",
          "ulaw",
          "alaw",
          "g722",
          "g726",
          "adpcm",
          "slin",
          "lpc10",
          "ilbc",
          "g726aal2",
          "g723",
          "g729",
          "speex",
          "siren7",
          "h261",
          "h263",
          "h263p",
          "h264"
        ],
        "description": "g723|gsm|ulaw|alaw|g726|adpcm|slin|lpc10|g729|speex|ilbc|g726aal2"
      },
      "COPY_LOG_TYPE": {
        "type": "string",
        "enum": [
          "command-history",
          "daemon",
          "syslog"
        ],
        "description": "Log type"
      },
      "DIRECTION_TYPE": {
        "type": "string",
        "enum": [
          "sour",
          "dest"
        ],
        "description": "Direction type"
      },
      "DIRECTMEDIA_VALUE": {
        "type": "string",
        "enum": [
          "nonat",
          "update",
          "outgoing"
        ],
        "description": "nonat|update|outgoing"
      },
      "DPI_PROTOCOL_TYPE": {
        "type": "string",
        "enum": [
          "activision",
          "afp",
          "aimini",
          "ajp",
          "amazon",
          "amazonalexa",
          "amazonvideo",
          "amongus",
          "amqp",
          "anydesk",
          "apple",
          "appleicloud",
          "appleitunes",
          "applejuice",
          "applepush",
          "applesiri",
          "applestore",
          "armagetron",
          "avast",
          "ayiyaq",
          "bgp",
          "bittorrent",
          "bjnp",
          "bloomberg",
          "capwap",
          "checkmk",
          "ciscoskinny",
          "ciscovpn",
          "citrix",
          "cloudflare",
          "cnn",
          "coap",
          "collectd",
          "corba",
          "cpha",
          "crossfire",
          "csgo",
          "datasaver",
          "dce_rpc",
          "deezer",
          "dhcp",
          "dhcpv6",
          "diameter",
          "direct_download_link",
          "directconnect",
          "discord",
          "disneyplus",
          "dnp3",
          "dns",
          "dnscrypt",
          "dofus",
          "doh_dot",
          "drda",
          "dropbox",
          "dtls",
          "eaq",
          "ebay",
          "edonkey",
          "egp",
          "facebook",
          "fasttrack",
          "fiesta",
          "fix",
          "florensia",
          "forticlient",
          "ftp_control",
          "ftp_data",
          "genshinimpact",
          "git",
          "github",
          "gitlab",
          "gmail",
          "gnutella",
          "google",
          "googledocs",
          "googledrive",
          "googlehangoutduo",
          "googlemaps",
          "googleplus",
          "googleservices",
          "gre",
          "gtp",
          "guildwars",
          "h323",
          "halflife2",
          "hotmail",
          "hotspotshield",
          "hp",
          "http",
          "http_connect",
          "http_proxy",
          "hulu",
          "iax",
          "icecast",
          "icmp",
          "icmpv6",
          "iec60870",
          "iflix",
          "igmp",
          "imap",
          "imaps",
          "imo",
          "instagram",
          "ip_in_ip",
          "ipp",
          "ipsec",
          "irc",
          "jabber",
          "kakaotalk",
          "kakaotalk_voice",
          "kerberos",
          "kontiki",
          "lastfm",
          "ldap",
          "likee",
          "linkedin",
          "lisp",
          "llmnr",
          "lotusnotes",
          "maplestory",
          "mdns",
          "megaco",
          "memcached",
          "messenger",
          "mgcp",
          "microsoft",
          "microsoft365",
          "mining",
          "modbus",
          "mongodb",
          "mpeg_ts",
          "mqtt",
          "ms_onedrive",
          "mssql-tds",
          "mysql",
          "nats",
          "nestlogsink",
          "netbios",
          "netflix",
          "netflow",
          "nfs",
          "nintendo",
          "noe",
          "ntop",
          "ntp",
          "ocs",
          "ookla",
          "opendns",
          "openft",
          "openvpn",
          "oracle",
          "ospf",
          "pandora",
          "pastebin",
          "pinterest",
          "playstation",
          "playstore",
          "pop3",
          "pops",
          "postgresql",
          "ppstream",
          "pptp",
          "ps_vue",
          "qq",
          "qqlive",
          "quic",
          "radius",
          "rdp",
          "reddit",
          "redis",
          "remotescan",
          "rsync",
          "rtcp",
          "rtmp",
          "rtp",
          "rtsp",
          "rx",
          "s7comm",
          "sap",
          "sctp",
          "sflow",
          "shoutcast",
          "signal",
          "sina",
          "sip",
          "skype_teams",
          "skypecall",
          "slack",
          "smbv1",
          "smbv23",
          "smpp",
          "smtp",
          "smtps",
          "snapchat",
          "snapchatcall",
          "snmp",
          "soap",
          "socks",
          "someip",
          "sopcast",
          "soulseek",
          "soundcloud",
          "spotify",
          "ssdp",
          "ssh",
          "starcraft",
          "stealthnet",
          "steam",
          "stun",
          "syslog",
          "targusdataspeed",
          "teams",
          "teamspeak",
          "teamviewer",
          "telegram",
          "telnet",
          "teredo",
          "tftp",
          "thunder",
          "tiktok",
          "tinc",
          "tls",
          "tor",
          "truphone",
          "tuenti",
          "tumblr",
          "tvuplayer",
          "twitch",
          "twitter",
          "ubntac2",
          "ubuntuone",
          "usenet",
          "vevo",
          "vhua",
          "viber",
          "vmware",
          "vnc",
          "vrrp",
          "warcraft3",
          "waze",
          "webex",
          "websocket",
          "wechat",
          "whatsapp",
          "whatsappcall",
          "whatsappfiles",
          "whois-das",
          "wikipedia",
          "windowsupdate",
          "wireguard",
          "worldofkungfu",
          "worldofwarcraft",
          "wsd",
          "xbox",
          "xdmcp",
          "yahoo",
          "youtube",
          "youtubeupload",
          "z39.50",
          "zabbix",
          "zattoo",
          "zeromq",
          "zoom"
        ],
        "description": "Protocol type"
      },
      "DTMF_MODE_VALUE": {
        "type": "string",
        "enum": [
          "inband",
          "rfc2833",
          "info",
          "auto"
        ],
        "description": "inband|rfc2833|info|auto"
      },
      "DUPLEX_MODE": {
        "type": "string",
        "enum": [
          "full",
          "half"
        ],
        "description": "full|half"
      },
      "ENABLE_DISABLE": {
        "type": "string",
        "enum": [
          "enable",
          "disable"
        ],
        "description": "enable|disable"
      },
      "EN_RU": {
        "type": "string",
        "enum": [
          "english",
          "russian"
        ],
        "description": "Language"
      },
      "ETHERNET_SPEED": {
        "type": "string",
        "enum": [
          "10",
          "100",
          "1000"
        ],
        "description": "10 | 100 | 1000"
      },
      "ETH_CHANNELS": {
        "type": "string",
        "enum": [
          "rx",
          "tx",
          "other",
          "combined"
        ],
        "description": "Eth channel"
      },
      "ETH_RINGS": {
        "type": "string",
        "enum": [
          "rx",
          "rx-mini",
          "rx-jumbo",
          "tx"
        ],
        "description": "Eth ring"
      },
      "FILESYSTEM": {
        "type": "string",
        "enum": [
          "ntfs",
          "ext2",
          "ext4"
        ],
        "description": "Filesystem"
      },
      "FILTERING_VIRT_CHAIN": {
        "type": "string",
        "enum": [
          "input",
          "forward",
          "output"
        ],
        "description": "Chain name"
      },
      "FIN_FLAG": {
        "type": "string",
        "enum": [
          "+FIN",
          "-FIN"
        ],
        "description": "{+|-}FIN flag"
      },
      "H323_CODEC_VALUE": {
        "type": "string",
        "enum": [
          "ulaw",
          "alaw",
          "gsm",
          "g729",
          "g723"
        ],
        "description": "ulaw|alaw|gsm|g729|g723"
      },
      "H323_DTMFMODE_VALUE": {
        "type": "string",
        "enum": [
          "rfc2833",
          "cisco",
          "q931keypad",
          "h245alphanumeric",
          "h245signal",
          "inband"
        ],
        "description": "rfc2833|cisco|q931keypad|h245alphanumeric|h245signal|inband"
      },
      "H323_TOS_VALUE": {
        "type": "string",
        "enum": [
          "lowdelay",
          "thoughput",
          "reliability",
          "mincost",
          "none"
        ],
        "description": "lowdelay|thoughput|reliability|mincost|none"
      },
      "HDLC_TYPE": {
        "type": "string",
        "enum": [
          "eth",
          "ppp",
          "raw"
        ],
        "description": "eth|ppp|raw"
      },
      "HISTORY_COMMAND_RESULT": {
        "type": "string",
        "enum": [
          "OK",
          "ERROR"
        ],
        "description": "OK | ERROR"
      },
      "HOSTKEY": {
        "type": "string",
        "enum": [
          "ssh-ed25519",
          "ssh-ed25519-cert-v01@openssh.com",
          "ssh-rsa",
          "ssh-dss",
          "ecdsa-sha2-nistp256",
          "ecdsa-sha2-nistp384",
          "ecdsa-sha2-nistp521",
          "ssh-rsa-cert-v01@openssh.com",
          "ssh-dss-cert-v01@openssh.com",
          "ecdsa-sha2-nistp256-cert-v01@openssh.com",
          "ecdsa-sha2-nistp384-cert-v01@openssh.com",
          "ecdsa-sha2-nistp521-cert-v01@openssh.com"
        ],
        "description": "Host key algorithms"
      },
      "ILM_LIST": {
        "type": "string",
        "enum": [
          "reserved",
          "common"
        ],
        "description": "Reserved common"
      },
      "IN_OUT": {
        "type": "string",
        "enum": [
          "in",
          "out"
        ],
        "description": "in|out"
      },
      "IPSEC_DEBUG_TYPES": {
        "type": "string",
        "enum": [
          "all",
          "dmn",
          "mgr",
          "ike",
          "chd",
          "job",
          "cfg",
          "knl",
          "net",
          "asn",
          "enc",
          "tnc",
          "imc",
          "imv",
          "pts",
          "tls",
          "esp",
          "lib"
        ],
        "description": "IPSEC debug type"
      },
      "IPSEC_LIFETIME_UNIT": {
        "type": "string",
        "enum": [
          "s",
          "m",
          "h",
          "d"
        ],
        "description": "Lifetime unit"
      },
      "IP_PROTO": {
        "type": "string",
        "enum": [
          "ipv4",
          "ipv6"
        ],
        "description": "ipv4 | ipv6"
      },
      "IP_PROTOCOL_TYPE": {
        "type": "string",
        "enum": [
          "ip",
          "hopopt",
          "icmp",
          "igmp",
          "ggp",
          "ipencap",
          "st",
          "tcp",
          "egp",
          "igp",
          "pup",
          "udp",
          "hmp",
          "xns-idp",
          "rdp",
          "iso-tp4",
          "dccp",
          "xtp",
          "ddp",
          "idpr-cmtp",
          "ipv6",
          "ipv6-route",
          "ipv6-frag",
          "idrp",
          "rsvp",
          "gre",
          "esp",
          "ah",
          "skip",
          "ipv6-icmp",
          "ipv6-nonxt",
          "ipv6-opts",
          "rspf",
          "vmtp",
          "eigrp",
          "ospf",
          "ax.25",
          "ipip",
          "etherip",
          "encap",
          "pim",
          "ipcomp",
          "vrrp",
          "l2tp",
          "isis",
          "sctp",
          "fc",
          "mobility-header",
          "udplite",
          "mpls-in-ip",
          "manet",
          "hip",
          "shim6",
          "wesp",
          "rohc"
        ],
        "description": "IP protocol type"
      },
      "ISIS_LEVELS": {
        "type": "string",
        "enum": [
          "level-1",
          "level-2"
        ],
        "description": "level-1 | level-2"
      },
      "ISIS_METRIC_STYLE": {
        "type": "string",
        "enum": [
          "narrow",
          "transition",
          "wide"
        ],
        "description": "narrow | transition | wide"
      },
      "KEX": {
        "type": "string",
        "enum": [
          "diffie-hellman-group1-sha1",
          "diffie-hellman-group14-sha1",
          "diffie-hellman-group14-sha256",
          "diffie-hellman-group16-sha512",
          "diffie-hellman-group18-sha512",
          "diffie-hellman-group-exchange-sha1",
          "diffie-hellman-group-exchange-sha256",
          "ecdh-sha2-nistp256",
          "ecdh-sha2-nistp384",
          "ecdh-sha2-nistp521",
          "curve25519-sha256",
          "curve25519-sha256@libssh.org"
        ],
        "description": "Key exchange algorithms"
      },
      "LOGGING_FACILITIES": {
        "type": "string",
        "enum": [
          "kern",
          "user",
          "mail",
          "daemon",
          "auth",
          "syslog",
          "lpr",
          "news",
          "uucp",
          "cron",
          "ftp",
          "ntp",
          "security",
          "console",
          "local0",
          "local1",
          "local2",
          "local3",
          "local4",
          "local5",
          "local6",
          "local7"
        ],
        "description": "Log facility (messages from mprdaemon refer to local2)"
      },
      "LOGGING_LEVEL": {
        "type": "string",
        "enum": [
          "DEBUG",
          "INFO",
          "WARNING",
          "ERROR",
          "CRITICAL"
        ],
        "description": "Log level"
      },
      "LOG_LEVEL": {
        "type": "string",
        "enum": [
          "INFO",
          "DEBUG",
          "WARNING",
          "ERROR"
        ],
        "description": "Log level"
      },
      "MACS": {
        "type": "string",
        "enum": [
          "hmac-sha1",
          "hmac-sha1-96",
          "hmac-sha2-256",
          "hmac-sha2-512",
          "hmac-md5",
          "hmac-md5-96",
          "umac-64@openssh.com",
          "umac-128@openssh.com",
          "hmac-sha1-etm@openssh.com",
          "hmac-sha1-96-etm@openssh.com",
          "hmac-sha2-256-etm@openssh.com",
          "hmac-sha2-512-etm@openssh.com",
          "hmac-md5-etm@openssh.com",
          "hmac-md5-96-etm@openssh.com",
          "umac-64-etm@openssh.com",
          "umac-128-etm@openssh.com"
        ],
        "description": "MAC algorithms"
      },
      "MANGLE_CHAIN": {
        "type": "string",
        "enum": [
          "prerouting",
          "input",
          "forward",
          "output",
          "postrouting"
        ],
        "description": "Chain name"
      },
      "MANGLE_VIRT_CHAIN": {
        "type": "string",
        "enum": [
          "prerouting",
          "input",
          "forward",
          "output",
          "postrouting"
        ],
        "description": "Chain name"
      },
      "MEH": {
        "type": "string",
        "enum": [
          "mesh",
          "spoke"
        ],
        "description": "Mesh spoke"
      },
      "MONTH_STRING": {
        "type": "string",
        "enum": [
          "january",
          "february",
          "march",
          "april",
          "may",
          "june",
          "july",
          "august",
          "september",
          "october",
          "november",
          "december"
        ],
        "description": "MONTH"
      },
      "MPLST_LOG_LEVEL": {
        "type": "string",
        "enum": [
          "err",
          "warn",
          "info",
          "debug",
          "trerr",
          "trdebug"
        ],
        "description": "err warn info debug trerr trdebug"
      },
      "MPLS_CHAIN": {
        "type": "string",
        "enum": [
          "PREL2VPN",
          "POSTL2VPN",
          "PREMPLS",
          "POSTMPLS"
        ],
        "description": "PREL2VPN|POSTL2VPN|PREMPLS|POSTMPLS"
      },
      "NAT_CHAIN": {
        "type": "string",
        "enum": [
          "prerouting",
          "output",
          "postrouting"
        ],
        "description": "Chain name"
      },
      "NAT_OUTPUT_CHAIN": {
        "type": "string",
        "enum": [
          "prerouting",
          "input",
          "output",
          "postrouting"
        ],
        "description": "Chain name"
      },
      "ON_OFF": {
        "type": "string",
        "enum": [
          "on",
          "off"
        ],
        "description": "on|off"
      },
      "ON_OFF_RESTART": {
        "type": "string",
        "enum": [
          "on",
          "off",
          "restart"
        ],
        "description": "on|off|restart"
      },
      "ON_OFF_TO_YES_NO": {
        "type": "string",
        "enum": [
          "on",
          "off"
        ],
        "description": "on|off"
      },
      "OSPF6_ROUTE_TYPE": {
        "type": "string",
        "enum": [
          "bgp",
          "connected",
          "ripng",
          "static"
        ],
        "description": "Route type"
      },
      "OSPF_ROUTE_TYPE": {
        "type": "string",
        "enum": [
          "bgp",
          "connected",
          "isis",
          "rip",
          "static"
        ],
        "description": "Route type"
      },
      "PACKET_TYPE": {
        "type": "string",
        "enum": [
          "hello",
          "joins",
          "register"
        ],
        "description": "hello|joins|register"
      },
      "PASSWORD_FORMAT": {
        "type": "string",
        "enum": [
          "clear",
          "md5"
        ],
        "description": "clear | md5"
      },
      "PERMIT_DENY": {
        "type": "string",
        "enum": [
          "permit",
          "deny"
        ],
        "description": "permit|deny"
      },
      "POE_DISCONNECTION_MODE": {
        "type": "string",
        "enum": [
          "higher-priority",
          "ignore-priority"
        ],
        "description": "Power disconnection method"
      },
      "POE_LIMIT_MODE": {
        "type": "string",
        "enum": [
          "PPL",
          "class-based"
        ],
        "description": "Power limit mode"
      },
      "POE_PORT_MODE": {
        "type": "string",
        "enum": [
          "PoE",
          "PoE+"
        ],
        "description": "PoE port operation mode"
      },
      "POE_POWER_MODE": {
        "type": "string",
        "enum": [
          "dynamic",
          "static"
        ],
        "description": "Power management mode"
      },
      "POE_PRIORITY": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "LOW"
        ],
        "description": "PoE priority"
      },
      "POP": {
        "type": "string",
        "enum": [
          "pop",
          "popvpn"
        ],
        "description": "Pop popvpn"
      },
      "PORT_LINK_TYPE": {
        "type": "string",
        "enum": [
          "auto",
          "point-to-point",
          "shared"
        ],
        "description": "auto | point-to-point | shared"
      },
      "PPP_SPEED": {
        "type": "string",
        "enum": [
          "1200",
          "2400",
          "4800",
          "9600",
          "19200",
          "38400",
          "57600",
          "115200"
        ],
        "description": "Speed value"
      },
      "PRIMARY_SECONDARY": {
        "type": "string",
        "enum": [
          "primary",
          "secondary"
        ],
        "description": "primary|secondary"
      },
      "PROTOCOLS": {
        "type": "string",
        "enum": [
          "tcp",
          "udp",
          "icmp",
          "sctp",
          "dccp"
        ],
        "description": "Protocols"
      },
      "PROTOCOL_VERSION": {
        "type": "string",
        "enum": [
          "v1",
          "v2"
        ],
        "description": "SSH protocol version"
      },
      "PSH_FLAG": {
        "type": "string",
        "enum": [
          "+PSH",
          "-PSH"
        ],
        "description": "{+|-}PSH flag"
      },
      "REDISTRIBUTE_BGP_STATE": {
        "type": "string",
        "enum": [
          "connected",
          "ospf",
          "rip",
          "static"
        ],
        "description": "state"
      },
      "REDISTRIBUTE_ISIS_STATE": {
        "type": "string",
        "enum": [
          "connected",
          "bgp",
          "rip",
          "ripng",
          "ospf",
          "static"
        ],
        "description": "state"
      },
      "REDISTRIBUTE_OSPF_STATE": {
        "type": "string",
        "enum": [
          "connected",
          "bgp",
          "rip",
          "static"
        ],
        "description": "state"
      },
      "REDISTRIBUTE_RIP_STATE": {
        "type": "string",
        "enum": [
          "connected",
          "bgp",
          "ospf",
          "static"
        ],
        "description": "state"
      },
      "REDISTRIBUTE_STATE": {
        "type": "string",
        "enum": [
          "connected",
          "static",
          "ospf",
          "rip"
        ],
        "description": "state"
      },
      "RESTAPI_ALG": {
        "type": "string",
        "enum": [
          "hs256",
          "hs384",
          "hs512"
        ],
        "description": "Token generation algorithm"
      },
      "RESTAPI_AUTH_METHOD": {
        "type": "string",
        "enum": [
          "API-key",
          "bearer-token",
          "basic"
        ],
        "description": "REST API authentication method"
      },
      "RIPNG_ROUTE_TYPE": {
        "type": "string",
        "enum": [
          "bgp",
          "connected",
          "ospf6",
          "static"
        ],
        "description": "Route type"
      },
      "RIP_ROUTE_TYPE": {
        "type": "string",
        "enum": [
          "bgp",
          "connected",
          "ospf",
          "static"
        ],
        "description": "Route type"
      },
      "RST_FLAG": {
        "type": "string",
        "enum": [
          "+RST",
          "-RST"
        ],
        "description": "{+|-}RST flag"
      },
      "SERIAL_PORT_STOP_BITS": {
        "type": "string",
        "enum": [
          "1",
          "2"
        ],
        "description": "1 2"
      },
      "SEVERITY_LEVEL": {
        "type": "string",
        "enum": [
          "debug",
          "info",
          "notice",
          "warning",
          "error",
          "critical",
          "alert",
          "emergency"
        ],
        "description": "Log level"
      },
      "SNMP_VERSIONS": {
        "type": "string",
        "enum": [
          "1",
          "2c",
          "3"
        ],
        "description": "Version of SNMP"
      },
      "SSL_CERT_ALG": {
        "type": "string",
        "enum": [
          "rsa1024",
          "rsa2048",
          "rsa4096"
        ],
        "description": "SSL generation algorithm"
      },
      "SSL_CERT_FMT": {
        "type": "string",
        "enum": [
          "crt",
          "pem"
        ],
        "description": "SSL certificate format"
      },
      "STATE_INSTANCE": {
        "type": "string",
        "enum": [
          "master",
          "backup"
        ],
        "description": "State of instance"
      },
      "SWAP": {
        "type": "string",
        "enum": [
          "swap",
          "swaplook",
          "pushlook"
        ],
        "description": "Swap swaplook pushlook"
      },
      "SWITCH_TYPE_VALUE": {
        "type": "string",
        "enum": [
          "national",
          "euroisdn",
          "qsig"
        ],
        "description": "national|euroisdn|qsig"
      },
      "SW_PORT_MTU": {
        "type": "integer",
        "enum": [
          1522,
          2048,
          10240
        ],
        "description": "1522 | 2048 | 10240"
      },
      "SW_PORT_SPD": {
        "type": "integer",
        "enum": [
          10,
          100,
          1000
        ],
        "description": "10 | 100 | 1000"
      },
      "SYN_FLAG": {
        "type": "string",
        "enum": [
          "+SYN",
          "-SYN"
        ],
        "description": "{+|-}SYN flag"
      },
      "TCP_FLAGS": {
        "type": "string",
        "enum": [
          "+FIN",
          "-FIN",
          "+SYN",
          "-SYN",
          "+RST",
          "-RST",
          "+PSH",
          "-PSH",
          "+ACK",
          "-ACK",
          "+URG",
          "-URG"
        ],
        "description": "{+|-}FlagName"
      },
      "TIME_RESOLUTION": {
        "type": "string",
        "enum": [
          "sec",
          "min",
          "hour",
          "day",
          "week"
        ],
        "description": "Time units"
      },
      "TOS_VALUE": {
        "type": "string",
        "enum": [
          "cs0",
          "cs1",
          "af11",
          "af12",
          "af13",
          "cs2",
          "af21",
          "af22",
          "af23",
          "cs3",
          "af31",
          "af32",
          "af33",
          "cs4",
          "af41",
          "af42",
          "af43",
          "cs5",
          "ef",
          "cs6",
          "cs7"
        ],
        "description": "cs0|cs1|af11|af12|af13|cs2|af21|af22|af23|cs3|af31..."
      },
      "UP_DOWN": {
        "type": "string",
        "enum": [
          "up",
          "down"
        ],
        "description": "up|down"
      },
      "URG_FLAG": {
        "type": "string",
        "enum": [
          "+URG",
          "-URG"
        ],
        "description": "{+|-}URG flag"
      },
      "VP_S": {
        "type": "string",
        "enum": [
          "vpls",
          "vpws"
        ],
        "description": "vpls vpws"
      },
      "WEB_PROTO": {
        "type": "string",
        "enum": [
          "http",
          "https"
        ],
        "description": "HTTP protocol"
      },
      "WEEKDAY": {
        "type": "string",
        "enum": [
          "mon",
          "tue",
          "wed",
          "thu",
          "fri",
          "sat",
          "sun"
        ],
        "description": "Day of week"
      },
      "WIFI_MODE": {
        "type": "string",
        "enum": [
          "access-point"
        ],
        "description": "access-point"
      },
      "WLAN_MODE": {
        "type": "string",
        "enum": [
          "access-point",
          "client"
        ],
        "description": "access-point|client"
      },
      "YES_NO": {
        "type": "string",
        "enum": [
          "yes",
          "no"
        ],
        "description": "yes|no"
      },
      "cache_policy": {
        "type": "string",
        "enum": [
          "conservative",
          "aggressive"
        ],
        "description": "Policy"
      },
      "ACL_NAME": {
        "type": "string",
        "pattern": "^[^_\\x01-\\x20\\'\\x22][^\\x01-\\x20\\'\\x22]*$",
        "description": "Access control list name"
      },
      "AFFINITY": {
        "type": "string",
        "pattern": "[0-9]+(\\-[0-9]+)?(,[0-9]+(\\-[0-9]+)?)*",
        "description": "list of cpu ranges"
      },
      "ALTITUDE": {
        "type": "string",
        "pattern": "^\\-?[0-9]{1,4}(\\.[0-9]{1,6})?$",
        "description": "Altitude"
      },
      "ASN_NN": {
        "type": "string",
        "pattern": "^([1-9]{1}|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]):([1-9]{1}|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$",
        "description": "ASN:NN"
      },
      "BASE64": {
        "type": "string",
        "pattern": "^([A-Za-z0-9+\\/]{4})*(([A-Za-z0-9+\\/]{3}=)|([A-Za-z0-9+\\/]{2}==)|([A-Za-z0-9+\\/]{1}===))?$",
        "description": "base64 string"
      },
      "BGP_VALUE": {
        "type": "string",
        "pattern": "^[0-9]{1,5}\\:[0-9]{1,5}",
        "description": "AA:NN"
      },
      "BYTENUM_KM": {
        "type": "string",
        "pattern": "^[0-9]+[KM]{0,1}$",
        "description": "Number of bytes"
      },
      "CHANNEL_LIST_VALUE": {
        "type": "string",
        "pattern": "^[0-9/,/-]*$",
        "description": "List like 1,2,3-7,10"
      },
      "CLASS_ID": {
        "type": "string",
        "pattern": "((^[0-9a-f])|(^[1-9a-f][0-9a-f]+)):([0]$|[1-9a-f][0-9a-f]*)?$",
        "description": "a:[b], ab - hex numbers"
      },
      "COLUMNS_PATTERN": {
        "type": "string",
        "pattern": "(([1-9][0-9]?)|(\\-[1-9][0-9]?)|([1-9][0-9]?\\-([1-9][0-9]{0,1})?))(,(([1-9][0-9]?)|(\\-[1-9][0-9]?)|([1-9][0-9]?\\-([1-9][0-9]{0,1})?)))*",
        "description": "Range list (N,N-,N-M,-M)"
      },
      "COMMUNITY_NUMBER": {
        "type": "string",
        "pattern": "^[0-9]+\\:[0-9]+$",
        "description": "AA:NN"
      },
      "COUNTRY_CODE": {
        "type": "string",
        "pattern": "^[A-Za-z]{2}$",
        "description": "Country code"
      },
      "DATE": {
        "type": "string",
        "pattern": "(0[1-9]|[12][0-9]|3[01])\\.(0[1-9]|1[012])\\.(19|20)[0-9][0-9]",
        "description": "DD.MM.YYYY"
      },
      "DATE_TIME": {
        "type": "string",
        "pattern": "^(19|20)[0-9][0-9](-(0[1-9]|1[012])(-(0[1-9]|[12][0-9]|3[01])(\\/([01][0-9]|2[0123]))?(:([0-5][0-9])(:([0-5][0-9]))?)?)?)?$",
        "description": "YYYY[-MM[-DD[/HH[:MM[:SS]]]]]"
      },
      "DELIM_PATTERN": {
        "type": "string",
        "pattern": "[^\\']",
        "description": "Delimeter character"
      },
      "DHCP_WORD": {
        "type": "string",
        "pattern": "^[A-Za-z0-9_.\\-]+$",
        "description": "Alphanumeric, underscore, dot, hyphen"
      },
      "DUID": {
        "type": "string",
        "pattern": "^([0-9a-fA-F][0-9a-fA-F]?:){0,13}[0-9a-fA-F][0-9a-fA-F]?$",
        "description": "AA:BB:..:NN"
      },
      "EMAIL_VALUE": {
        "type": "string",
        "pattern": "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$",
        "description": "Email address like name@host.domain"
      },
      "EUI_64": {
        "type": "string",
        "pattern": "^([0-9A-Fa-f]{1,4}:){3}([0-9A-Fa-f]{1,4})$",
        "description": "aaaa:bbbb:cccc:dddd"
      },
      "FILENAME": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f\\x22]{1,127}$",
        "description": "Filename, no double quotes, up to 127 chars"
      },
      "FILTER_HEX": {
        "type": "string",
        "pattern": "^0[xX]([0-9A-Fa-f]{2}){1,36}$",
        "description": "Hex number"
      },
      "FILTER_PORT_LISTING": {
        "type": "string",
        "pattern": "^([0-9]+)([,:][0-9]+){0,14}",
        "description": "Port list (e.g. 11,22:44,55,66)"
      },
      "FILTER_UNTIL_RATE": {
        "type": "string",
        "pattern": "^[0-9]+\\/(second|minute|hour|day)$",
        "description": "Rate value (e.g. 10/second)"
      },
      "FLOAT": {
        "type": "string",
        "pattern": "^([0-9]*\\.[0-9]+|[0-9]+)$",
        "description": "Float or Int"
      },
      "FLOAT_0_1": {
        "type": "string",
        "pattern": "^0(\\.[0-9]+)?|1$",
        "description": "Float 0 to 1"
      },
      "FLOAT_0_1_NOT_INCLUDE": {
        "type": "string",
        "pattern": "^((0\\.0*[1-9]{1}[0-9]*)|0)$",
        "description": "Float [0; 1)"
      },
      "FLOAT_NOT_INCLUDE_0_1": {
        "type": "string",
        "pattern": "^((0\\.0*[1-9]{1}[0-9]*)|1)$",
        "description": "Float (0; 1]"
      },
      "FQDN": {
        "type": "string",
        "pattern": "^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*)+(\\.[a-zA-Z0-9][\\-a-zA-Z0-9]{0,62})*(\\.|(\\.[a-zA-Z]{2,63}))$",
        "description": "example.com"
      },
      "FQDN_IP_ADDR": {
        "type": "string",
        "pattern": "(^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$)|(^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*)+(\\.[a-zA-Z0-9][\\-a-zA-Z0-9]{0,62})*(\\.|(\\.[a-zA-Z]{2,63}))$)",
        "description": "example.com or A.B.C.D"
      },
      "HEX": {
        "type": "string",
        "pattern": "^0[xX][0-9A-Fa-f]+$",
        "description": "Hex number (0xFEDCBA0)"
      },
      "HEX_STRING": {
        "type": "string",
        "pattern": "^([0-9A-Fa-f]{2})(:[0-9A-Fa-f]{2})*$",
        "description": "Hex sting (FE:DC:...)"
      },
      "HOSTNAME": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([\\-a-zA-Z0-9]{0,62}[a-zA-Z0-9]){0,1}(\\.[a-zA-Z0-9]([\\-a-zA-Z0-9]{0,62}[a-zA-Z0-9]){0,1})*",
        "description": "hostname/domain-name"
      },
      "IFNAME": {
        "type": "string",
        "pattern": "^((eth(0|[1-9][0-9]{0,3})\\.(0|[1-9][0-9]{0,3}))|(vlan([0-9]|[1-9][0-9]{1,2}|[1-3][0-9]{3}|40[0-8][0-9]|409[0-5]))|([A-Za-uw-z][A-Za-z0-9_\\-]{0,30}[A-Za-z](0|[1-9][0-9]{0,3})))$",
        "description": "IFNAME"
      },
      "IF_RANGE": {
        "type": "string",
        "pattern": "^(((([1-9][0-9]{0,13})|[0])(\\:((([1-9][0-9]{0,13})|[0]))?)?)|(\\:(([1-9][0-9]{0,13})|[0])))(,(((([1-9][0-9]{0,13})|[0])(\\:((([1-9][0-9]{0,13})|[0]))?)?)|(\\:(([1-9][0-9]{0,13})|[0]))))*",
        "description": "Interface range (e.g. :3,5,10:13,17:)"
      },
      "IPV6_ADDR": {
        "type": "string",
        "pattern": "^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))$",
        "description": "X:X::X:X"
      },
      "IPV6_ADDR_MAY_HAVE_BIT_MASK": {
        "type": "string",
        "pattern": "^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(\\/(1[012][0-8]|[0-9][0-9]|[0-9]))?$",
        "description": "X:X::X:X[/M]"
      },
      "IPV6_ADDR_WITH_BIT_MASK": {
        "type": "string",
        "pattern": "^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(\\/(1[012][0-8]|[0-9][0-9]|[0-9]))$",
        "description": "X:X::X:X/M"
      },
      "IP_ADDR": {
        "type": "string",
        "pattern": "^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$",
        "description": "A.B.C.D"
      },
      "IP_ADDR_MAY_HAVE_BIT_MASK": {
        "type": "string",
        "pattern": "^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\\/(3[012]|[12][0-9]|[0-9]))?$",
        "description": "A.B.C.D[/M]"
      },
      "IP_ADDR_NN": {
        "type": "string",
        "pattern": "(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)):([1-9]{1}|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])",
        "description": "A.B.C.D:NN"
      },
      "IP_ADDR_WITH_BIT_MASK": {
        "type": "string",
        "pattern": "^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\\/(3[012]|[12][0-9]|[0-9]))$",
        "description": "A.B.C.D/M"
      },
      "LATITUDE": {
        "type": "string",
        "pattern": "^[0-9]?[0-9](\\.?[0-9]{1,6})?[NS]$",
        "description": "Latitude"
      },
      "LINE_UP_TO_50": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f\\x5C]{1,50}$",
        "description": "String up to 50 characters (no backslash)"
      },
      "LINUX_PATH": {
        "type": "string",
        "pattern": "^[\\x01-\\x20\\.\\x22a-zA-Zа-яА-Я0-9_\\/\\+\\-]+$",
        "description": "Linux-like path"
      },
      "LIST_IP_ADDR_MAY_HAVE_BIT_MASK": {
        "type": "string",
        "pattern": "^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\\/(3[012]|[12][0-9]|[0-9]))?(,((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\\/(3[012]|[12][0-9]|[0-9]))?)*$",
        "description": "A.B.C.D[/M][,...]"
      },
      "LONGITUDE": {
        "type": "string",
        "pattern": "^1?[0-9]?[0-9](\\.?[0-9]{1,6})?[EW]$",
        "description": "Longitude"
      },
      "LSP_ID": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{2}-[0-9a-fA-F]{2}$",
        "description": "0123.4567.89AB.CD-EF"
      },
      "LSTRING_NO_QUOTES": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f\\']+$",
        "description": "String, no quotes"
      },
      "MAC_ADDR": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{12}|[0-9a-fA-F]{4}(\\.[0-9a-fA-F]{4}){2}|[0-9a-fA-F]{2}((:[0-9a-fA-F]{2}){5}|(\\-[0-9a-fA-F]{2}){5})$",
        "description": "AA:BB:CC:DD:EE:FF"
      },
      "MD5_HASH": {
        "type": "string",
        "pattern": "[0-9A-Fa-f]+",
        "description": "KEY"
      },
      "MULTIPLE_3_75": {
        "type": "string",
        "pattern": "^(0(\\.0{0,2})?|3\\.75|7\\.50?|11\\.25|15(\\.0{0,2})?|18\\.75|22\\.50?|26\\.25|30(\\.0{0,2})?|33\\.75|37\\.50?|41\\.25|45(\\.0{0,2})?|48\\.75|52\\.50?|56\\.25|60(\\.0{0,2})?|63\\.75|67\\.50?|71\\.25|75(\\.0{0,2})?|78\\.75|82\\.50?|86\\.25|90(\\.0{0,2})?|93\\.75|97\\.50?|101\\.25|105(\\.0{0,2})?|108\\.75|112\\.50?|116\\.25|120(\\.0{0,2})?|123\\.75|127\\.50?|131\\.25|135(\\.0{0,2})?|138\\.75|142\\.50?|146\\.25|150(\\.0{0,2})?|153\\.75|157\\.50?|161\\.25|165(\\.0{0,2})?|168\\.75|172\\.50?|176\\.25|180(\\.0{0,2})?|183\\.75|187\\.50?|191\\.25|195(\\.0{0,2})?|198\\.75|202\\.50?|206\\.25|210(\\.0{0,2})?|213\\.75|217\\.50?|221\\.25|225(\\.0{0,2})?|228\\.75|232\\.50?|236\\.25|240(\\.0{0,2})?|243\\.75|247\\.50?|251\\.25|255(\\.0{0,2})?|258\\.75|262\\.50?|266\\.25|270(\\.0{0,2})?|273\\.75|277\\.50?|281\\.25|285(\\.0{0,2})?|288\\.75|292\\.50?|296\\.25|300(\\.0{0,2})?|303\\.75|307\\.50?|311\\.25|315(\\.0{0,2})?|318\\.75|322\\.50?|326\\.25|330(\\.0{0,2})?|333\\.75|337\\.50?|341\\.25|345(\\.0{0,2})?|348\\.75|352\\.50?|356\\.25|360(\\.0{0,2})?|363\\.75|367\\.50?|371\\.25|375(\\.0{0,2})?|378\\.75|382\\.50?|386\\.25|390(\\.0{0,2})?|393\\.75|397\\.50?|401\\.25|405(\\.0{0,2})?|408\\.75|412\\.50?|416\\.25|420(\\.0{0,2})?|423\\.75|427\\.50?|431\\.25|435(\\.0{0,2})?|438\\.75|442\\.50?|446\\.25|450(\\.0{0,2})?|453\\.75|457\\.50?|461\\.25|465(\\.0{0,2})?|468\\.75|472\\.50?|476\\.25|480(\\.0{0,2})?|483\\.75|487\\.50?|491\\.25|495(\\.0{0,2})?|498\\.75|502\\.50?|506\\.25|510(\\.0{0,2})?|513\\.75|517\\.50?|521\\.25|525(\\.0{0,2})?|528\\.75|532\\.50?|536\\.25|540(\\.0{0,2})?|543\\.75|547\\.50?|551\\.25|555(\\.0{0,2})?|558\\.75|562\\.50?|566\\.25|570(\\.0{0,2})?|573\\.75|577\\.50?|581\\.25|585(\\.0{0,2})?|588\\.75|592\\.50?|596\\.25|600(\\.0{0,2})?|603\\.75|607\\.50?|611\\.25|615(\\.0{0,2})?|618\\.75|622\\.50?|626\\.25|630(\\.0{0,2})?|633\\.75|637\\.50?|641\\.25|645(\\.0{0,2})?|648\\.75|652\\.50?|656\\.25|660(\\.0{0,2})?|663\\.75|667\\.50?|671\\.25|675(\\.0{0,2})?|678\\.75|682\\.50?|686\\.25|690(\\.0{0,2})?|693\\.75|697\\.50?|701\\.25|705(\\.0{0,2})?|708\\.75|712\\.50?|716\\.25|720(\\.0{0,2})?|723\\.75|727\\.50?|731\\.25|735(\\.0{0,2})?|738\\.75|742\\.50?|746\\.25|750(\\.0{0,2})?|753\\.75|757\\.50?|761\\.25|765(\\.0{0,2})?|768\\.75|772\\.50?|776\\.25|780(\\.0{0,2})?|783\\.75|787\\.50?|791\\.25|795(\\.0{0,2})?|798\\.75|802\\.50?|806\\.25|810(\\.0{0,2})?|813\\.75|817\\.50?|821\\.25|825(\\.0{0,2})?|828\\.75|832\\.50?|836\\.25|840(\\.0{0,2})?|843\\.75|847\\.50?|851\\.25|855(\\.0{0,2})?|858\\.75|862\\.50?|866\\.25|870(\\.0{0,2})?|873\\.75|877\\.50?|881\\.25|885(\\.0{0,2})?|888\\.75|892\\.50?|896\\.25|900(\\.0{0,2})?|903\\.75|907\\.50?|911\\.25|915(\\.0{0,2})?|918\\.75|922\\.50?|926\\.25|930(\\.0{0,2})?|933\\.75|937\\.50?|941\\.25|945(\\.0{0,2})?|948\\.75|952\\.50?|956\\.25)$",
        "description": "Multiple of 3.75, 0...956.25"
      },
      "NETFLOW_MAXLIFE": {
        "type": "string",
        "pattern": "[0-9]+[wdH]{0,1}",
        "description": "number + type (w, d, H)"
      },
      "NETFLOW_MAXSIZE": {
        "type": "string",
        "pattern": "^([0-9]+[.]){0,1}[0-9]+[KMGT]{0,1}[B]{0,1}$",
        "description": "number + type (B, K, KB, M, MB, G, GB, T, TB)"
      },
      "NET_FILENAME": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f\\x22]{1,255}$",
        "description": "Filename, no double quotes, up to 255 chars"
      },
      "NET_ISO": {
        "type": "string",
        "pattern": "^[0-9A-Fa-f]{2}\\.([0-9A-Fa-f]{4}\\.){4,10}[0-9A-Fa-f]{2}$",
        "description": "XX.XXXX. ... .XXXX.XX"
      },
      "NET_WILD_MASK": {
        "type": "string",
        "pattern": "^(255\\.255\\.255\\.255)|(0\\.0\\.0\\.0)|(255\\.255\\.255\\.254)|(0\\.0\\.0\\.1)|(255\\.255\\.255\\.252)|(0\\.0\\.0\\.3)|(255\\.255\\.255\\.248)|(0\\.0\\.0\\.7)|(255\\.255\\.255\\.240)|(0\\.0\\.0\\.15)|(255\\.255\\.255\\.224)|(0\\.0\\.0\\.31)|(255\\.255\\.255\\.192)|(0\\.0\\.0\\.63)|(255\\.255\\.255\\.128)|(0\\.0\\.0\\.127)|(255\\.255\\.255\\.0)|(0\\.0\\.0\\.255)|(255\\.255\\.254\\.0)|(0\\.0\\.1\\.255)|(255\\.255\\.252\\.0)|(0\\.0\\.3\\.255)|(255\\.255\\.248\\.0)|(0\\.0\\.7\\.255)|(255\\.255\\.240\\.0)|(0\\.0\\.15\\.255)|(255\\.255\\.224\\.0)|(0\\.0\\.31\\.255)|(255\\.255\\.192\\.0)|(0\\.0\\.63\\.255)|(255\\.255\\.128\\.0)|(0\\.0\\.127\\.255)|(255\\.255\\.0\\.0)|(0\\.0\\.255\\.255)|(255\\.254\\.0\\.0)|(0\\.1\\.255\\.255)|(255\\.252\\.0\\.0)|(0\\.3\\.255\\.255)|(255\\.248\\.0\\.0)|(0\\.7\\.255\\.255)|(255\\.240\\.0\\.0)|(0\\.15\\.255\\.255)|(255\\.224\\.0\\.0)|(0\\.31\\.255\\.255)|(255\\.192\\.0\\.0)|(0\\.63\\.255\\.255)|(255\\.128\\.0\\.0)|(0\\.127\\.255\\.255)|(255\\.0\\.0\\.0)|(0\\.255\\.255\\.255)|(254\\.0\\.0\\.0)|(1\\.255\\.255\\.255)|(252\\.0\\.0\\.0)|(3\\.255\\.255\\.255)|(248\\.0\\.0\\.0)|(7\\.255\\.255\\.255)|(240\\.0\\.0\\.0)|(15\\.255\\.255\\.255)|(224\\.0\\.0\\.0)|(31\\.255\\.255\\.255)|(192\\.0\\.0\\.0)|(63\\.255\\.255\\.255)|(128\\.0\\.0\\.0)|(127\\.255\\.255\\.255)$",
        "description": "A.B.C.D"
      },
      "NOT_PATH": {
        "type": "string",
        "pattern": "^[^\\/].*",
        "description": "String not startnig with '/'"
      },
      "NUMBER": {
        "type": "string",
        "pattern": "^([0-9*#+X]+[.!]?)$",
        "description": "^([0-9*#+X]+[.!]"
      },
      "NUMS_1_8_LIST": {
        "type": "string",
        "pattern": "^([1-8]{1})([,\\-][1-8]{0,1})*$",
        "description": "Numbers [1;8]"
      },
      "OUI": {
        "type": "string",
        "pattern": "[0-9A-Fa-f]{2},[0-9A-Fa-f]{2},[0-9A-Fa-f]{2}$",
        "description": "OUI:3 hex octets (xx,xx,xx)"
      },
      "OUI_INFO": {
        "type": "string",
        "pattern": "[0-9A-Fa-f]{2}(,[0-9A-Fa-f]{2})*$",
        "description": "Hex string (xx,...)"
      },
      "PART_MAC_ADDR": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{2}(([:\\-][0-9a-fA-F]{2}){0,5})$",
        "description": "AA[:BB:..]."
      },
      "PERCENT": {
        "type": "string",
        "pattern": "^(([1-9][0-9]?)|100)%$",
        "description": "percent(%)"
      },
      "PHONE_NUMBER": {
        "type": "string",
        "pattern": "^\\+?[0-9]{1}([ \\-]?[0-9]{1,3}){1,4}$",
        "description": "Phone number"
      },
      "PORTS": {
        "type": "string",
        "pattern": "^[0-9]+(:[0-9]+)*$",
        "description": "a[:b]"
      },
      "PPTP_CLIENT_IP_RANGE": {
        "type": "string",
        "pattern": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\-(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",
        "description": "AAA.BBB.CCC.DDD-EEE"
      },
      "PREPEND": {
        "type": "string",
        "pattern": "^([0-9*#+X]*)$",
        "description": "^[0-9*#+X]*"
      },
      "PROFILE_NAME": {
        "type": "string",
        "pattern": "^([a-zA-Z0-9_]{1}[a-zA-Z0-9_\\:\\-]{0,62})$",
        "description": "Profile name"
      },
      "PROXY_URL": {
        "type": "string",
        "pattern": "(.+):[0-9]+",
        "description": "example.com:12345"
      },
      "QOS_ID": {
        "type": "string",
        "pattern": "^[0-9a-f]$|^[1-9a-f][0-9a-f]+$",
        "description": "Hex"
      },
      "RATE_VALUE": {
        "type": "string",
        "pattern": "^([0-9]|[1-9][0-9]+)[KMG]?(bit)?$",
        "description": "Rate Value"
      },
      "RATE_VALUE_KM": {
        "type": "string",
        "pattern": "^[0-9]+[KM]{0,1}$",
        "description": "Rate Value"
      },
      "RATE_VALUE_KMG": {
        "type": "string",
        "pattern": "^([1-9]|[1-9][0-9]+)[KMGkmg]{1}(bit){0,1}$",
        "description": "Rate Value"
      },
      "RATE_VALUE_QOS": {
        "type": "string",
        "pattern": "^([1-9]|[1-9][0-9]+)[KMG]?(bit)?$",
        "description": "Rate Value"
      },
      "REGEXP": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f\\']+$",
        "description": "Valid regexp"
      },
      "REMOTE_ADDR": {
        "type": "string",
        "pattern": "^([A-Za-z_][A-Za-z0-9_.]*\\@)([A-Za-z0-9_.]+)|(((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?)$",
        "description": "[user@]host"
      },
      "SID_LISTING": {
        "type": "string",
        "pattern": "^(([0-9]{1,14}(\\:([0-9]{1,14})?)?)|(\\:[0-9]{1,14}))(,(([0-9]{1,14}(\\:([0-9]{1,14})?)?)|(\\:[0-9]{1,14})))*",
        "description": "SID list (e.g. :10,1234,22:44,100000:)"
      },
      "SIGNED_FLOAT": {
        "type": "string",
        "pattern": "^\\-?[0-9]*\\.?[0-9]+$",
        "description": "Signed Float"
      },
      "SIMPLE_ASCII": {
        "type": "string",
        "pattern": "[A-Za-z0-9_.\\-]+",
        "description": "Alphanumeric, underscore, dot, hyphen"
      },
      "SIMPLE_NETBIOS_NAME": {
        "type": "string",
        "pattern": "^\\w{1,15}$",
        "description": "NetBIOS name"
      },
      "SIP_DIGIT": {
        "type": "string",
        "pattern": "[0-9#\\*]",
        "description": "Phone key"
      },
      "SIP_DIGITS": {
        "type": "string",
        "pattern": "[0-9#\\*]+",
        "description": "Phone key"
      },
      "SMALL_CHARS": {
        "type": "string",
        "pattern": "[a-z]+",
        "description": "lowercase characters"
      },
      "SPAN_CHAN_VALUE": {
        "type": "string",
        "pattern": "^[0-9][0-9]*\\.[0-9][0-9]*$",
        "description": "Span and channel number like 1.1"
      },
      "SSH_KEY_STRING": {
        "type": "string",
        "pattern": "([@:A-Za-z0-9._\\+\\-]*[ ]*)([A-Za-z0-9\\+/=]+)([ ]*[@:A-Za-z0-9._\\+\\-]*)",
        "description": "SSH public key"
      },
      "STORM_CONTROL_RATE": {
        "type": "string",
        "pattern": "^((30[6-9]K)|(3[1-9][0-9]K)|([4-9][0-9]{2}K)|([1-9][0-9]{3,5}K)|([1-9][0-9]{0,2}M)|(1000000K)|(1000M)|(1G))$",
        "description": "306K...1G"
      },
      "STRING": {
        "type": "string",
        "pattern": "^[^\\x01-\\x20]+$",
        "description": "String without spaces"
      },
      "STRING_ALL_SYMBOLS": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f]+$",
        "description": "LINE"
      },
      "STRING_NO_DOUBLE_QUOTES": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f\\x22]+$",
        "description": "String, no double quotes"
      },
      "STRING_NO_QUOTES": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f\\']{1,63}$",
        "description": "String, no quotes, up to 63 chars"
      },
      "SUBCOMMAND": {
        "type": "string",
        "pattern": "^.+$",
        "description": "subcommand"
      },
      "SWITCHPORT_RANGE": {
        "type": "string",
        "pattern": "^(([1-8]{1}(\\:([1-8]{1})?)?)|(\\:[1-8]{1}))(,(([1-8]{1}(\\:([1-8]{1})?)?)|(\\:[1-8]{1})))*",
        "description": "Switchport range (e.g. :2,5,7:)"
      },
      "SW_PORT_NAME": {
        "type": "string",
        "pattern": "^(switchport[1-8])$",
        "description": "switchport1-switchport8"
      },
      "SW_PORT_NAME_EXT": {
        "type": "string",
        "pattern": "^((switchport[1-8])|(cpu))$",
        "description": "switchport1-switchport8,cpu"
      },
      "SW_PORT_NAME_EXT_LIST": {
        "type": "string",
        "pattern": "^((cpu)|(CPU)|(switchport[1-8](-switchport[1-8])?))(,((cpu)|(CPU)|(switchport[1-8](-switchport[1-8])?)))*$",
        "description": "switchport1-switchport8,cpu"
      },
      "SW_PORT_NAME_LIST": {
        "type": "string",
        "pattern": "^(switchport[1-8](-switchport[1-8])?)(,(switchport[1-8](-switchport[1-8])?))*$",
        "description": "switchport1-switchport8"
      },
      "SW_PORT_NUM": {
        "type": "string",
        "pattern": "[1-8]{1}",
        "description": "<1-8>"
      },
      "SYSTEM_ID": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}$",
        "description": "AABB.CCDD.EEFF"
      },
      "TERMINAL_LENGTH": {
        "type": "string",
        "pattern": "^(auto|[0-9]+)$",
        "description": "auto| 0 (supress pagination) | positive number"
      },
      "TIME": {
        "type": "string",
        "pattern": "^([01][0-9]|2[0123]):([0-5][0-9])(:[0-5][0-9])?$",
        "description": "HH:MM[:SS]"
      },
      "TIME_FULL": {
        "type": "string",
        "pattern": "^([01][0-9]|2[0123]):([0-5][0-9])(:[0-5][0-9])$",
        "description": "HH:MM:SS"
      },
      "TZSTRING": {
        "type": "string",
        "pattern": "^[^\\ ]+$",
        "description": "Timezone definition"
      },
      "UINT_1_": {
        "type": "integer",
        "minimum": 1,
        "description": "<1-..>"
      },
      "UINT_2_": {
        "type": "string",
        "pattern": "([2-9]|[1-9][0-9]+)",
        "description": "2-..."
      },
      "UINT_BRIDGE": {
        "type": "string",
        "pattern": "[0-9]{,13}",
        "description": "0-..."
      },
      "UINT_HEX": {
        "type": "string",
        "pattern": "^[0-9]+|(0[xX][0-9A-Fa-f]+)$",
        "description": "Hex or Int number"
      },
      "USERNAME_UP_TO_31": {
        "type": "string",
        "pattern": "^[a-z_][a-z0-9_]{1,30}$",
        "description": "The username must be up to 32 characters long, must not start with a number, and can contain numbers, lowercase letters, and the '_' sign."
      },
      "UTC_HOURS_DIFF": {
        "type": "string",
        "pattern": "^[-+](0|[1-9]|1[012])$",
        "description": "+/-H"
      },
      "VID_RANGE_LIST": {
        "type": "string",
        "pattern": "^([1-9][0-9]{0,3}([\\-][1-9][0-9]{0,3})?)([\\,][1-9][0-9]{0,3}([\\-][1-9][0-9]{0,3})?)*$",
        "description": "VLAN ID range list"
      },
      "VLAN_NUMBER": {
        "type": "string",
        "pattern": "[0-9]{,11}",
        "description": "0-..."
      },
      "VLAN_WITH_INTERFACE": {
        "type": "string",
        "pattern": "^([0-9]+\\.[0-9]+)$",
        "description": "ifnum.vlan-id"
      },
      "VRF": {
        "type": "string",
        "pattern": "^[A-Za-z0-9_-]+$",
        "description": "VRF NAME (Only letters and numbers)"
      },
      "WAV_FILENAME": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\-]+\\.wav",
        "description": "string.wav"
      },
      "WORD": {
        "type": "string",
        "pattern": "^[^\\x01-\\x20]+$",
        "description": "WORD"
      },
      "WORD_UP_TO_31": {
        "type": "string",
        "pattern": "^[^\\x01-\\x20\\x5C]{1,31}$",
        "description": "String up to 31 symbols"
      },
      "WORD_UP_TO_8": {
        "type": "string",
        "pattern": "^[^\\x01-\\x20]{1,8}$",
        "description": "Word up to 8 symbols"
      },
      "CALL_PRIO": {
        "type": "integer",
        "minimum": 1,
        "maximum": 7,
        "description": "<1-7>"
      },
      "DAY": {
        "type": "integer",
        "minimum": 1,
        "maximum": 31,
        "description": "<1-31>"
      },
      "HELLO_TIME": {
        "type": "integer",
        "minimum": 1,
        "maximum": 180,
        "description": "<1-180>"
      },
      "HOUR": {
        "type": "integer",
        "minimum": 0,
        "maximum": 23,
        "description": "<0-23>"
      },
      "IGMP_QUERY_INTERVAL": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1800,
        "description": "<1-1800>"
      },
      "IGMP_VERSION": {
        "type": "integer",
        "minimum": 2,
        "maximum": 3,
        "description": "<2-3>"
      },
      "INTERFACE_NUMBER": {
        "type": "integer",
        "minimum": 0,
        "maximum": 9999,
        "description": "<0-9999>"
      },
      "IPSEC_LOGGING_LEVEL": {
        "type": "integer",
        "minimum": -1,
        "maximum": 4,
        "description": "<-1-4>"
      },
      "JOIN_PRUNE_INTERVAL": {
        "type": "integer",
        "minimum": 60,
        "maximum": 600,
        "description": "<60-600>"
      },
      "KEEP_ALIVE_TIMER": {
        "type": "integer",
        "minimum": 31,
        "maximum": 60000,
        "description": "<31-60000>"
      },
      "MAC_TABLE_SIZE": {
        "type": "integer",
        "minimum": 10,
        "maximum": 1000000,
        "description": "10-1000000"
      },
      "MINUTE": {
        "type": "integer",
        "minimum": 0,
        "maximum": 59,
        "description": "<0-59>"
      },
      "MONTH": {
        "type": "integer",
        "minimum": 1,
        "maximum": 12,
        "description": "<1-12>"
      },
      "POE_TPPL_LIMIT": {
        "type": "integer",
        "minimum": 1,
        "maximum": 300,
        "description": "<1-300>"
      },
      "QOS_AVPKT": {
        "type": "integer",
        "minimum": 171,
        "maximum": 4294967295,
        "description": "<171-4294967295>"
      },
      "QUEUE_COUNT": {
        "type": "integer",
        "minimum": 16,
        "maximum": 4096,
        "description": "16-4096"
      },
      "REGISTER_SUPPRESS_TIME": {
        "type": "integer",
        "minimum": 5,
        "maximum": 60000,
        "description": "<5-60000>"
      },
      "RESPONSE_VALUE": {
        "type": "integer",
        "minimum": 10,
        "maximum": 250,
        "description": "<10-250>"
      },
      "SERIAL_PORT_DATA_BITS": {
        "type": "integer",
        "minimum": 5,
        "maximum": 8,
        "description": "<5-8>"
      },
      "SERIAL_TELNET_PORT": {
        "type": "integer",
        "minimum": 1024,
        "maximum": 65535,
        "description": "<1024-65535>"
      },
      "SINT_65535_0": {
        "type": "integer",
        "minimum": -65535,
        "maximum": 0,
        "description": "<-65535-0>"
      },
      "TIME_RP": {
        "type": "integer",
        "minimum": 10,
        "maximum": 16383,
        "description": "<10-16383>"
      },
      "UINT": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4294967295,
        "description": "Unsigned integer"
      },
      "UINT13": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4095,
        "description": "<0-4095>"
      },
      "UINT16": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535,
        "description": "<0-65535>"
      },
      "UINT3": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7,
        "description": "<0-7>"
      },
      "UINT4": {
        "type": "integer",
        "minimum": 0,
        "maximum": 15,
        "description": "<0-15>"
      },
      "UINT6": {
        "type": "integer",
        "minimum": 0,
        "maximum": 63,
        "description": "<0-63>"
      },
      "UINT8": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255,
        "description": "<0-255>"
      },
      "UINT_0_1": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1,
        "description": "<0-1>"
      },
      "UINT_0_100": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100,
        "description": "<0-100>"
      },
      "UINT_0_100000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100000,
        "description": "<0-100000>"
      },
      "UINT_0_100000000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100000000,
        "description": "<0-100000000>"
      },
      "UINT_0_1048575": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1048575,
        "description": "<0-1048575>"
      },
      "UINT_0_12": {
        "type": "integer",
        "minimum": 0,
        "maximum": 12,
        "description": "<0-12>"
      },
      "UINT_0_127": {
        "type": "integer",
        "minimum": 0,
        "maximum": 127,
        "description": "<0-127>"
      },
      "UINT_0_128": {
        "type": "integer",
        "minimum": 0,
        "maximum": 128,
        "description": "<0-128>"
      },
      "UINT_0_1500": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1500,
        "description": "<0-1500>"
      },
      "UINT_0_16": {
        "type": "integer",
        "minimum": 0,
        "maximum": 16,
        "description": "<0-16>"
      },
      "UINT_0_16383": {
        "type": "integer",
        "minimum": 0,
        "maximum": 16383,
        "description": "<0-16383>"
      },
      "UINT_0_16777214": {
        "type": "integer",
        "minimum": 0,
        "maximum": 16777214,
        "description": "<0-16777214>"
      },
      "UINT_0_16777215": {
        "type": "integer",
        "minimum": 0,
        "maximum": 16777215,
        "description": "<0-16777215>"
      },
      "UINT_0_2": {
        "type": "integer",
        "minimum": 0,
        "maximum": 2,
        "description": "<0-2>"
      },
      "UINT_0_20": {
        "type": "integer",
        "minimum": 0,
        "maximum": 20,
        "description": "<0-20>"
      },
      "UINT_0_20000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 20000,
        "description": "<0-20000>"
      },
      "UINT_0_200000000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 200000000,
        "description": "<0-200000000>"
      },
      "UINT_0_2147483647": {
        "type": "integer",
        "minimum": 0,
        "maximum": 2147483647,
        "description": "<0-2147483647>"
      },
      "UINT_0_240": {
        "type": "integer",
        "minimum": 0,
        "maximum": 240,
        "description": "<0-240>"
      },
      "UINT_0_255": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255,
        "description": "<0-255>"
      },
      "UINT_0_3": {
        "type": "integer",
        "minimum": 0,
        "maximum": 3,
        "description": "<0-3>"
      },
      "UINT_0_30000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 30000,
        "description": "<0-30000>"
      },
      "UINT_0_31": {
        "type": "integer",
        "minimum": 0,
        "maximum": 31,
        "description": "<0-31>"
      },
      "UINT_0_32": {
        "type": "integer",
        "minimum": 0,
        "maximum": 32,
        "description": "<0-32>"
      },
      "UINT_0_3600": {
        "type": "integer",
        "minimum": 0,
        "maximum": 3600,
        "description": "<0-3600>"
      },
      "UINT_0_3600000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 3600000,
        "description": "<0-3600000>"
      },
      "UINT_0_4094": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4094,
        "description": "<0-4094>"
      },
      "UINT_0_4261412864": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4261412864,
        "description": "<0-4261412864>"
      },
      "UINT_0_4294967294": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4294967294,
        "description": "<0-4294967294>"
      },
      "UINT_0_4294967295": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4294967295,
        "description": "<0-4294967295>"
      },
      "UINT_0_512": {
        "type": "integer",
        "minimum": 0,
        "maximum": 512,
        "description": "<0-512>"
      },
      "UINT_0_60": {
        "type": "integer",
        "minimum": 0,
        "maximum": 60,
        "description": "<0-60>"
      },
      "UINT_0_600": {
        "type": "integer",
        "minimum": 0,
        "maximum": 600,
        "description": "<0-600>"
      },
      "UINT_0_60000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 60000,
        "description": "<0-60000>"
      },
      "UINT_0_600000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 600000,
        "description": "<0-600000>"
      },
      "UINT_0_61440": {
        "type": "integer",
        "minimum": 0,
        "maximum": 61440,
        "description": "<0-61440>"
      },
      "UINT_0_65534": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65534,
        "description": "<0-65534>"
      },
      "UINT_0_65535": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535,
        "description": "<0-65535>"
      },
      "UINT_0_7": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7,
        "description": "<0-7>"
      },
      "UINT_0_9000": {
        "type": "integer",
        "minimum": 0,
        "maximum": 9000,
        "description": "<0-9000>"
      },
      "UINT_0_999": {
        "type": "integer",
        "minimum": 0,
        "maximum": 999,
        "description": "<0-999>"
      },
      "UINT_1000_30000": {
        "type": "integer",
        "minimum": 1000,
        "maximum": 30000,
        "description": "<1000-30000>"
      },
      "UINT_100_199": {
        "type": "integer",
        "minimum": 100,
        "maximum": 199,
        "description": "<100-199>"
      },
      "UINT_100_500": {
        "type": "integer",
        "minimum": 100,
        "maximum": 500,
        "description": "<100-500>"
      },
      "UINT_10_1000000": {
        "type": "integer",
        "minimum": 10,
        "maximum": 1000000,
        "description": "<10-1000000>"
      },
      "UINT_10_1200": {
        "type": "integer",
        "minimum": 10,
        "maximum": 1200,
        "description": "<10-1200>"
      },
      "UINT_10_17": {
        "type": "integer",
        "minimum": 10,
        "maximum": 17,
        "description": "<10-17>"
      },
      "UINT_10_1800": {
        "type": "integer",
        "minimum": 10,
        "maximum": 1800,
        "description": "<10-1800>"
      },
      "UINT_10_21845": {
        "type": "integer",
        "minimum": 10,
        "maximum": 21845,
        "description": "<10-21845>"
      },
      "UINT_10_60000": {
        "type": "integer",
        "minimum": 10,
        "maximum": 60000,
        "description": "<10-60000>"
      },
      "UINT_10_65535": {
        "type": "integer",
        "minimum": 10,
        "maximum": 65535,
        "description": "<10-65535>"
      },
      "UINT_1280_65535": {
        "type": "integer",
        "minimum": 1280,
        "maximum": 65535,
        "description": "<1280-65535>"
      },
      "UINT_128_4352": {
        "type": "integer",
        "minimum": 128,
        "maximum": 4352,
        "description": "<128-4352>"
      },
      "UINT_1300_1999": {
        "type": "integer",
        "minimum": 1300,
        "maximum": 1999,
        "description": "<1300-1999>"
      },
      "UINT_1300_2699": {
        "type": "integer",
        "minimum": 1300,
        "maximum": 2699,
        "description": "<1300-2699>"
      },
      "UINT_15_600": {
        "type": "integer",
        "minimum": 15,
        "maximum": 600,
        "description": "<15-600>"
      },
      "UINT_16_1048575": {
        "type": "integer",
        "minimum": 16,
        "maximum": 1048575,
        "description": "<16-1048575>"
      },
      "UINT_16_52443": {
        "type": "integer",
        "minimum": 16,
        "maximum": 52443,
        "description": "<16-52443>"
      },
      "UINT_16_991": {
        "type": "integer",
        "minimum": 16,
        "maximum": 991,
        "description": "<16-991>"
      },
      "UINT_1993_2035": {
        "type": "integer",
        "minimum": 1993,
        "maximum": 2035,
        "description": "<1993-2035>"
      },
      "UINT_1_10": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "description": "<1-10>"
      },
      "UINT_1_100": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100,
        "description": "<1-100>"
      },
      "UINT_1_1000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000,
        "description": "<1-1000>"
      },
      "UINT_1_10000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10000,
        "description": "<1-10000>"
      },
      "UINT_1_1000000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000000,
        "description": "<1-1000000>"
      },
      "UINT_1_100000000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100000000,
        "description": "<1-100000000>"
      },
      "UINT_1_1023": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1023,
        "description": "<1-1023>"
      },
      "UINT_1_10240": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10240,
        "description": "<1-10240>"
      },
      "UINT_1_120": {
        "type": "integer",
        "minimum": 1,
        "maximum": 120,
        "description": "<1-120>"
      },
      "UINT_1_1440": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1440,
        "description": "<1-1440>"
      },
      "UINT_1_15": {
        "type": "integer",
        "minimum": 1,
        "maximum": 15,
        "description": "<1-15>"
      },
      "UINT_1_16": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16,
        "description": "<1-16>"
      },
      "UINT_1_16384": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16384,
        "description": "<1-16384>"
      },
      "UINT_1_16777214": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16777214,
        "description": "<1-16777214>"
      },
      "UINT_1_16777215": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16777215,
        "description": "<1-16777215>"
      },
      "UINT_1_1800": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1800,
        "description": "<1-1800>"
      },
      "UINT_1_199": {
        "type": "integer",
        "minimum": 1,
        "maximum": 199,
        "description": "<1-199>"
      },
      "UINT_1_2": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2,
        "description": "<1-2>"
      },
      "UINT_1_20": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20,
        "description": "<1-20>"
      },
      "UINT_1_20000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20000,
        "description": "<1-20000>"
      },
      "UINT_1_2147483": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2147483,
        "description": "<1-2147483>"
      },
      "UINT_1_2147483646": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2147483646,
        "description": "<1-2147483646>"
      },
      "UINT_1_2147483647": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2147483647,
        "description": "<1-2147483647>"
      },
      "UINT_1_21845": {
        "type": "integer",
        "minimum": 1,
        "maximum": 21845,
        "description": "<1-21845>"
      },
      "UINT_1_252": {
        "type": "integer",
        "minimum": 1,
        "maximum": 252,
        "description": "<1-252>"
      },
      "UINT_1_254": {
        "type": "integer",
        "minimum": 1,
        "maximum": 254,
        "description": "<1-254>"
      },
      "UINT_1_255": {
        "type": "integer",
        "minimum": 1,
        "maximum": 255,
        "description": "<1-255>"
      },
      "UINT_1_3": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3,
        "description": "<1-3>"
      },
      "UINT_1_3000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3000,
        "description": "<1-3000>"
      },
      "UINT_1_31": {
        "type": "integer",
        "minimum": 1,
        "maximum": 31,
        "description": "<1-31>"
      },
      "UINT_1_32511": {
        "type": "integer",
        "minimum": 1,
        "maximum": 32511,
        "description": "<1-32511>"
      },
      "UINT_1_3600": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3600,
        "description": "<1-3600>"
      },
      "UINT_1_365": {
        "type": "integer",
        "minimum": 1,
        "maximum": 365,
        "description": "<1-365>"
      },
      "UINT_1_4094": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4094,
        "description": "<1-4094>"
      },
      "UINT_1_4294967": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4294967,
        "description": "<1-4294967>"
      },
      "UINT_1_4294967294": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4294967294,
        "description": "<1-4294967294>"
      },
      "UINT_1_4294967295": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4294967295,
        "description": "<1-4294967295>"
      },
      "UINT_1_45": {
        "type": "integer",
        "minimum": 1,
        "maximum": 45,
        "description": "<1-45>"
      },
      "UINT_1_500": {
        "type": "integer",
        "minimum": 1,
        "maximum": 500,
        "description": "<1-500>"
      },
      "UINT_1_5000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 5000,
        "description": "<1-5000>"
      },
      "UINT_1_6": {
        "type": "integer",
        "minimum": 1,
        "maximum": 6,
        "description": "<1-6>"
      },
      "UINT_1_600": {
        "type": "integer",
        "minimum": 1,
        "maximum": 600,
        "description": "<1-600>"
      },
      "UINT_1_600000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 600000,
        "description": "<1-600000>"
      },
      "UINT_1_63": {
        "type": "integer",
        "minimum": 1,
        "maximum": 63,
        "description": "<1-63>"
      },
      "UINT_1_64": {
        "type": "integer",
        "minimum": 1,
        "maximum": 64,
        "description": "<1-64>"
      },
      "UINT_1_65235": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65235,
        "description": "<1-65235>"
      },
      "UINT_1_65535": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535,
        "description": "<1-65535>"
      },
      "UINT_1_8": {
        "type": "integer",
        "minimum": 1,
        "maximum": 8,
        "description": "<1-8>"
      },
      "UINT_1_99": {
        "type": "integer",
        "minimum": 1,
        "maximum": 99,
        "description": "<1-99>"
      },
      "UINT_1_9999": {
        "type": "integer",
        "minimum": 1,
        "maximum": 9999,
        "description": "<1-9999>"
      },
      "UINT_2000_2699": {
        "type": "integer",
        "minimum": 2000,
        "maximum": 2699,
        "description": "<2000-2699>"
      },
      "UINT_256_1073741824": {
        "type": "integer",
        "minimum": 256,
        "maximum": 1073741824,
        "description": "<256-1073741824>"
      },
      "UINT_256_4294967295": {
        "type": "integer",
        "minimum": 256,
        "maximum": 4294967295,
        "description": "<256-4294967295>"
      },
      "UINT_256_65535": {
        "type": "integer",
        "minimum": 256,
        "maximum": 65535,
        "description": "<256-65535>"
      },
      "UINT_25_999": {
        "type": "integer",
        "minimum": 25,
        "maximum": 999,
        "description": "<25-999>"
      },
      "UINT_2_100": {
        "type": "integer",
        "minimum": 2,
        "maximum": 100,
        "description": "<2-100>"
      },
      "UINT_2_20000": {
        "type": "integer",
        "minimum": 2,
        "maximum": 20000,
        "description": "<2-20000>"
      },
      "UINT_2_255": {
        "type": "integer",
        "minimum": 2,
        "maximum": 255,
        "description": "<2-255>"
      },
      "UINT_2_3": {
        "type": "integer",
        "minimum": 2,
        "maximum": 3,
        "description": "<2-3>"
      },
      "UINT_2_300": {
        "type": "integer",
        "minimum": 2,
        "maximum": 300,
        "description": "<2-300>"
      },
      "UINT_2_4094": {
        "type": "integer",
        "minimum": 2,
        "maximum": 4094,
        "description": "<2-4094>"
      },
      "UINT_2_4096": {
        "type": "integer",
        "minimum": 2,
        "maximum": 4096,
        "description": "<2-4096>"
      },
      "UINT_2_4294967295": {
        "type": "integer",
        "minimum": 2,
        "maximum": 4294967295,
        "description": "<2-4294967295>"
      },
      "UINT_2_64": {
        "type": "integer",
        "minimum": 2,
        "maximum": 64,
        "description": "<2-64>"
      },
      "UINT_2_8192": {
        "type": "integer",
        "minimum": 2,
        "maximum": 8192,
        "description": "<2-8192>"
      },
      "UINT_30_3600": {
        "type": "integer",
        "minimum": 30,
        "maximum": 3600,
        "description": "<30-3600>"
      },
      "UINT_30_65535": {
        "type": "integer",
        "minimum": 30,
        "maximum": 65535,
        "description": "<30-65535>"
      },
      "UINT_350_65535": {
        "type": "integer",
        "minimum": 350,
        "maximum": 65535,
        "description": "<350-65535>"
      },
      "UINT_360_65535": {
        "type": "integer",
        "minimum": 360,
        "maximum": 65535,
        "description": "<360-65535>"
      },
      "UINT_3_1350": {
        "type": "integer",
        "minimum": 3,
        "maximum": 1350,
        "description": "<3-1350>"
      },
      "UINT_3_16": {
        "type": "integer",
        "minimum": 3,
        "maximum": 16,
        "description": "<3-16>"
      },
      "UINT_3_254": {
        "type": "integer",
        "minimum": 3,
        "maximum": 254,
        "description": "<3-254>"
      },
      "UINT_3_50": {
        "type": "integer",
        "minimum": 3,
        "maximum": 50,
        "description": "<3-50>"
      },
      "UINT_3_6": {
        "type": "integer",
        "minimum": 3,
        "maximum": 6,
        "description": "<3-6>"
      },
      "UINT_3_65535": {
        "type": "integer",
        "minimum": 3,
        "maximum": 65535,
        "description": "<3-65535>"
      },
      "UINT_4096_4194304": {
        "type": "integer",
        "minimum": 4096,
        "maximum": 4194304,
        "description": "<4096-4194304>"
      },
      "UINT_4_1800": {
        "type": "integer",
        "minimum": 4,
        "maximum": 1800,
        "description": "<4-1800>"
      },
      "UINT_4_30": {
        "type": "integer",
        "minimum": 4,
        "maximum": 30,
        "description": "<4-30>"
      },
      "UINT_50_4294967": {
        "type": "integer",
        "minimum": 50,
        "maximum": 4294967,
        "description": "<50-4294967>"
      },
      "UINT_50_999": {
        "type": "integer",
        "minimum": 50,
        "maximum": 999,
        "description": "<50-999>"
      },
      "UINT_512_1492": {
        "type": "integer",
        "minimum": 512,
        "maximum": 1492,
        "description": "<512-1492>"
      },
      "UINT_576_65535": {
        "type": "integer",
        "minimum": 576,
        "maximum": 65535,
        "description": "<576-65535>"
      },
      "UINT_5_2147483647": {
        "type": "integer",
        "minimum": 5,
        "maximum": 2147483647,
        "description": "<5-2147483647>"
      },
      "UINT_5_30": {
        "type": "integer",
        "minimum": 5,
        "maximum": 30,
        "description": "<5-30>"
      },
      "UINT_5_300": {
        "type": "integer",
        "minimum": 5,
        "maximum": 300,
        "description": "<5-300>"
      },
      "UINT_5_32767": {
        "type": "integer",
        "minimum": 5,
        "maximum": 32767,
        "description": "<5-32767>"
      },
      "UINT_5_5000": {
        "type": "integer",
        "minimum": 5,
        "maximum": 5000,
        "description": "<5-5000>"
      },
      "UINT_5_60": {
        "type": "integer",
        "minimum": 5,
        "maximum": 60,
        "description": "<5-60>"
      },
      "UINT_5_65535": {
        "type": "integer",
        "minimum": 5,
        "maximum": 65535,
        "description": "<5-65535>"
      },
      "UINT_5_86400": {
        "type": "integer",
        "minimum": 5,
        "maximum": 86400,
        "description": "<5-86400>"
      },
      "UINT_60_3600": {
        "type": "integer",
        "minimum": 60,
        "maximum": 3600,
        "description": "<60-3600>"
      },
      "UINT_64_65536": {
        "type": "integer",
        "minimum": 64,
        "maximum": 65536,
        "description": "<64-65536>"
      },
      "UINT_64_95": {
        "type": "integer",
        "minimum": 64,
        "maximum": 95,
        "description": "<64-95>"
      },
      "UINT_68_65535": {
        "type": "integer",
        "minimum": 68,
        "maximum": 65535,
        "description": "<68-65535>"
      },
      "UINT_6_40": {
        "type": "integer",
        "minimum": 6,
        "maximum": 40,
        "description": "<6-40>"
      },
      "UINT_8192_2147483647": {
        "type": "integer",
        "minimum": 8192,
        "maximum": 2147483647,
        "description": "<8192-2147483647>"
      },
      "UINT_8_128": {
        "type": "integer",
        "minimum": 8,
        "maximum": 128,
        "description": "<8-128>"
      },
      "UINT_8_65464": {
        "type": "integer",
        "minimum": 8,
        "maximum": 65464,
        "description": "<8-65464>"
      },
      "VLAN_ID": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4094,
        "description": "<1-4094>"
      },
      "PASSWD_STRING": {
        "type": "string",
        "pattern": "^[^\\x01-\\x1f]{1,100}$",
        "description": "String without spaces, up 100 characters"
      },
      "null": {
        "type": "null"
      },
      "error_code": {
        "title": "error code",
        "description": "error code of operation, nonzero means error, string describes details of error",
        "type": "array",
        "prefixItems": [
          {
            "type": "integer"
          },
          {
            "type": [
              "string",
              "null"
            ]
          }
        ],
        "maxItems": 2,
        "minItems": 2
      },
      "out_generic": {
        "title": "generic output PDUs",
        "description": "JSON format of response PDU for the communication between web backend and mprdaemon. Objects cannot contain properties other than ['errCode', 'result', 'request']",
        "required": [
          "errCode",
          "result",
          "request"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errCode": {
            "$ref": "#/components/schemas/error_code"
          },
          "result": {},
          "request": {}
        }
      },
      "out_noanswer": {
        "$ref": "#/components/schemas/out_generic",
        "title": "output PDU with null result",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/null"
          }
        }
      },
      "out_serial_port_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read serial port list",
        "description": "Result of reading a list of all serial port names",
        "properties": {
          "result": {
            "type": "array",
            "description": "array of serial ports names",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "Serial port name"
            }
          }
        }
      },
      "in_serial_port_write": {
        "title": "request write serial port",
        "description": "Set serial port parameter",
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "Name of a serial port",
            "$ref": "#/components/schemas/STRING"
          },
          "speed": {
            "description": "Speed (baud rate)",
            "$ref": "#/components/schemas/BAUD_RATE"
          },
          "tcp_port": {
            "description": "TCP port",
            "$ref": "#/components/schemas/SERIAL_TELNET_PORT"
          },
          "data_bits": {
            "description": "Number of data bits",
            "$ref": "#/components/schemas/SERIAL_PORT_DATA_BITS"
          },
          "stop_bits": {
            "description": "Number of stop bits",
            "$ref": "#/components/schemas/SERIAL_PORT_STOP_BITS"
          },
          "parity": {
            "oneOf": [
              {
                "const": "none",
                "description": "No parity bit is sent and the transmission is shortened"
              },
              {
                "const": "odd",
                "description": "Parity bit is set so that the number of 1 bits is odd"
              },
              {
                "const": "even",
                "description": "Parity bit is set so that the number of 1 bits is even"
              },
              {
                "const": "mark",
                "description": "Parity bit is always set to the mark signal condition (1 bit value)"
              },
              {
                "const": "space",
                "description": "Always sends the parity bit in the space signal condition (0 bit value)"
              }
            ]
          },
          "flow_control": {
            "oneOf": [
              {
                "const": "none",
                "description": "Disable flow control"
              },
              {
                "const": "RTS/CTS",
                "description": "Enable hardware (RTS/CTS) flow control"
              },
              {
                "const": "XON/XOFF",
                "description": "Enable software flow control"
              }
            ]
          },
          "telnet": {
            "description": "Enable telnet",
            "type": "boolean"
          }
        }
      },
      "out_serial_port_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read serial port",
        "description": "Result of reading a serial port information",
        "properties": {
          "result": {
            "type": "array",
            "description": "array of serial ports names",
            "items": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of a serial port",
                  "$ref": "#/components/schemas/STRING"
                },
                "speed": {
                  "description": "Speed (baud rate)",
                  "$ref": "#/components/schemas/BAUD_RATE"
                },
                "tcp_port": {
                  "description": "TCP port",
                  "$ref": "#/components/schemas/SERIAL_TELNET_PORT"
                },
                "data_bits": {
                  "description": "Number of data bits",
                  "$ref": "#/components/schemas/SERIAL_PORT_DATA_BITS"
                },
                "stop_bits": {
                  "description": "Number of stop bits",
                  "$ref": "#/components/schemas/SERIAL_PORT_STOP_BITS"
                },
                "parity": {
                  "oneOf": [
                    {
                      "const": "none",
                      "description": "No parity bit is sent and the transmission is shortened"
                    },
                    {
                      "const": "odd",
                      "description": "Parity bit is set so that the number of 1 bits is odd"
                    },
                    {
                      "const": "even",
                      "description": "Parity bit is set so that the number of 1 bits is even"
                    },
                    {
                      "const": "mark",
                      "description": "Parity bit is always set to the mark signal condition (1 bit value)"
                    },
                    {
                      "const": "space",
                      "description": "Always sends the parity bit in the space signal condition (0 bit value)"
                    }
                  ]
                },
                "flow_control": {
                  "oneOf": [
                    {
                      "const": "none",
                      "description": "Disable flow control"
                    },
                    {
                      "const": "RTS/CTS",
                      "description": "Enable hardware (RTS/CTS) flow control"
                    },
                    {
                      "const": "XON/XOFF",
                      "description": "Enable software flow control"
                    }
                  ]
                },
                "telnet": {
                  "description": "Telnet is enabled",
                  "type": "boolean"
                },
                "connection": {
                  "description": "Connection status",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "snort_iface": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ids"
            ],
            "description": "IDS mode",
            "properties": {
              "ids": {
                "$ref": "#/components/schemas/IFNAME",
                "description": "interface name"
              }
            }
          },
          {
            "type": "string",
            "const": "ips",
            "description": "IPS mode"
          }
        ],
        "description": "SNORT interface"
      },
      "snort_alert_mode": {
        "oneOf": [
          {
            "type": "string",
            "const": "fast",
            "description": "Fast alert mode. Writes the alert in a simple format with a timestamp, alert message, source and destination IPs/ports"
          },
          {
            "type": "string",
            "const": "full",
            "description": "Full alert mode"
          },
          {
            "type": "string",
            "const": "none",
            "description": "Turns off alerting"
          }
        ]
      },
      "snort_alert": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "mode",
          "syslog"
        ],
        "description": "snort alerting mode",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/snort_alert_mode"
          },
          "syslog": {
            "type": "boolean",
            "description": "Send alerts to syslog"
          }
        }
      },
      "snort_alert_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "description": "snort alerting mode",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/snort_alert_mode"
          },
          "syslog": {
            "type": "boolean",
            "description": "Send alerts to syslog"
          }
        }
      },
      "snort_log_format": {
        "oneOf": [
          {
            "type": "string",
            "const": "binary",
            "description": "Binary mode"
          },
          {
            "type": "string",
            "const": "text",
            "description": "Text mode"
          }
        ]
      },
      "snort_iface_config": {
        "type": "object",
        "additionalProperties": false,
        "description": "interface configuration",
        "properties": {
          "sid": {
            "$ref": "#/components/schemas/SID_LISTING",
            "description": "Lists of forced rules"
          },
          "no-sid": {
            "$ref": "#/components/schemas/SID_LISTING",
            "description": "Lists of excluded rules"
          },
          "alert": {
            "$ref": "#/components/schemas/SID_LISTING",
            "description": "Lists of rules to be converted to `alert`"
          },
          "no-alert": {
            "$ref": "#/components/schemas/SID_LISTING",
            "description": "Lists of excluded alert rules"
          },
          "drop": {
            "$ref": "#/components/schemas/SID_LISTING",
            "description": "Lists of rules to be converted to `drop`"
          },
          "no-drop": {
            "$ref": "#/components/schemas/SID_LISTING",
            "description": "Lists of excluded drop rules"
          },
          "home-net": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Lists of IPv4 subnets HOME_NET"
          },
          "no-home-net": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Lists of excluded IPv4 subnets HOME_NET"
          },
          "external-net": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Lists of IPv4 subnets EXTERNAL_NET"
          },
          "no-external-net": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Lists of excluded IPv4 subnets EXTERNAL_NET"
          },
          "dns-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override DNS_SERVERS variable"
          },
          "no-dns-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from DNS_SERVERS"
          },
          "ftp-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override FTP_SERVERS variable"
          },
          "no-ftp-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from FTP_SERVERS"
          },
          "http-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override HTTP_SERVERS variable"
          },
          "no-http-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from HTTP_SERVERS"
          },
          "smtp-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override SMTP_SERVERS variable"
          },
          "no-smtp-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from SMTP_SERVERS"
          },
          "sql-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override SQL_SERVERS variable"
          },
          "no-sql-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from SQL_SERVERS"
          },
          "telnet-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override TELNET_SERVERS variable"
          },
          "no-telnet-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from TELNET_SERVERS"
          },
          "ssh-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override SSH_SERVERS variable"
          },
          "no-ssh-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from SSH_SERVERS"
          },
          "sip-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Override SIP_SERVERS variable"
          },
          "no-sip-servers": {
            "$ref": "#/components/schemas/LIST_IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "Exclude networks from SIP_SERVERS"
          },
          "http-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports HTTP_PORTS"
          },
          "no-http-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from HTTP_PORTS"
          },
          "shellcode-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports SHELLCODE_PORTS"
          },
          "no-shellcode-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from SHELLCODE_PORTS"
          },
          "ssh-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports SSH_PORTS"
          },
          "no-ssh-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from SSH_PORTS"
          },
          "ftp-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports FTP_PORTS"
          },
          "no-ftp-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from FTP_PORTS"
          },
          "oracle-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports ORACLE_PORTS"
          },
          "no-oracle-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from ORACLE_PORTS"
          },
          "sip-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports SIP_PORTS"
          },
          "no-sip-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from SIP_PORTS"
          },
          "gtp-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports GTP_PORTS"
          },
          "no-gtp-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from GTP_PORTS"
          },
          "file-date-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Override list of ports FILE_DATA_PORTS"
          },
          "no-file-date-ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "Exclude ports from FILE_DATA_PORTS"
          },
          "config": {
            "$ref": "#/components/schemas/STRING",
            "description": "Snort config file"
          }
        }
      },
      "snort_status": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "iface",
          "adm_state",
          "bConfigured",
          "state"
        ],
        "properties": {
          "iface": {
            "$ref": "#/components/schemas/snort_iface",
            "description": "SNORT instance"
          },
          "adm_state": {
            "type": "boolean",
            "description": "administrative state"
          },
          "bConfigured": {
            "type": "boolean",
            "description": "true if configured"
          },
          "state": {
            "type": "string",
            "description": "actual state"
          },
          "error": {
            "type": "string",
            "description": "optional: daemon error and so on"
          }
        }
      },
      "out_snort_configuration_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read snort instance configurations",
        "description": "Result of reading snort instance configurations",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "iface",
                "configuration"
              ],
              "properties": {
                "iface": {
                  "$ref": "#/components/schemas/snort_iface",
                  "description": "SNORT instance"
                },
                "configuration": {
                  "$ref": "#/components/schemas/snort_iface_config",
                  "description": "SNORT instance configuration"
                }
              }
            }
          }
        }
      },
      "in_snort_configuration_write": {
        "description": "Modify/add/delete SNORT configuration",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "iface": {
                        "$ref": "#/components/schemas/snort_iface",
                        "description": "SNORT instance"
                      },
                      "configuration": {
                        "$ref": "#/components/schemas/snort_iface_config",
                        "description": "SNORT instance configuration"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "iface": {
                        "$ref": "#/components/schemas/snort_iface",
                        "description": "SNORT instance"
                      },
                      "configuration": {
                        "$ref": "#/components/schemas/snort_iface_config",
                        "description": "SNORT instance configuration"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "iface": {
                        "$ref": "#/components/schemas/snort_iface",
                        "description": "SNORT instance"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_snort_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read snort status",
        "description": "Result of reading snort status",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "alert",
              "log-format",
              "status"
            ],
            "properties": {
              "alert": {
                "$ref": "#/components/schemas/snort_alert",
                "description": "SNORT alerting mode"
              },
              "log-format": {
                "$ref": "#/components/schemas/snort_log_format",
                "description": "SNORT logging format"
              },
              "status": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/snort_status",
                  "description": "SNORT instance status"
                }
              }
            }
          }
        }
      },
      "in_snort_test_write": {
        "description": "Run SNORT test config",
        "type": "object",
        "required": [
          "iface"
        ],
        "additionalProperties": false,
        "properties": {
          "iface": {
            "$ref": "#/components/schemas/snort_iface",
            "description": "test specific SNORT instance"
          }
        }
      },
      "in_snort_status_write": {
        "description": "Modify SNORT status/on/off/restart daemons",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "alert": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/snort_alert_w",
                            "description": "SNORT alerting mode"
                          },
                          {
                            "type": "null",
                            "description": "resert SNORT alerting mode to default state"
                          }
                        ]
                      },
                      "log-format": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/snort_log_format",
                            "description": "SNORT logging format"
                          },
                          {
                            "type": "null",
                            "description": "resert SNORT logging format to default state"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "on",
                "required": [
                  "on"
                ],
                "additionalProperties": false,
                "properties": {
                  "on": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/snort_iface",
                        "description": "turn on specific SNORT instance"
                      },
                      {
                        "type": "null",
                        "description": "turn on all configuired SNORT instances"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "title": "off",
                "required": [
                  "off"
                ],
                "additionalProperties": false,
                "properties": {
                  "off": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/snort_iface",
                        "description": "turn off specific SNORT instance"
                      },
                      {
                        "type": "null",
                        "description": "turn off all configuired SNORT instances"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "title": "restart",
                "required": [
                  "restart"
                ],
                "additionalProperties": false,
                "properties": {
                  "restart": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/snort_iface",
                        "description": "restart specific SNORT instance"
                      },
                      {
                        "type": "null",
                        "description": "restart all configuired SNORT instances"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "out_snort_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read SNORT available configs",
        "description": "Result of reading a list of available configs",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "SNORT config name"
            }
          }
        }
      },
      "out_snort_config_mgmt_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response importing/deleting configs",
        "description": "Result of importing/deleting/testing configs",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "aborted",
              "errorCode",
              "stdout",
              "stderr"
            ],
            "additionalProperties": false,
            "properties": {
              "aborted": {
                "type": "boolean"
              },
              "errorCode": {
                "type": "integer"
              },
              "stdout": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "stderr": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "snort_import_tftp": {
        "title": "TFTP",
        "description": "import from TFTP",
        "type": "object",
        "required": [
          "protocol",
          "client_ip",
          "remotedir"
        ],
        "additionalProperties": false,
        "properties": {
          "protocol": {
            "type": "string",
            "const": "tftp"
          },
          "client_ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "ip address of the server"
          },
          "remotedir": {
            "$ref": "#/components/schemas/STRING",
            "description": "directory on the remote server"
          }
        }
      },
      "snort_import_ftp": {
        "title": "FTP",
        "description": "import from FTP",
        "type": "object",
        "required": [
          "protocol",
          "client_ip",
          "remotedir"
        ],
        "additionalProperties": false,
        "properties": {
          "protocol": {
            "type": "string",
            "const": "ftp"
          },
          "client_ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "ip address of the server"
          },
          "remotedir": {
            "$ref": "#/components/schemas/STRING",
            "description": "directory on the remote server"
          }
        }
      },
      "snort_import_ftp_with_passwd": {
        "title": "FTP(with user/passwd)",
        "description": "import from FTP (non anonymous login)",
        "type": "object",
        "required": [
          "protocol",
          "client_ip",
          "remotedir",
          "user",
          "password"
        ],
        "additionalProperties": false,
        "properties": {
          "protocol": {
            "type": "string",
            "const": "ftp"
          },
          "client_ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "ip address of the server"
          },
          "remotedir": {
            "$ref": "#/components/schemas/STRING",
            "description": "directory on the remote server"
          },
          "user": {
            "type": "string",
            "description": "user for the remote host"
          },
          "password": {
            "type": "string",
            "description": "password for the remote host"
          }
        }
      },
      "snort_import_sftp": {
        "title": "SFTP",
        "description": "import from SFTP",
        "type": "object",
        "required": [
          "protocol",
          "client_ip",
          "remotedir",
          "user",
          "password"
        ],
        "additionalProperties": false,
        "properties": {
          "protocol": {
            "type": "string",
            "const": "sftp"
          },
          "client_ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "ip address of the server"
          },
          "remotedir": {
            "$ref": "#/components/schemas/STRING",
            "description": "directory on the remote server"
          },
          "user": {
            "type": "string",
            "description": "user for the remote host"
          },
          "password": {
            "type": "string",
            "description": "password for the remote host"
          }
        }
      },
      "snort_import_usb": {
        "title": "USB",
        "description": "import from USB",
        "type": "object",
        "required": [
          "protocol",
          "dev_name",
          "dir_name"
        ],
        "additionalProperties": false,
        "properties": {
          "protocol": {
            "type": "string",
            "const": "usb"
          },
          "dev_name": {
            "$ref": "#/components/schemas/FILENAME",
            "description": "mounted removable usb device, see `/usb_media/list` endpoint"
          },
          "dir_name": {
            "$ref": "#/components/schemas/FILENAME",
            "description": "directory on the removable usb device"
          }
        }
      },
      "in_snort_config_mgmt_write": {
        "description": "import/delete SNORT configs",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "import",
                "required": [
                  "import"
                ],
                "additionalProperties": false,
                "properties": {
                  "import": {
                    "required": [
                      "config_name",
                      "source"
                    ],
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config_name": {
                        "$ref": "#/components/schemas/STRING",
                        "description": "SNORT config name"
                      },
                      "source": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/snort_import_tftp"
                          },
                          {
                            "$ref": "#/components/schemas/snort_import_ftp"
                          },
                          {
                            "$ref": "#/components/schemas/snort_import_ftp_with_passwd"
                          },
                          {
                            "$ref": "#/components/schemas/snort_import_sftp"
                          },
                          {
                            "$ref": "#/components/schemas/snort_import_usb"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "required": [
                      "config_name"
                    ],
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config_name": {
                        "$ref": "#/components/schemas/STRING",
                        "description": "SNORT config name"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_snort_show_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read SNORT available configs",
        "description": "Result of reading a list of available configs",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "in_snort_log_show_write": {
        "description": "display SNORT log",
        "type": "object",
        "required": [
          "iface"
        ],
        "additionalProperties": false,
        "properties": {
          "iface": {
            "$ref": "#/components/schemas/snort_iface"
          },
          "lines_number": {
            "$ref": "#/components/schemas/UINT_1_1000",
            "description": "max number of lines to display"
          }
        }
      },
      "tacacs_server_address": {
        "description": "TACACS server address",
        "type": "string"
      },
      "common_tacacs": {
        "title": "common TACACS",
        "description": "Common object for TACACS settings",
        "type": "object",
        "unevaluatedProperties": false,
        "properties": {
          "accounting": {
            "type": "boolean",
            "description": "TACACS accounting is enabled"
          },
          "servers": {
            "type": "array",
            "description": "Array of all configured TACACS servers",
            "items": {
              "type": "object",
              "description": "Settings for TACACS server",
              "required": [
                "address",
                "password"
              ],
              "unevaluatedProperties": false,
              "properties": {
                "address": {
                  "description": "TACACS server address",
                  "$ref": "#/components/schemas/IP_ADDR"
                },
                "password": {
                  "description": "encrypted TACACS server password",
                  "$ref": "#/components/schemas/STRING"
                },
                "priority": {
                  "description": "TACACS server priority",
                  "$ref": "#/components/schemas/UINT_1_"
                }
              }
            }
          }
        }
      },
      "out_tacacs_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read TACACS",
        "description": "Result of reading TACACS servers settings",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/common_tacacs"
          }
        }
      },
      "in_tacacs_accounting_write": {
        "title": "request write TACACS accounting",
        "description": "Set TACACS accounting",
        "type": "object",
        "required": [
          "accounting"
        ],
        "additionalProperties": false,
        "properties": {
          "accounting": {
            "type": "boolean",
            "description": "TACACS accounting is enabled"
          }
        }
      },
      "out_tacacs_accounting_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read TACACS accounting",
        "description": "Result of reading TACACS accounting",
        "properties": {
          "result": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": [
              "accounting"
            ],
            "properties": {
              "accounting": {
                "type": "boolean",
                "description": "TACACS accounting is enabled"
              }
            }
          }
        }
      },
      "in_tacacs_servers_add_write": {
        "title": "request add TACACS server",
        "description": "Add TACACS server",
        "type": "object",
        "required": [
          "address",
          "password",
          "encrypted"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "description": "TACACS server address",
            "$ref": "#/components/schemas/IP_ADDR"
          },
          "password": {
            "description": "TACACS server password",
            "$ref": "#/components/schemas/STRING"
          },
          "encrypted": {
            "description": "If true, password must be entered in encrypted form, otherwise password will be in cleartext form",
            "type": "boolean"
          },
          "priority": {
            "description": "TACACS server priority",
            "$ref": "#/components/schemas/UINT_1_"
          }
        }
      },
      "in_tacacs_servers_delete_write": {
        "title": "request delete TACACS server",
        "description": "Delete TACACS server",
        "type": "object",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "description": "TACACS server address",
            "$ref": "#/components/schemas/IP_ADDR"
          }
        }
      },
      "out_tacacs_servers_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read TACACS server",
        "description": "Result of reading TACACS server settings",
        "properties": {
          "result": {
            "type": "object",
            "description": "Settings for TACACS server",
            "required": [
              "address",
              "password",
              "priority"
            ],
            "unevaluatedProperties": false,
            "properties": {
              "address": {
                "description": "TACACS server address",
                "$ref": "#/components/schemas/IP_ADDR"
              },
              "password": {
                "description": "encrypted TACACS server password",
                "$ref": "#/components/schemas/STRING"
              },
              "priority": {
                "description": "TACACS server priority",
                "$ref": "#/components/schemas/UINT_1_"
              }
            }
          }
        }
      },
      "out_tacacs_servers_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read TACACS servers list",
        "description": "Result of reading TACACS servers list",
        "properties": {
          "result": {
            "type": "object",
            "description": "Settings for TACACS server",
            "unevaluatedProperties": false,
            "required": [
              "servers"
            ],
            "properties": {
              "servers": {
                "type": "array",
                "description": "Array of all configured TACACS servers",
                "items": {
                  "description": "TACACS server address",
                  "$ref": "#/components/schemas/IP_ADDR"
                }
              }
            }
          }
        }
      },
      "out_poe_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read poe status",
        "description": "Result of reading poe status",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_poe_events_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read poe events",
        "description": "Result of reading PoE events",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_poe_interfaces_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read PoE interfaces",
        "description": "Result of reading PoE interfaces",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_poe_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read PoE config",
        "description": "Settings of PoE config",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "type",
              "temperature_threshold",
              "power_mode",
              "disconnection_method",
              "power_limit_mode"
            ],
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string"
              },
              "temperature_threshold": {
                "type": "integer"
              },
              "power_mode": {
                "type": "string"
              },
              "disconnection_method": {
                "type": "string"
              },
              "power_limit_mode": {
                "type": "string"
              }
            },
            "description": "PoE config lines"
          }
        }
      },
      "out_poe_config_iface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read PoE interface config",
        "description": "Settings of PoE interface config",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "switchport",
                "priority",
                "force_power",
                "operation_mode"
              ],
              "additionalProperties": false,
              "properties": {
                "switchport": {
                  "type": "string"
                },
                "priority": {
                  "type": "string"
                },
                "force_power": {
                  "type": "string"
                },
                "operation_mode": {
                  "type": "string"
                },
                "ppl": {
                  "type": "string"
                }
              }
            },
            "description": "PoE interface configurational settings"
          }
        }
      },
      "in_poe_ifaces_write": {
        "description": "Modify PoE interfaces (force power, priority, operation mode)",
        "type": "object",
        "required": [
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/interfaces_switchport_ifname",
            "description": "interface name"
          },
          "force_power": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Enable or disable force power"
          },
          "priority": {
            "type": "string",
            "enum": [
              "CRITICAL",
              "HIGH",
              "LOW"
            ],
            "description": "PoE priority value (CRITICAL|HIGH|LOW)"
          },
          "operation_mode": {
            "oneOf": [
              {
                "type": "string",
                "const": "PoE",
                "description": ">`PoE` - `IEEE802.3AF` or `2P BT 15w` depending on the PoE revision;"
              },
              {
                "type": "string",
                "const": "PoE+",
                "description": ">`PoE+` - `IEEE802.3AT` or `2P BT 30w` depending on the PoE revision"
              }
            ]
          }
        }
      },
      "in_poe_AT_ppl_write": {
        "description": "Set PoE Pre-defined Power Limit (PPL) for the chosen ports",
        "type": "object",
        "required": [
          "interface_name",
          "ppl_value"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/interfaces_switchport_ifname",
            "description": "interface name"
          },
          "ppl_value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_30000",
                "title": "ppl",
                "description": "Pre-defined power limit in mW"
              },
              {
                "type": "null",
                "title": "Default ppl",
                "description": "Default power-limit(32000mW)"
              }
            ]
          }
        }
      },
      "in_poe_tppl_write": {
        "description": "Set PoE Temporary Power Limit (0-300) for the chosen ports",
        "type": "object",
        "required": [
          "interface_name",
          "tppl_value"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/interfaces_switchport_ifname",
            "description": "interface name"
          },
          "tppl_value": {
            "$ref": "#/components/schemas/POE_TPPL_LIMIT",
            "title": "tppl",
            "description": "Temporary power limit in 0,1W"
          }
        }
      },
      "in_poe_control_write": {
        "description": "Turn on/off/restart PoE",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "restart"
            ],
            "description": "Set PoE on/off/restart"
          }
        }
      },
      "in_poe_AT_write": {
        "description": "Set PoE AT disconnection method and power-limit mode",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "pd_method": {
            "oneOf": [
              {
                "type": "string",
                "const": "higher-priority",
                "description": "If higher priority port powers up and its power exceeds power limit, a lowest priority port will be disconnected instead"
              },
              {
                "type": "string",
                "const": "ignore-priority",
                "description": "If power is not available for powering up any port, any new connected port power up will be denied, regardless of its priority"
              }
            ]
          },
          "pl_mode": {
            "oneOf": [
              {
                "type": "string",
                "const": "PPL",
                "description": "Pre-defined Power (set by the user);"
              },
              {
                "type": "string",
                "const": "class-based",
                "description": "Class power Limit."
              }
            ]
          }
        }
      },
      "in_poe_config_write": {
        "description": "Set total-power-mode and tempertature alarm for PoE",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "power_mode": {
            "oneOf": [
              {
                "type": "string",
                "const": "dynamic",
                "description": "Full Dynamics (Consumption)"
              },
              {
                "type": "string",
                "const": "static",
                "description": "Static power per port (TPPL)."
              }
            ]
          },
          "temperature": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_255",
                "title": "temperature threshold",
                "description": "Alarm temperature threshold(0-255)"
              },
              {
                "type": "null",
                "title": "default temperature threshold",
                "description": "Default temperature threshold(110 C)"
              }
            ]
          }
        }
      },
      "in_poe_reset_write": {
        "description": "Reset PoE controller, no additional parameters needed",
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "out_poe_reset_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the poe reset request",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "samba_share_settings_r": {
        "required": [
          "name",
          "type",
          "path",
          "mounted",
          "enabled",
          "uuid",
          "writable",
          "comment",
          "users",
          "audit"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Samba share name"
          },
          "type": {
            "enum": [
              "system (default)",
              "user-defined"
            ],
            "description": "Samba share type: system (default) or user-defined"
          },
          "enabled": {
            "type": "boolean",
            "description": "Enabled/Disabled sharing"
          },
          "mounted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/null",
                "description": "not mounted"
              },
              {
                "type": "string",
                "description": "Path to mount point"
              }
            ]
          },
          "uuid": {
            "$ref": "#/components/schemas/NOT_PATH",
            "description": "Disk partition UUID"
          },
          "path": {
            "$ref": "#/components/schemas/LINUX_PATH",
            "description": "Path to shared folder"
          },
          "writable": {
            "type": "boolean",
            "description": "Enabled/disabled write permissions"
          },
          "users": {
            "oneOf": [
              {
                "title": "allowable users",
                "type": "array",
                "description": "List of allowable users",
                "items": {
                  "description": "Samba user",
                  "type": "string"
                }
              },
              {
                "title": "public access",
                "$ref": "#/components/schemas/null",
                "description": "public access"
              }
            ]
          },
          "comment": {
            "type": "string",
            "description": "comment to the share"
          },
          "audit": {
            "type": "object",
            "required": [
              "failure",
              "success"
            ],
            "description": "Logging/audit options",
            "properties": {
              "failure": {
                "enum": [
                  "all",
                  "basic",
                  "disabled"
                ],
                "description": "Log failured operations"
              },
              "success": {
                "enum": [
                  "all",
                  "basic",
                  "disabled"
                ],
                "description": "Log successfull operations"
              }
            }
          }
        }
      },
      "samba_share_settings_w": {
        "required": [
          "share_name"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "share_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Samba share name"
          },
          "enable": {
            "type": "boolean",
            "description": "Enable/Disable sharing"
          },
          "disk": {
            "oneOf": [
              {
                "title": "uuid",
                "type": "object",
                "required": [
                  "uuid"
                ],
                "properties": {
                  "uuid": {
                    "$ref": "#/components/schemas/NOT_PATH",
                    "description": "Disk partition UUID"
                  }
                }
              },
              {
                "title": "mount path",
                "type": "object",
                "required": [
                  "mount_path"
                ],
                "properties": {
                  "mount_path": {
                    "type": "string",
                    "description": "Path to mount point"
                  }
                }
              }
            ]
          },
          "path": {
            "$ref": "#/components/schemas/LINUX_PATH",
            "description": "Path to shared folder"
          },
          "writable": {
            "type": "boolean",
            "description": "Enable/disable write permissions"
          },
          "users": {
            "oneOf": [
              {
                "title": "allowable users",
                "type": "array",
                "description": "List of allowable users. Empty list means `public access` ",
                "items": {
                  "description": "Samba user",
                  "$ref": "#/components/schemas/STRING"
                }
              },
              {
                "title": "public access",
                "$ref": "#/components/schemas/null",
                "description": "Restore public access to the share"
              }
            ]
          },
          "comment": {
            "oneOf": [
              {
                "title": "comment",
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "comment to the share"
              },
              {
                "title": "no comment",
                "$ref": "#/components/schemas/null",
                "description": "Remove comment to the share"
              }
            ]
          },
          "audit": {
            "type": "object",
            "description": "Logging/audit options",
            "oneOf": [
              {
                "title": "Enable",
                "type": "object",
                "properties": {
                  "failure": {
                    "enum": [
                      "all",
                      "basic",
                      "disabled"
                    ],
                    "description": "Log failured operations"
                  },
                  "success": {
                    "enum": [
                      "all",
                      "basic",
                      "disabled"
                    ],
                    "description": "Log successful operations"
                  }
                }
              },
              {
                "title": "Disable",
                "$ref": "#/components/schemas/null",
                "description": "Disable logging/audit options"
              }
            ]
          }
        }
      },
      "samba_server_settings_r": {
        "required": [
          "adm_state",
          "state",
          "workgroup",
          "netbios_name",
          "server_string",
          "ports",
          "interfaces",
          "dns_proxy",
          "protocol",
          "guest_account",
          "map_to_guest",
          "mounted_shares"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "adm_state": {
            "type": "boolean",
            "description": "Samba server administrative status"
          },
          "state": {
            "type": "boolean",
            "description": "Samba server real state"
          },
          "workgroup": {
            "type": "string",
            "description": "Workgroup name"
          },
          "netbios_name": {
            "$ref": "#/components/schemas/SIMPLE_NETBIOS_NAME",
            "description": "NetBIOS name"
          },
          "server_string": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Server String"
          },
          "ports": {
            "type": "array",
            "description": "List of port numbers",
            "items": {
              "description": "Port number",
              "$ref": "#/components/schemas/UINT"
            }
          },
          "interfaces": {
            "type": "array",
            "description": "List of interfaces",
            "items": {
              "description": "Interface name",
              "$ref": "#/components/schemas/IFNAME"
            }
          },
          "dns_proxy": {
            "$ref": "#/components/schemas/ON_OFF",
            "description": "DNS Proxy status"
          },
          "protocol": {
            "type": "string",
            "description": "Protocol"
          },
          "guest_account": {
            "type": "string",
            "description": "Guest Account"
          },
          "map_to_guest": {
            "type": "string",
            "description": "Map to Guest"
          },
          "mounted_shares": {
            "type": "array",
            "description": "List of mounted shares",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "share_name",
                "share_type"
              ],
              "properties": {
                "share_name": {
                  "type": "string",
                  "description": "Share name"
                },
                "share_type": {
                  "enum": [
                    "user-defined",
                    "system (default)"
                  ]
                }
              }
            }
          }
        }
      },
      "samba_server_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "workgroup": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/null",
                "description": "Reset workgoup name to default"
              },
              {
                "type": "string",
                "description": "Specify workgoup name"
              }
            ]
          },
          "netbios_name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/null",
                "description": "Reset the NetBIOS name to default"
              },
              {
                "$ref": "#/components/schemas/SIMPLE_NETBIOS_NAME",
                "description": "Specify the NetBIOS name"
              }
            ]
          },
          "server_string": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/null",
                "description": "Reset the Server String to default"
              },
              {
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "Specify the Server String"
              }
            ]
          },
          "dns_proxy": {
            "$ref": "#/components/schemas/ON_OFF",
            "description": "Turn on/off DNS Proxy"
          },
          "ports": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/null",
                "description": "Use default port list (445, 139)"
              },
              {
                "type": "array",
                "description": "List of port numbers",
                "items": {
                  "description": "Port number",
                  "$ref": "#/components/schemas/UINT"
                }
              }
            ]
          },
          "interfaces": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/null",
                "description": "Use default interface list (all active interfaces)"
              },
              {
                "type": "array",
                "description": "List of interfaces",
                "items": {
                  "description": "Interface name",
                  "$ref": "#/components/schemas/IFNAME"
                }
              }
            ]
          }
        }
      },
      "in_samba_server_state_write": {
        "title": "Turn on/off Samba Server",
        "description": "Switch Samba server on/off",
        "required": [
          "adm_state"
        ],
        "additionalProperties": false,
        "properties": {
          "adm_state": {
            "type": "boolean",
            "description": "Samba server administrative status"
          }
        }
      },
      "in_samba_server_restart_write": {
        "type": "null"
      },
      "out_samba_server_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get Samba server settings",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/samba_server_settings_r"
          }
        }
      },
      "in_samba_server_write": {
        "description": "Write Samba server settings, missing parameters are not touched, null parameters sets values to their default state",
        "type": "object",
        "required": [
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/samba_server_settings_w"
          }
        }
      },
      "in_samba_users_write": {
        "title": "Manage Samba users",
        "description": "Manage Samba users",
        "required": [
          "action",
          "user_name"
        ],
        "properties": {
          "action": {
            "enum": [
              "add",
              "password",
              "remove"
            ],
            "description": "Add Sumba user"
          },
          "user_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "User name"
          },
          "password": {
            "type": "string",
            "description": "Password. An empty password means NO PASSWORD"
          }
        },
        "if": {
          "title": "Remove",
          "properties": {
            "action": {
              "const": "remove"
            }
          }
        },
        "then": {
          "not": {
            "required": [
              "password"
            ]
          }
        },
        "else": {
          "required": [
            "password"
          ]
        }
      },
      "out_samba_users_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get list of Samba users",
        "properties": {
          "result": {
            "title": "response to out_samba_users_read request",
            "type": "object",
            "required": [
              "samba_users"
            ],
            "properties": {
              "samba_users": {
                "type": "array",
                "description": "List of Samba users",
                "items": {
                  "type": "string",
                  "description": "User name"
                }
              }
            }
          }
        }
      },
      "out_samba_share_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get Samba share settings",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/samba_share_settings_r"
          }
        }
      },
      "in_samba_share_write": {
        "description": "Write Samba share settings, missing parameters are not touched, null parameters sets values to their default state",
        "type": "object",
        "required": [
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/samba_share_settings_w"
          }
        }
      },
      "out_samba_shares_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get list of Samba shares",
        "properties": {
          "result": {
            "title": "response to out_samba_shares_read request",
            "type": "object",
            "required": [
              "samba_shares"
            ],
            "properties": {
              "samba_shares": {
                "type": "array",
                "description": "List of Samba shares",
                "items": {
                  "$ref": "#/components/schemas/samba_share_settings_r"
                }
              }
            }
          }
        }
      },
      "in_share_add_write": {
        "description": "Add Samba share",
        "type": "object",
        "required": [
          "share_name",
          "disk"
        ],
        "additionalProperties": false,
        "properties": {
          "share_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Share name"
          },
          "disk": {
            "oneOf": [
              {
                "title": "uuid",
                "type": "object",
                "required": [
                  "uuid"
                ],
                "properties": {
                  "uuid": {
                    "$ref": "#/components/schemas/NOT_PATH",
                    "description": "Disk partition UUID"
                  }
                }
              },
              {
                "title": "mount path",
                "type": "object",
                "required": [
                  "mount_path"
                ],
                "properties": {
                  "mount_path": {
                    "type": "string",
                    "description": "Path to mount point"
                  }
                }
              }
            ]
          }
        }
      },
      "in_share_delete_write": {
        "description": "Remove Samba share",
        "type": "object",
        "required": [
          "share_name"
        ],
        "additionalProperties": false,
        "properties": {
          "share_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Share name"
          }
        }
      },
      "out_usb_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "USB devices list",
        "properties": {
          "result": {
            "title": "response to out_usb_list_read request",
            "type": "object",
            "properties": {
              "usb_devices": {
                "type": "array",
                "description": "List of usb devices",
                "items": {
                  "description": "Usb device",
                  "required": [
                    "dev_name",
                    "serial_number"
                  ],
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "dev_name": {
                      "type": "string",
                      "description": "Device name"
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Device serial number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_usb_mounted_write": {
        "type": "null"
      },
      "out_usb_mounted_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Mounted USB devices list",
        "properties": {
          "result": {
            "title": "response to out_usb_mounted_read request",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "usb_mounted",
                  "stderr"
                ],
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "usb_mounted": {
                    "type": "array",
                    "description": "List of mounted usb disks",
                    "items": {
                      "description": "Usb device",
                      "required": [
                        "mount_path",
                        "dev_name",
                        "serial_number",
                        "model",
                        "uuid",
                        "file_system",
                        "size",
                        "ro_flag",
                        "physical_volume"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "mount_path": {
                          "type": "string",
                          "description": "USB media path"
                        },
                        "dev_name": {
                          "type": "string",
                          "description": "Device name"
                        },
                        "model": {
                          "type": "string",
                          "description": "Model"
                        },
                        "serial_number": {
                          "type": "string",
                          "description": "Serial number"
                        },
                        "uuid": {
                          "type": "string",
                          "description": "UUID"
                        },
                        "file_system": {
                          "type": "string",
                          "description": "File System Type"
                        },
                        "size": {
                          "type": "string",
                          "description": "Size"
                        },
                        "ro_flag": {
                          "type": "string",
                          "description": "RO flag"
                        },
                        "physical_volume": {
                          "type": "string",
                          "description": "Physical volume (for LVM)"
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "out_usb_media_dir_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Show files and directories",
        "properties": {
          "result": {
            "title": "response to out_usb_media_dir_read request",
            "type": "object",
            "properties": {
              "usb_devices": {
                "type": "array",
                "description": "List of usb devices",
                "items": {
                  "description": "Usb device",
                  "required": [
                    "dev_name",
                    "dir_name",
                    "content"
                  ],
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "dev_name": {
                      "type": "string",
                      "description": "Device name"
                    },
                    "dir_name": {
                      "type": "string",
                      "description": "The name of the directory to be shown"
                    },
                    "content": {
                      "type": "string",
                      "description": "Content"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_usb_mkdir_write": {
        "title": "Create directory ",
        "description": "Create directory on the drive/partition",
        "required": [
          "dev_name"
        ],
        "additionalProperties": false,
        "properties": {
          "dev_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Device name"
          },
          "dir_name": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "The name of the directory to be created"
          }
        }
      },
      "in_usb_rmdir_write": {
        "title": "Remove directory ",
        "description": "Remove directory on the drive/partition",
        "required": [
          "dev_name"
        ],
        "additionalProperties": false,
        "properties": {
          "dev_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Device name"
          },
          "dir_name": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "The name of the directory to be removed"
          }
        }
      },
      "in_usb_chmod_write": {
        "title": "Change permissions",
        "description": "Change files permissions on the drive/partition",
        "required": [
          "dev_name"
        ],
        "additionalProperties": false,
        "properties": {
          "dev_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Device name"
          },
          "dir_name": {
            "oneOf": [
              {
                "title": "root directory",
                "type": "null",
                "description": "The root directory permission will be changed"
              },
              {
                "title": "name",
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "The name of the directory to modify permissions"
              }
            ]
          }
        }
      },
      "in_usb_umount_write": {
        "title": "Unmount USB drive",
        "description": "Unmount USB drive",
        "required": [
          "dev_name"
        ],
        "additionalProperties": false,
        "properties": {
          "dev_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Device name"
          }
        }
      },
      "in_usb_format_write": {
        "title": "Format USB drive",
        "description": "Format USB drive",
        "required": [
          "dev_name",
          "filesystem"
        ],
        "additionalProperties": false,
        "properties": {
          "dev_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Device name"
          },
          "filesystem": {
            "$ref": "#/components/schemas/FILESYSTEM",
            "description": "Filesystem type"
          }
        }
      },
      "out_usb_format_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the request to usb format",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "result",
                  "log"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "result": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "log": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "common_opevpn_server_cipher_names": {
        "type": "string",
        "enum": [
          "AES-128-CBC",
          "AES-128-CFB",
          "AES-128-CFB1",
          "AES-128-CFB8",
          "AES-128-GCM",
          "AES-128-OFB",
          "AES-192-CBC",
          "AES-192-CFB",
          "AES-192-CFB1",
          "AES-192-CFB8",
          "AES-192-GCM",
          "AES-192-OFB",
          "AES-256-CBC",
          "AES-256-CFB",
          "AES-256-CFB1",
          "AES-256-CFB8",
          "AES-256-GCM",
          "AES-256-OFB",
          "ARIA-128-CBC",
          "ARIA-128-CFB",
          "ARIA-128-CFB1",
          "ARIA-128-CFB8",
          "ARIA-128-GCM",
          "ARIA-128-OFB",
          "ARIA-192-CBC",
          "ARIA-192-CFB",
          "ARIA-192-CFB1",
          "ARIA-192-CFB8",
          "ARIA-192-GCM",
          "ARIA-192-OFB",
          "ARIA-256-CBC",
          "ARIA-256-CFB",
          "ARIA-256-CFB1",
          "ARIA-256-CFB8",
          "ARIA-256-GCM",
          "ARIA-256-OFB",
          "CAMELLIA-128-CBC",
          "CAMELLIA-128-CFB",
          "CAMELLIA-128-CFB1",
          "CAMELLIA-128-CFB8",
          "CAMELLIA-128-OFB",
          "CAMELLIA-192-CBC",
          "CAMELLIA-192-CFB",
          "CAMELLIA-192-CFB1",
          "CAMELLIA-192-CFB8",
          "CAMELLIA-192-OFB",
          "CAMELLIA-256-CBC",
          "CAMELLIA-256-CFB",
          "CAMELLIA-256-CFB1",
          "CAMELLIA-256-CFB8",
          "CAMELLIA-256-OFB",
          "SEED-CBC",
          "SEED-CFB",
          "SEED-OFB",
          "SM4-CBC",
          "SM4-CFB",
          "SM4-OFB"
        ]
      },
      "in_openvpn_server_write": {
        "title": "request write OPENVPN server",
        "description": "Add or edit OPENVPN server configuration",
        "type": "object",
        "required": [
          "server_name"
        ],
        "additionalProperties": false,
        "properties": {
          "server_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Server common name"
          },
          "cipher": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "Set cipher algorithm to default value"
              },
              {
                "title": "cipher",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "cipher_type"
                ],
                "description": "Encrypt data channel packets with cipher algorithm",
                "properties": {
                  "all_connections": {
                    "type": "boolean",
                    "description": "Use this cipher for autonegotiations"
                  },
                  "cipher_type": {
                    "$ref": "#/components/schemas/common_opevpn_server_cipher_names",
                    "description": "Cipher type"
                  }
                }
              }
            ]
          },
          "client_max_number": {
            "oneOf": [
              {
                "type": "null",
                "title": "no limit",
                "description": "No limit on maximum number of clients"
              },
              {
                "title": "limit",
                "$ref": "#/components/schemas/UINT",
                "description": "Maximum number of clients"
              }
            ]
          },
          "client_to_client": {
            "type": "boolean",
            "description": "Enable client to client communication"
          },
          "compression": {
            "type": "boolean",
            "description": "Enable compression usage"
          },
          "device": {
            "oneOf": [
              {
                "title": "TUN",
                "type": "object",
                "description": "TLS mode",
                "required": [
                  "device_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "device_type": {
                    "const": "tun",
                    "description": "L3 tunnel"
                  }
                }
              },
              {
                "title": "TAP",
                "type": "object",
                "description": "TLS mode",
                "required": [
                  "device_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "device_type": {
                    "const": "tap",
                    "description": "L2 tunnel"
                  },
                  "device_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Device name"
                  }
                }
              }
            ]
          },
          "ip_pool_linear": {
            "type": "boolean",
            "description": "Assign addresses between clients linearly (tun mode)"
          },
          "keepalive": {
            "oneOf": [
              {
                "type": "null",
                "title": "delete timeouts",
                "description": "Delete keepalive timeouts"
              },
              {
                "title": "timeouts",
                "type": "object",
                "description": "keepalive timeouts",
                "additionalProperties": false,
                "required": [
                  "ping_timeout",
                  "dead_timeout"
                ],
                "properties": {
                  "ping_timeout": {
                    "$ref": "#/components/schemas/UINT",
                    "description": "Ping timeout"
                  },
                  "dead_timeout": {
                    "$ref": "#/components/schemas/UINT",
                    "description": "Dead timeout"
                  }
                }
              }
            ]
          },
          "local_address": {
            "oneOf": [
              {
                "type": "null",
                "title": "delete",
                "description": "Negate local server working address"
              },
              {
                "title": "address",
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "Local server working address"
              }
            ]
          },
          "protocol": {
            "type": "string",
            "enum": [
              "tcp",
              "udp"
            ],
            "description": "Protocol (TCP or UDP)"
          },
          "port": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Server port number"
          },
          "remote_host": {
            "oneOf": [
              {
                "type": "null",
                "title": "delete",
                "description": "Delete remote host IP address"
              },
              {
                "title": "address",
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "Remote host IP addresss"
              }
            ]
          },
          "server_mode": {
            "type": "string",
            "enum": [
              "static-key",
              "tls"
            ],
            "description": "Server mode."
          },
          "point_to_point": {
            "oneOf": [
              {
                "title": "TAP",
                "type": "object",
                "description": "Tunnel IP addresses for TAP mode",
                "required": [
                  "local_tap_address"
                ],
                "additionalProperties": false,
                "properties": {
                  "local_tap_address": {
                    "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                    "description": "Local IP address for tap mode"
                  }
                }
              },
              {
                "title": "TUN",
                "type": "object",
                "description": "Tunnel IP addresses for TUN mode",
                "required": [
                  "local_address",
                  "remote_address"
                ],
                "additionalProperties": false,
                "properties": {
                  "local_address": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Local IP address"
                  },
                  "remote_address": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Remote IP address"
                  }
                }
              },
              {
                "title": "Delete",
                "type": "null",
                "description": "Delete Tunnel IP addresses"
              }
            ]
          },
          "server_address": {
            "oneOf": [
              {
                "title": "address",
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "Server address (tun mode)"
              },
              {
                "title": "bridge-address",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "gateway_address",
                  "start_pool_address",
                  "stop_pool_address"
                ],
                "description": "Server address (tap mode)",
                "properties": {
                  "gateway_address": {
                    "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                    "description": "Gateway IP address"
                  },
                  "start_pool_address": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Start IP address in pool"
                  },
                  "stop_pool_address": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Stop IP address in pool"
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_server_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server",
        "description": "Result of reading OPENVPN server configuration",
        "properties": {
          "result": {
            "type": "object",
            "description": "OPENVPN server configuration",
            "additionalProperties": false,
            "required": [
              "admin_status",
              "real_status",
              "point_to_point",
              "keepalive",
              "server_address",
              "cipher",
              "server_mode",
              "client_max_number",
              "client_to_client",
              "compression",
              "device",
              "ip_pool_linear",
              "local_address",
              "protocol",
              "port",
              "remote_host"
            ],
            "properties": {
              "admin_status": {
                "type": "boolean",
                "description": "Administrative status"
              },
              "real_status": {
                "type": "boolean",
                "description": "Real status"
              },
              "cipher": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "default",
                    "description": "Default cipher"
                  },
                  {
                    "title": "cipher",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "cipher_type"
                    ],
                    "description": "Encrypt data channel packets with cipher algorithm",
                    "properties": {
                      "all_connections": {
                        "type": "boolean",
                        "description": "Use this cipher for autonegotiations"
                      },
                      "cipher_type": {
                        "$ref": "#/components/schemas/common_opevpn_server_cipher_names",
                        "description": "Cipher type"
                      }
                    }
                  }
                ]
              },
              "client_max_number": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "no limit",
                    "description": "No limit on maximum number of clients"
                  },
                  {
                    "title": "limit",
                    "$ref": "#/components/schemas/UINT",
                    "description": "Maximum number of clients"
                  }
                ]
              },
              "client_to_client": {
                "type": "boolean",
                "description": "Enable client to client communication"
              },
              "compression": {
                "type": "boolean",
                "description": "Enable compression usage"
              },
              "device": {
                "oneOf": [
                  {
                    "title": "TUN",
                    "type": "object",
                    "description": "TLS mode",
                    "required": [
                      "device_type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "device_type": {
                        "const": "tun",
                        "description": "L3 tunnel"
                      }
                    }
                  },
                  {
                    "title": "TAP",
                    "type": "object",
                    "description": "TLS mode",
                    "required": [
                      "device_type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "device_type": {
                        "const": "tap",
                        "description": "L2 tunnel"
                      },
                      "device_name": {
                        "$ref": "#/components/schemas/STRING",
                        "description": "Device name"
                      }
                    }
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "Device is not set"
                  }
                ]
              },
              "ip_pool_linear": {
                "type": "boolean",
                "description": "Assign addresses between clients linearly (tun mode)"
              },
              "keepalive": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "no timeouts",
                    "description": "Keepalive timeouts not set"
                  },
                  {
                    "title": "timeouts",
                    "type": "object",
                    "description": "keepalive timeouts",
                    "additionalProperties": false,
                    "required": [
                      "ping_timeout",
                      "dead_timeout"
                    ],
                    "properties": {
                      "ping_timeout": {
                        "$ref": "#/components/schemas/UINT",
                        "description": "Ping timeout"
                      },
                      "dead_timeout": {
                        "$ref": "#/components/schemas/UINT",
                        "description": "Dead timeout"
                      }
                    }
                  }
                ]
              },
              "local_address": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "not set",
                    "description": "No Local server working address"
                  },
                  {
                    "title": "address",
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Local server working address"
                  }
                ]
              },
              "protocol": {
                "oneOf": [
                  {
                    "title": "Protocol",
                    "type": "string",
                    "enum": [
                      "tcp",
                      "udp"
                    ],
                    "description": "Protocol (TCP or UDP)"
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "Protocol is not set"
                  }
                ]
              },
              "port": {
                "oneOf": [
                  {
                    "title": "Port",
                    "$ref": "#/components/schemas/UINT_1_65535",
                    "description": "Server port number"
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "Port not specified"
                  }
                ]
              },
              "remote_host": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "not set",
                    "description": "No remote host IP address"
                  },
                  {
                    "title": "address",
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Remote host IP addresss"
                  }
                ]
              },
              "server_mode": {
                "type": "string",
                "enum": [
                  "static-key",
                  "tls"
                ],
                "description": "Server mode."
              },
              "server_address": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "not set",
                    "description": "No server address"
                  },
                  {
                    "title": "address",
                    "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                    "description": "Server address (tun mode)"
                  },
                  {
                    "title": "bridge-address",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "gateway_address",
                      "start_pool_address",
                      "stop_pool_address"
                    ],
                    "description": "Server address (tap mode)",
                    "properties": {
                      "gateway_address": {
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                        "description": "Gateway IP address"
                      },
                      "start_pool_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Start IP address in pool"
                      },
                      "stop_pool_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Stop IP address in pool"
                      }
                    }
                  }
                ]
              },
              "point_to_point": {
                "oneOf": [
                  {
                    "title": "TAP",
                    "type": "object",
                    "description": "Tunnel IP addresses for TAP mode",
                    "required": [
                      "local_tap_address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "local_tap_address": {
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                        "description": "Local IP address for tap mode"
                      }
                    }
                  },
                  {
                    "title": "TUN",
                    "type": "object",
                    "description": "Tunnel IP addresses for TUN mode",
                    "required": [
                      "local_address",
                      "remote_address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "local_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Local IP address"
                      },
                      "remote_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Remote IP address"
                      }
                    }
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "Tunnel IP addresses is not set"
                  }
                ]
              }
            }
          }
        }
      },
      "in_openvpn_server_control_write": {
        "title": "request write OPENVPN server control",
        "description": "Control OPENVPN server (on/off/restart)",
        "type": "object",
        "required": [
          "server_name",
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "server_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Server common name"
          },
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "restart"
            ],
            "description": "Enable/disable/restart server"
          }
        }
      },
      "in_openvpn_server_push_client_write": {
        "title": "request write OPENVPN server push client",
        "description": "Push configuration or DHCP options to the client",
        "type": "object",
        "required": [
          "server_name",
          "client_name",
          "parameters"
        ],
        "additionalProperties": false,
        "properties": {
          "server_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Server common name"
          },
          "client_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Client common name"
          },
          "parameters": {
            "type": "object",
            "description": "settings",
            "oneOf": [
              {
                "title": "dhcp option",
                "unevaluatedProperties": false,
                "required": [
                  "dhcp_option"
                ],
                "description": "DHCP option (dns or wins server)",
                "properties": {
                  "dhcp_option": {
                    "type": "object",
                    "unevaluatedProperties": false,
                    "description": "DHCP option (dns or wins server)",
                    "required": [
                      "server_type",
                      "server_address",
                      "action"
                    ],
                    "properties": {
                      "server_type": {
                        "type": "string",
                        "enum": [
                          "dns",
                          "wins"
                        ],
                        "description": "server type: DNS or WINS"
                      },
                      "server_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Server address"
                      },
                      "action": {
                        "type": "string",
                        "enum": [
                          "add",
                          "del"
                        ],
                        "description": "Add or delete this parameter"
                      }
                    }
                  }
                }
              },
              {
                "title": "ip route",
                "unevaluatedProperties": false,
                "required": [
                  "ip_route"
                ],
                "description": "Push IP route configuration",
                "properties": {
                  "ip_route": {
                    "type": "object",
                    "oneOf": [
                      {
                        "title": "add ip route",
                        "required": [
                          "address",
                          "action"
                        ],
                        "unevaluatedProperties": false,
                        "properties": {
                          "address": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/IP_ADDR",
                                "description": "Network address"
                              },
                              {
                                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                                "description": "Network address with bit mask"
                              }
                            ]
                          },
                          "action": {
                            "const": "add",
                            "description": "add ip route"
                          },
                          "gateway": {
                            "type": "object",
                            "description": "gateway",
                            "required": [
                              "gateway_address"
                            ],
                            "properties": {
                              "gateway_address": {
                                "$ref": "#/components/schemas/IP_ADDR",
                                "description": "Gateway address"
                              },
                              "metric": {
                                "$ref": "#/components/schemas/UINT8",
                                "description": "Metric to route"
                              }
                            }
                          }
                        }
                      },
                      {
                        "title": "delete ip route",
                        "required": [
                          "address",
                          "action"
                        ],
                        "unevaluatedProperties": false,
                        "properties": {
                          "address": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/IP_ADDR",
                                "description": "Network address"
                              },
                              {
                                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                                "description": "Network address with bit mask"
                              }
                            ]
                          },
                          "action": {
                            "const": "del",
                            "description": "delete ip route"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "title": "point-to-point",
                "unevaluatedProperties": false,
                "description": "ifconfig-push parameter",
                "required": [
                  "point_to_point"
                ],
                "properties": {
                  "point_to_point": {
                    "oneOf": [
                      {
                        "title": "TAP",
                        "type": "object",
                        "description": "Tunnel IP addresses for TAP mode",
                        "required": [
                          "local_tap_address"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "local_tap_address": {
                            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                            "description": "Local IP address for tap mode"
                          }
                        }
                      },
                      {
                        "title": "TUN",
                        "type": "object",
                        "description": "Tunnel IP addresses for TUN mode",
                        "required": [
                          "local_address",
                          "remote_address"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "local_address": {
                            "$ref": "#/components/schemas/IP_ADDR",
                            "description": "Local IP address"
                          },
                          "remote_address": {
                            "$ref": "#/components/schemas/IP_ADDR",
                            "description": "Remote IP address"
                          }
                        }
                      },
                      {
                        "title": "Delete",
                        "type": "null",
                        "description": "Delete Tunnel IP addresses"
                      }
                    ]
                  }
                }
              },
              {
                "title": "ignore global push",
                "unevaluatedProperties": false,
                "description": "Ignore common to all clients pushed configuration",
                "required": [
                  "ignore_global_push"
                ],
                "properties": {
                  "ignore_global_push": {
                    "type": "boolean",
                    "description": "Ignore common to all clients pushed configuration"
                  }
                }
              },
              {
                "title": "redirect gateway",
                "unevaluatedProperties": false,
                "required": [
                  "redirect_gateway"
                ],
                "description": "Automatically execute routing commands to cause all outgoing IP traffic to be redirected over the VPN",
                "properties": {
                  "redirect_gateway": {
                    "type": "array",
                    "description": "Array of redirect gateway options",
                    "items": {
                      "type": "string",
                      "enum": [
                        "def1",
                        "local",
                        "autolocal",
                        "bypass-dhcp",
                        "bypass-dns",
                        "block-local",
                        "ipv6",
                        "!ipv4"
                      ],
                      "description": "redirect gateway option"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_server_check_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server check",
        "description": "Result of reading OPENVPN server minimal configuration check",
        "properties": {
          "result": {
            "type": "string",
            "description": "Check configuration output"
          }
        }
      },
      "out_openvpn_server_iproute_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server iproute",
        "description": "Result of reading OPENVPN server iproute settings",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "routes",
              "routes_to_client"
            ],
            "description": "Settings related to server/client routes",
            "properties": {
              "routes": {
                "type": "array",
                "description": "Array of after connection routes",
                "items": {
                  "type": "object",
                  "description": "after connection route",
                  "additionalProperties": false,
                  "required": [
                    "address"
                  ],
                  "properties": {
                    "address": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Network address"
                        },
                        {
                          "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                          "description": "Network address with bit mask"
                        }
                      ]
                    },
                    "gateway": {
                      "type": "object",
                      "description": "gateway",
                      "required": [
                        "gateway_address"
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "gateway_address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Gateway address"
                        },
                        "metric": {
                          "$ref": "#/components/schemas/UINT8",
                          "description": "Metric to route"
                        }
                      }
                    }
                  }
                }
              },
              "routes_to_client": {
                "type": "array",
                "description": "Array of client network routes",
                "items": {
                  "type": "object",
                  "description": "client network route",
                  "additionalProperties": false,
                  "required": [
                    "address",
                    "client_name"
                  ],
                  "properties": {
                    "address": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Network address"
                        },
                        {
                          "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                          "description": "Network address with bit mask"
                        }
                      ]
                    },
                    "client_name": {
                      "$ref": "#/components/schemas/STRING",
                      "description": "Client common name"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_openvpn_server_iproute_write": {
        "title": "request write OPENVPN server iproute",
        "description": "Add/delete after connection route or route to client network",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parameters"
        ],
        "properties": {
          "parameters": {
            "type": "object",
            "oneOf": [
              {
                "title": "add ip route",
                "required": [
                  "server_name",
                  "address",
                  "action"
                ],
                "description": "Add after connection route",
                "unevaluatedProperties": false,
                "properties": {
                  "server_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Server common name"
                  },
                  "address": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Network address"
                      },
                      {
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                        "description": "Network address with bit mask"
                      }
                    ]
                  },
                  "action": {
                    "const": "add",
                    "description": "add ip route"
                  },
                  "gateway": {
                    "type": "object",
                    "description": "gateway",
                    "required": [
                      "gateway_address"
                    ],
                    "unevaluatedProperties": false,
                    "properties": {
                      "gateway_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Gateway address"
                      },
                      "metric": {
                        "$ref": "#/components/schemas/UINT8",
                        "description": "Metric to route"
                      }
                    }
                  }
                }
              },
              {
                "title": "delete ip route",
                "required": [
                  "server_name",
                  "address",
                  "action"
                ],
                "description": "Delete after connection route",
                "unevaluatedProperties": false,
                "properties": {
                  "server_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Server common name"
                  },
                  "address": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Network address"
                      },
                      {
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                        "description": "Network address with bit mask"
                      }
                    ]
                  },
                  "action": {
                    "const": "del",
                    "description": "delete ip route"
                  }
                }
              },
              {
                "title": "add ip route client",
                "required": [
                  "client_name",
                  "server_name",
                  "address",
                  "action"
                ],
                "description": "Add route to client network",
                "unevaluatedProperties": false,
                "properties": {
                  "server_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Server common name"
                  },
                  "address": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Network address"
                      },
                      {
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                        "description": "Network address with bit mask"
                      }
                    ]
                  },
                  "action": {
                    "const": "add",
                    "description": "add ip route"
                  },
                  "client_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Client common name"
                  }
                }
              },
              {
                "title": "delete ip route client",
                "required": [
                  "client_name",
                  "server_name",
                  "address",
                  "action"
                ],
                "description": "Delete route to client network",
                "unevaluatedProperties": false,
                "properties": {
                  "server_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Server common name"
                  },
                  "address": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Network address"
                      },
                      {
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                        "description": "Network address with bit mask"
                      }
                    ]
                  },
                  "action": {
                    "const": "del",
                    "description": "delete ip route"
                  },
                  "client_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Client common name"
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_server_push_client_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server push client",
        "description": "Result of reading OPENVPN server push client parameters",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of parameters pushed to clients",
            "items": {
              "type": "object",
              "required": [
                "client_name"
              ],
              "additionalProperties": false,
              "properties": {
                "client_name": {
                  "$ref": "#/components/schemas/STRING",
                  "description": "Client common name"
                },
                "dhcp_option": {
                  "type": "array",
                  "description": "Array of DHCP options",
                  "items": {
                    "type": "object",
                    "unevaluatedProperties": false,
                    "description": "DHCP option (dns or wins server)",
                    "required": [
                      "server_type",
                      "server_address"
                    ],
                    "properties": {
                      "server_type": {
                        "type": "string",
                        "enum": [
                          "dns",
                          "wins"
                        ],
                        "description": "server type: DNS or WINS"
                      },
                      "server_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Server address"
                      }
                    }
                  }
                },
                "ip_route": {
                  "type": "array",
                  "description": "Array of ip routes",
                  "items": {
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "unevaluatedProperties": false,
                    "description": "ip route entry",
                    "properties": {
                      "address": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/IP_ADDR",
                            "description": "Network address"
                          },
                          {
                            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                            "description": "Network address with bit mask"
                          }
                        ]
                      },
                      "gateway": {
                        "type": "object",
                        "description": "gateway",
                        "required": [
                          "gateway_address"
                        ],
                        "unevaluatedProperties": false,
                        "properties": {
                          "gateway_address": {
                            "$ref": "#/components/schemas/IP_ADDR",
                            "description": "Gateway address"
                          },
                          "metric": {
                            "$ref": "#/components/schemas/UINT8",
                            "description": "Metric to route"
                          }
                        }
                      }
                    }
                  }
                },
                "point_to_point": {
                  "oneOf": [
                    {
                      "title": "TAP",
                      "type": "object",
                      "description": "Tunnel IP addresses for TAP mode",
                      "required": [
                        "local_tap_address"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "local_tap_address": {
                          "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                          "description": "Local IP address for tap mode"
                        }
                      }
                    },
                    {
                      "title": "TUN",
                      "type": "object",
                      "description": "Tunnel IP addresses for TUN mode",
                      "required": [
                        "local_address",
                        "remote_address"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "local_address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Local IP address"
                        },
                        "remote_address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Remote IP address"
                        }
                      }
                    }
                  ]
                },
                "ignore_global_push": {
                  "type": "boolean",
                  "description": "Ignore common to all clients pushed configuration"
                },
                "redirect_gateway": {
                  "type": "array",
                  "description": "Automatically execute routing commands to cause all outgoing IP traffic to be redirected over the VPN",
                  "items": {
                    "type": "string",
                    "enum": [
                      "def1",
                      "local",
                      "autolocal",
                      "bypass-dhcp",
                      "bypass-dns",
                      "block-local",
                      "ipv6",
                      "!ipv4"
                    ],
                    "description": "redirect gateway option"
                  }
                }
              }
            }
          }
        }
      },
      "in_openvpn_server_push_client_all_write": {
        "title": "request write OPENVPN server push client all",
        "description": "Push configuration or DHCP options to all clients",
        "type": "object",
        "required": [
          "server_name",
          "parameters"
        ],
        "additionalProperties": false,
        "properties": {
          "server_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Server common name"
          },
          "parameters": {
            "type": "object",
            "description": "settings",
            "oneOf": [
              {
                "title": "dhcp option",
                "unevaluatedProperties": false,
                "required": [
                  "dhcp_option"
                ],
                "description": "DHCP option (dns or wins server)",
                "properties": {
                  "dhcp_option": {
                    "type": "object",
                    "unevaluatedProperties": false,
                    "description": "DHCP option (dns or wins server)",
                    "required": [
                      "server_type",
                      "server_address",
                      "action"
                    ],
                    "properties": {
                      "server_type": {
                        "type": "string",
                        "enum": [
                          "dns",
                          "wins"
                        ],
                        "description": "server type: DNS or WINS"
                      },
                      "server_address": {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "Server address"
                      },
                      "action": {
                        "type": "string",
                        "enum": [
                          "add",
                          "del"
                        ],
                        "description": "Add or delete this parameter"
                      }
                    }
                  }
                }
              },
              {
                "title": "ip route",
                "unevaluatedProperties": false,
                "required": [
                  "ip_route"
                ],
                "description": "Push ip route configuration",
                "properties": {
                  "ip_route": {
                    "type": "object",
                    "oneOf": [
                      {
                        "title": "add ip route",
                        "required": [
                          "address",
                          "action"
                        ],
                        "unevaluatedProperties": false,
                        "description": "Add ip route",
                        "properties": {
                          "address": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/IP_ADDR",
                                "description": "Network address"
                              },
                              {
                                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                                "description": "Network address with bit mask"
                              }
                            ]
                          },
                          "action": {
                            "const": "add",
                            "description": "add ip route"
                          },
                          "gateway": {
                            "type": "object",
                            "description": "gateway",
                            "required": [
                              "gateway_address"
                            ],
                            "properties": {
                              "gateway_address": {
                                "$ref": "#/components/schemas/IP_ADDR",
                                "description": "Gateway address"
                              },
                              "metric": {
                                "$ref": "#/components/schemas/UINT8",
                                "description": "Metric to route"
                              }
                            }
                          }
                        }
                      },
                      {
                        "title": "delete ip route",
                        "required": [
                          "address",
                          "action"
                        ],
                        "unevaluatedProperties": false,
                        "description": "delete ip route",
                        "properties": {
                          "address": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/IP_ADDR",
                                "description": "Network address"
                              },
                              {
                                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                                "description": "Network address with bit mask"
                              }
                            ]
                          },
                          "action": {
                            "const": "del",
                            "description": "delete ip route"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "title": "redirect gateway",
                "unevaluatedProperties": false,
                "required": [
                  "redirect_gateway"
                ],
                "description": "Automatically execute routing commands to cause all outgoing IP traffic to be redirected over the VPN",
                "properties": {
                  "redirect_gateway": {
                    "type": "array",
                    "description": "Array of redirect gateway options",
                    "items": {
                      "type": "string",
                      "enum": [
                        "def1",
                        "local",
                        "autolocal",
                        "bypass-dhcp",
                        "bypass-dns",
                        "block-local",
                        "ipv6",
                        "!ipv4"
                      ],
                      "description": "redirect gateway option"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_server_push_client_all_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server push client all",
        "description": "Result of reading OPENVPN server push client all parameters",
        "properties": {
          "result": {
            "description": "Parameters pushed to all clients",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "dhcp_option": {
                "type": "array",
                "description": "Array of DHCP options",
                "items": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "description": "DHCP option (dns or wins server)",
                  "required": [
                    "server_type",
                    "server_address"
                  ],
                  "properties": {
                    "server_type": {
                      "type": "string",
                      "enum": [
                        "dns",
                        "wins"
                      ],
                      "description": "server type: DNS or WINS"
                    },
                    "server_address": {
                      "$ref": "#/components/schemas/IP_ADDR",
                      "description": "Server address"
                    }
                  }
                }
              },
              "ip_route": {
                "type": "array",
                "description": "Array of ip routes",
                "items": {
                  "type": "object",
                  "required": [
                    "address"
                  ],
                  "unevaluatedProperties": false,
                  "description": "ip route entry",
                  "properties": {
                    "address": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Network address"
                        },
                        {
                          "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                          "description": "Network address with bit mask"
                        }
                      ]
                    },
                    "gateway": {
                      "type": "object",
                      "description": "gateway",
                      "required": [
                        "gateway_address"
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "gateway_address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Gateway address"
                        },
                        "metric": {
                          "$ref": "#/components/schemas/UINT8",
                          "description": "Metric to route"
                        }
                      }
                    }
                  }
                }
              },
              "redirect_gateway": {
                "type": "array",
                "description": "Automatically execute routing commands to cause all outgoing IP traffic to be redirected over the VPN",
                "items": {
                  "type": "string",
                  "enum": [
                    "def1",
                    "local",
                    "autolocal",
                    "bypass-dhcp",
                    "bypass-dns",
                    "block-local",
                    "ipv6",
                    "!ipv4"
                  ],
                  "description": "redirect gateway option"
                }
              }
            }
          }
        }
      },
      "in_openvpn_server_export_write": {
        "title": "request write export server",
        "description": "Export server certificate and client keys via TFTP/SFTP server or flash",
        "type": "object",
        "required": [
          "server_name",
          "client_name",
          "mode"
        ],
        "additionalProperties": false,
        "properties": {
          "server_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN server name"
          },
          "client_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN client name"
          },
          "mode": {
            "oneOf": [
              {
                "title": "flash",
                "description": "Use flash",
                "type": "object",
                "required": [
                  "dev_name",
                  "mode_type"
                ],
                "unevaluatedProperties": false,
                "properties": {
                  "dev_name": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Device name"
                  },
                  "mode_type": {
                    "type": "string",
                    "const": "flash",
                    "description": "Flash or url"
                  }
                }
              },
              {
                "title": "url",
                "description": "Use url",
                "required": [
                  "protocol",
                  "server_address",
                  "mode_type"
                ],
                "unevaluatedProperties": false,
                "type": "object",
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "url",
                    "description": "Flash or url"
                  },
                  "protocol": {
                    "type": "object",
                    "description": "Specify protocol",
                    "oneOf": [
                      {
                        "title": "tftp",
                        "required": [
                          "protocol_type"
                        ],
                        "unevaluatedProperties": false,
                        "properties": {
                          "protocol_type": {
                            "type": "string",
                            "const": "tftp",
                            "description": "TFTP protocol"
                          }
                        }
                      },
                      {
                        "title": "sftp",
                        "required": [
                          "protocol_type",
                          "user_name",
                          "password"
                        ],
                        "unevaluatedProperties": false,
                        "properties": {
                          "protocol_type": {
                            "type": "string",
                            "const": "sftp",
                            "description": "SFTP protocol"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "login for remote server"
                          },
                          "password": {
                            "type": "string",
                            "description": "password for remote server"
                          }
                        }
                      }
                    ]
                  },
                  "server_address": {
                    "oneOf": [
                      {
                        "title": "ipv4",
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IP address of the server"
                      },
                      {
                        "title": "ipv6",
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address of the server"
                      },
                      {
                        "title": "fqdn",
                        "$ref": "#/components/schemas/FQDN",
                        "description": "fully qualified domain name"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "remotedir": {
            "$ref": "#/components/schemas/STRING",
            "description": "Directory on the remote server or flash drive"
          },
          "timeout": {
            "$ref": "#/components/schemas/UINT_1_120",
            "description": "Transaction timeout in seconds"
          }
        }
      },
      "out_openvpn_server_export_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server export",
        "description": "Result of export script",
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null",
                "description": "export was never called"
              },
              {
                "type": "object",
                "description": "Status of export script",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean",
                    "description": "export was aborted"
                  },
                  "errorCode": {
                    "type": "integer",
                    "description": "Error code returned by export. -1 indicates that export in progress."
                  },
                  "stdout": {
                    "type": "string",
                    "description": "Standard output returned by export"
                  },
                  "stderr": {
                    "type": "string",
                    "description": "Error output returned by export"
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_server_keys_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server keys",
        "description": "Result of reading OPENVPN server keys",
        "properties": {
          "result": {
            "type": "object",
            "description": "VPN server/client keys",
            "required": [],
            "additionalProperties": false,
            "properties": {
              "key_list": {
                "type": "string",
                "description": "List of generated keys"
              },
              "server_cert": {
                "type": "string",
                "description": "Server certificate"
              },
              "server_dh": {
                "type": "string",
                "description": "Server Diffie-Hellman parameters"
              },
              "server_key": {
                "type": "string",
                "description": "Server private key"
              },
              "client_cert": {
                "type": "string",
                "description": "Client certificate"
              },
              "client_key": {
                "type": "string",
                "description": "Client key"
              }
            }
          }
        }
      },
      "in_openvpn_server_keys_build_write": {
        "title": "request write server build keys",
        "description": "Generate server/client keys",
        "type": "object",
        "required": [
          "server_name"
        ],
        "additionalProperties": false,
        "properties": {
          "server_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN server name"
          },
          "parameters": {
            "oneOf": [
              {
                "type": "object",
                "title": "server static",
                "required": [
                  "key_type"
                ],
                "description": "Generate server static keys",
                "unevaluatedProperties": false,
                "properties": {
                  "key_type": {
                    "const": "server static",
                    "description": "Server static keys"
                  },
                  "credentials": {
                    "type": "object",
                    "description": "Key credentials",
                    "properties": {
                      "country_name": {
                        "type": "string",
                        "pattern": "^[A-Z][A-Z]$",
                        "description": "Country Name (2 letter code) (default: RU)"
                      },
                      "province_name": {
                        "type": "string",
                        "description": "State or Province Name (full name) (default: MSK)"
                      },
                      "locality_name": {
                        "type": "string",
                        "description": "Locality Name (eg, city) (default: Moscow)"
                      },
                      "organization_name": {
                        "type": "string",
                        "description": "Organization Name (eg, company) (default: YourCompany)"
                      },
                      "section_name": {
                        "type": "string",
                        "description": "Organizational Unit Name (eg, section) (default: changeme)"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name (default: changeme)"
                      },
                      "email_name": {
                        "type": "string",
                        "description": "Email Address (default: mail@host.domain)"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "server tls",
                "required": [
                  "key_type"
                ],
                "description": "Generate server Diffie Hellman key (ATTENTION: this may take a few minutes)",
                "unevaluatedProperties": false,
                "properties": {
                  "key_type": {
                    "const": "server tls",
                    "description": "Server Diffie Hellman key"
                  }
                }
              },
              {
                "type": "object",
                "title": "client",
                "required": [
                  "key_type",
                  "client_name"
                ],
                "description": "Generate client keys",
                "unevaluatedProperties": false,
                "properties": {
                  "key_type": {
                    "const": "client",
                    "description": "Client keys"
                  },
                  "client_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "OPENVPN client name"
                  },
                  "credentials": {
                    "type": "object",
                    "description": "Key credentials",
                    "properties": {
                      "country_name": {
                        "type": "string",
                        "pattern": "^[A-Z][A-Z]$",
                        "description": "Country Name (2 letter code) (default: RU)"
                      },
                      "province_name": {
                        "type": "string",
                        "description": "State or Province Name (full name) (default: MSK)"
                      },
                      "locality_name": {
                        "type": "string",
                        "description": "Locality Name (eg, city) (default: Moscow)"
                      },
                      "organization_name": {
                        "type": "string",
                        "description": "Organization Name (eg, company) (default: YourCompany)"
                      },
                      "section_name": {
                        "type": "string",
                        "description": "Organizational Unit Name (eg, section) (default: changeme)"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name (default: changeme)"
                      },
                      "email_name": {
                        "type": "string",
                        "description": "Email Address (default: mail@host.domain)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_server_keys_build_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server keys build",
        "description": "Result of build keys script",
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null",
                "description": "build keys was never called"
              },
              {
                "type": "object",
                "description": "Status of build keys script",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean",
                    "description": "build keys was aborted"
                  },
                  "errorCode": {
                    "type": "integer",
                    "description": "Error code returned by build keys. -1 indicates that build keys in progress."
                  },
                  "stdout": {
                    "type": "string",
                    "description": "Standard output returned by build keys"
                  },
                  "stderr": {
                    "type": "string",
                    "description": "Error output returned by build keys"
                  }
                }
              }
            ]
          }
        }
      },
      "in_openvpn_server_keys_noclient_write": {
        "title": "request write server keys noclient",
        "description": "Revoke client keys and certificate",
        "type": "object",
        "required": [
          "server_name",
          "client_name"
        ],
        "additionalProperties": false,
        "properties": {
          "server_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN server name"
          },
          "client_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN client name"
          },
          "only_keys": {
            "type": "boolean",
            "description": "Delete client keys"
          }
        }
      },
      "out_openvpn_server_keys_noclient_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server keys noclient",
        "description": "Result of noclient script",
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null",
                "description": "noclient was never called"
              },
              {
                "type": "object",
                "description": "Status of noclient script",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean",
                    "description": "noclient was aborted"
                  },
                  "errorCode": {
                    "type": "integer",
                    "description": "Error code returned by noclient. -1 indicates that noclient in progress."
                  },
                  "stdout": {
                    "type": "string",
                    "description": "Standard output returned by noclient"
                  },
                  "stderr": {
                    "type": "string",
                    "description": "Error output returned by noclient"
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_server_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN server list",
        "description": "Result of reading a list of OPENVPN servers",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of server names",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "OPENVPN server name"
            }
          }
        }
      },
      "in_openvpn_client_write": {
        "title": "request write OPENVPN client",
        "description": "Add or edit OPENVPN client configuration",
        "type": "object",
        "required": [
          "client_name"
        ],
        "additionalProperties": false,
        "properties": {
          "client_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN client name"
          },
          "compression": {
            "type": "boolean",
            "description": "Compression usage"
          },
          "dynamic_port_number": {
            "type": "boolean",
            "description": "Dynamic port number"
          },
          "protocol": {
            "type": "string",
            "enum": [
              "tcp",
              "udp"
            ],
            "description": "Protocol (TCP or UDP)"
          },
          "device": {
            "oneOf": [
              {
                "title": "TUN",
                "type": "object",
                "description": "TLS mode",
                "required": [
                  "device_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "device_type": {
                    "const": "tun",
                    "description": "L3 tunnel"
                  }
                }
              },
              {
                "title": "TAP",
                "type": "object",
                "description": "TLS mode",
                "required": [
                  "device_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "device_type": {
                    "const": "tap",
                    "description": "L2 tunnel"
                  },
                  "device_name": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Device name"
                  }
                }
              }
            ]
          },
          "dhcp_option_dns": {
            "oneOf": [
              {
                "title": "ip address",
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "DHCP option DNS ip address"
              },
              {
                "title": "Not set",
                "type": "null",
                "description": "DHCP option DNS is not set"
              }
            ]
          },
          "dhcp_option_wins": {
            "oneOf": [
              {
                "title": "ip address",
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "DHCP option WINS ip address"
              },
              {
                "title": "Not set",
                "type": "null",
                "description": "DHCP option WINS is not set"
              }
            ]
          },
          "remote_random": {
            "type": "boolean",
            "description": "Use specified server addresses in random order"
          },
          "resolv_infinite": {
            "type": "boolean",
            "description": "Server address resolve time is infinite"
          },
          "server_addresses": {
            "type": "array",
            "description": "Array of server addresses",
            "items": {
              "type": "object",
              "description": "Server address",
              "additionalProperties": false,
              "required": [
                "server_address"
              ],
              "properties": {
                "server_address": {
                  "$ref": "#/components/schemas/STRING",
                  "description": "Server FQDN or ip address"
                },
                "port_number": {
                  "$ref": "#/components/schemas/UINT_1_65535",
                  "description": "Server port number (1194 if not specified)"
                }
              }
            }
          }
        }
      },
      "out_openvpn_client_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN client",
        "description": "Result of reading OPENVPN client configuration",
        "properties": {
          "result": {
            "type": "object",
            "description": "Openvpn client configuration",
            "required": [
              "admin_status",
              "real_status",
              "compression",
              "dynamic_port_number",
              "protocol",
              "device",
              "dhcp_option_dns",
              "dhcp_option_wins",
              "remote_random"
            ],
            "additionalProperties": false,
            "properties": {
              "admin_status": {
                "type": "boolean",
                "description": "Administrative status"
              },
              "real_status": {
                "type": "boolean",
                "description": "Real status"
              },
              "compression": {
                "type": "boolean",
                "description": "Compression usage"
              },
              "dynamic_port_number": {
                "type": "boolean",
                "description": "Dynamic port number"
              },
              "protocol": {
                "oneOf": [
                  {
                    "title": "Protocol",
                    "type": "string",
                    "enum": [
                      "tcp",
                      "udp"
                    ],
                    "description": "Protocol (TCP or UDP)"
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "Protocol is not set"
                  }
                ]
              },
              "device": {
                "oneOf": [
                  {
                    "title": "TUN",
                    "type": "object",
                    "description": "TLS mode",
                    "required": [
                      "device_type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "device_type": {
                        "const": "tun",
                        "description": "L3 tunnel"
                      }
                    }
                  },
                  {
                    "title": "TAP",
                    "type": "object",
                    "description": "TLS mode",
                    "required": [
                      "device_type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "device_type": {
                        "const": "tap",
                        "description": "L2 tunnel"
                      },
                      "device_name": {
                        "$ref": "#/components/schemas/STRING",
                        "description": "Device name"
                      }
                    }
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "Device is not set"
                  }
                ]
              },
              "dhcp_option_dns": {
                "oneOf": [
                  {
                    "title": "ip address",
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "DHCP option DNS ip address"
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "DHCP option DNS is not set"
                  }
                ]
              },
              "dhcp_option_wins": {
                "oneOf": [
                  {
                    "title": "ip address",
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "DHCP option WINS ip address"
                  },
                  {
                    "title": "Not set",
                    "type": "null",
                    "description": "DHCP option WINS is not set"
                  }
                ]
              },
              "remote_random": {
                "type": "boolean",
                "description": "Use specified server addresses in random order"
              },
              "resolv_infinite": {
                "type": "boolean",
                "description": "Server address resolve time is infinite"
              },
              "server_addresses": {
                "type": "array",
                "description": "Array of server addresses",
                "items": {
                  "type": "object",
                  "description": "Server address",
                  "additionalProperties": false,
                  "required": [
                    "server_address",
                    "port_number"
                  ],
                  "properties": {
                    "server_address": {
                      "$ref": "#/components/schemas/STRING",
                      "description": "Server FQDN or ip address"
                    },
                    "port_number": {
                      "$ref": "#/components/schemas/UINT_1_65535",
                      "description": "Server port number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_openvpn_client_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN client list",
        "description": "Result of reading a list of OPENVPN clients",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of Openvpn client names",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "Openvpn client name"
            }
          }
        }
      },
      "in_openvpn_client_delete_write": {
        "title": "request write delete client",
        "description": "Delete OPENVPN client",
        "type": "object",
        "required": [
          "client_name"
        ],
        "additionalProperties": false,
        "properties": {
          "client_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN client name to be deleted"
          }
        }
      },
      "in_openvpn_client_control_write": {
        "title": "request write control client",
        "description": "Control OPENVPN client (enable, disable, restart).",
        "type": "object",
        "required": [
          "client_name",
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "client_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN client name"
          },
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "restart"
            ],
            "description": "Action (on, off, restart"
          }
        }
      },
      "in_openvpn_client_import_write": {
        "title": "request write import client",
        "description": "Import keys to the client via TFTP/SFTP or flash",
        "type": "object",
        "required": [
          "client_name",
          "mode"
        ],
        "additionalProperties": false,
        "properties": {
          "client_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "OPENVPN client name"
          },
          "mode": {
            "oneOf": [
              {
                "title": "flash",
                "description": "Use flash",
                "type": "object",
                "required": [
                  "dev_name",
                  "mode_type"
                ],
                "properties": {
                  "dev_name": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Device name"
                  },
                  "mode_type": {
                    "type": "string",
                    "const": "flash",
                    "description": "Flash or url"
                  }
                }
              },
              {
                "title": "url",
                "description": "Use url",
                "required": [
                  "protocol",
                  "server_address",
                  "mode_type"
                ],
                "type": "object",
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "url",
                    "description": "Flash or url"
                  },
                  "protocol": {
                    "type": "object",
                    "description": "Specify protocol",
                    "oneOf": [
                      {
                        "title": "tftp",
                        "required": [
                          "protocol_type"
                        ],
                        "properties": {
                          "protocol_type": {
                            "type": "string",
                            "const": "tftp",
                            "description": "TFTP protocol"
                          }
                        }
                      },
                      {
                        "title": "sftp",
                        "required": [
                          "protocol_type",
                          "user_name",
                          "password"
                        ],
                        "properties": {
                          "protocol_type": {
                            "type": "string",
                            "const": "sftp",
                            "description": "SFTP protocol"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "login for remote server"
                          },
                          "password": {
                            "type": "string",
                            "description": "password for remote server"
                          }
                        }
                      }
                    ]
                  },
                  "server_address": {
                    "oneOf": [
                      {
                        "title": "ipv4",
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IP address of the server"
                      },
                      {
                        "title": "ipv6",
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address of the server"
                      },
                      {
                        "title": "fqdn",
                        "$ref": "#/components/schemas/FQDN",
                        "description": "fully qualified domain name"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "remotedir": {
            "$ref": "#/components/schemas/STRING",
            "description": "Directory on the remote server or flash drive"
          },
          "timeout": {
            "$ref": "#/components/schemas/UINT_1_120",
            "description": "Transaction timeout in seconds"
          }
        }
      },
      "out_openvpn_client_import_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN client import",
        "description": "Result of import script",
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null",
                "description": "Import was never called"
              },
              {
                "type": "object",
                "description": "Status of import script",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean",
                    "description": "Import was aborted"
                  },
                  "errorCode": {
                    "type": "integer",
                    "description": "Error code returned by import. -1 indicates that import in progress."
                  },
                  "stdout": {
                    "type": "string",
                    "description": "Standard output returned by import"
                  },
                  "stderr": {
                    "type": "string",
                    "description": "Error output returned by import"
                  }
                }
              }
            ]
          }
        }
      },
      "out_openvpn_client_check_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OPENVPN client check",
        "description": "Result of checking minimum client configuration.",
        "properties": {
          "result": {
            "type": "string",
            "description": "Check config output"
          }
        }
      },
      "prefix_add": {
        "type": "object",
        "required": [
          "ipv6_with_bit_prefix"
        ],
        "additionalProperties": false,
        "properties": {
          "ipv6_with_bit_prefix": {
            "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
            "description": "Specify IPv6 Routing Prefix Advertisement"
          },
          "valid_lifetime": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "IPv6 prefixes valid lifetime"
          },
          "preferred_lifetime": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "Preferred lifetime value (sec)"
          },
          "offlink": {
            "type": "boolean",
            "description": "Set offlink flag for all prefixes"
          },
          "no_autoconf": {
            "type": "boolean",
            "description": "Set prefix no-autoconf flag for all prefixes"
          }
        },
        "dependentRequired": {
          "valid_lifetime": [
            "preferred_lifetime"
          ],
          "preferred_lifetime": [
            "valid_lifetime"
          ],
          "offlink": [
            "preferred_lifetime"
          ],
          "no_autoconf": [
            "preferred_lifetime"
          ]
        }
      },
      "out_ipv6_nd_config_iface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ipv6_nd config/settings overrides for specific interface",
        "description": "Result of reading ipv6_nd config/settings overrides for specific interface",
        "properties": {
          "result": {
            "required": [],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "dad_attempts": {
                "$ref": "#/components/schemas/UINT_0_600",
                "description": "Range of dad attemps values possible"
              },
              "current_hoplimit": {
                "$ref": "#/components/schemas/UINT8",
                "description": "Current hop limit value"
              },
              "link_mtu": {
                "$ref": "#/components/schemas/UINT_1280_65535",
                "description": "Link MTU value"
              },
              "managed_config_flag": {
                "type": "boolean",
                "description": "Set/unset flag to allow hosts to use DHCP for address config"
              },
              "minimum_ra_interval": {
                "$ref": "#/components/schemas/UINT_3_1350",
                "description": "Minimum router advertisement interval"
              },
              "other_config_flag": {
                "type": "boolean",
                "description": "Allow/Not Allow hosts to use stateful autoconfiguration to get non-IPv6-address information"
              },
              "ra_interval": {
                "$ref": "#/components/schemas/UINT_4_1800",
                "description": "RA interval (sec)"
              },
              "ra_lifetime": {
                "$ref": "#/components/schemas/UINT_0_9000",
                "description": "RA lifetime (sec)"
              },
              "reachable_time": {
                "$ref": "#/components/schemas/UINT_0_3600000",
                "description": "Reachablity time in milliseconds"
              },
              "retransmission_time": {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Retransmission time in milliseconds"
              },
              "suppress_ra": {
                "type": "boolean",
                "description": "Suppress IPv6 Router Advertisements"
              },
              "suppress_ra_mtu": {
                "type": "boolean",
                "description": "Disable sending MTU in Router Advertisement messages"
              },
              "prefix_no_autoconf": {
                "type": "boolean",
                "description": "Set prefix no-autoconf flag for all prefixes"
              },
              "prefix_offlink": {
                "type": "boolean",
                "description": "Set offlink flag for all prefixes"
              },
              "prefix_preferred_lifetime": {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Preferred lifetime value (sec)"
              },
              "prefix_valid_lifetime": {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "IPv6 prefixes valid lifetime"
              },
              "prefix_info": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/prefix_add"
                }
              }
            }
          }
        }
      },
      "in_ipv6_nd_config_iface_write": {
        "description": "Modify IPv6 config/settings overrides for specific interface, use null to reset to defaults",
        "type": "object",
        "required": [
          "interface_name"
        ],
        "minProperties": 2,
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/interfaces_common_ifname",
            "description": "interface name"
          },
          "dad_attempts": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_600",
                "description": "Range of dad attemps values possible"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "current_hoplimit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT8",
                "description": "Current hop limit value"
              },
              {
                "type": "null",
                "description": "delete value"
              }
            ]
          },
          "link_mtu": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1280_65535",
                "description": "Link MTU value"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "minimum_ra_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_3_1350",
                "description": "Minimum router advertisement interval"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "managed_config_flag": {
            "type": "boolean",
            "description": "Set/unset flag to allow hosts to use DHCP for address config"
          },
          "other_config_flag": {
            "type": "boolean",
            "description": "Allow/Not Allow hosts to use stateful autoconfiguration to get non-IPv6-address information"
          },
          "ra_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_4_1800",
                "description": "RA interval (sec)"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "ra_lifetime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_9000",
                "description": "RA lifetime (sec)"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "reachable_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_3600000",
                "description": "Reachablity time in milliseconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "retransmission_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Retransmission time in milliseconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "suppress_ra": {
            "type": "boolean",
            "description": "Suppress IPv6 Router Advertisements"
          },
          "suppress_ra_mtu": {
            "type": "boolean",
            "description": "Disable sending MTU in Router Advertisement messages"
          },
          "prefix_no_autoconf": {
            "type": "boolean",
            "description": "Set prefix no-autoconf flag for all prefixes"
          },
          "prefix_offlink": {
            "type": "boolean",
            "description": "Set offlink flag for all prefixes"
          },
          "prefix_preferred_lifetime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Preferred lifetime value (sec)"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "prefix_valid_lifetime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "IPv6 prefixes valid lifetime"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "prefix_config": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "add prefix info",
                    "required": [
                      "add"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "add": {
                        "$ref": "#/components/schemas/prefix_add"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "delete prefix info",
                    "required": [
                      "delete"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "delete": {
                        "type": "object",
                        "required": [
                          "ipv6_with_bit_prefix"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "ipv6_with_bit_prefix": {
                            "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
                            "description": "Specify IPv6 Routing Prefix Advertisement"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "out_emon_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the lis of S.M.A.R.T. disks, disk partitions or network interfaces",
        "description": "Result of reading the lis of S.M.A.R.T. disks, disk partitions or network interfaces",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WORD",
              "description": "system name of S.M.A.R.T. disk, path to partition or network interface name"
            }
          }
        }
      },
      "emon_interval_r": {
        "title": "emon daemon interval settings for read",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "alert",
          "warn",
          "info",
          "poll"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT",
            "description": "ALERT messages interval, seconds"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT",
            "description": "WARNINIG messages interval, seconds"
          },
          "info": {
            "$ref": "#/components/schemas/UINT",
            "description": "INFO messages interval, seconds"
          },
          "poll": {
            "$ref": "#/components/schemas/UINT",
            "description": "poll interval, seconds"
          }
        }
      },
      "emon_interval_nopoll_r": {
        "title": "emon daemon interval (no polling) settings for read",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "alert",
          "warn",
          "info"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT",
            "description": "ALERT messages interval, seconds"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT",
            "description": "WARNINIG messages interval, seconds"
          },
          "info": {
            "$ref": "#/components/schemas/UINT",
            "description": "INFO messages interval, seconds"
          }
        }
      },
      "emon_interval_w": {
        "title": "emon daemon interval settings for write",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT",
            "description": "ALERT messages interval, seconds, optional"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT",
            "description": "WARNINIG messages interval, seconds, optional"
          },
          "info": {
            "$ref": "#/components/schemas/UINT",
            "description": "INFO messages interval, seconds, optional"
          },
          "poll": {
            "$ref": "#/components/schemas/UINT",
            "description": "poll interval, seconds, optional"
          }
        }
      },
      "emon_interval_nopoll_w": {
        "title": "emon daemon interval (no polling) settings for write",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT",
            "description": "ALERT messages interval, seconds, optional"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT",
            "description": "WARNINIG messages interval, seconds, optional"
          },
          "info": {
            "$ref": "#/components/schemas/UINT",
            "description": "INFO messages interval, seconds, optional"
          }
        }
      },
      "emon_memory_load_r": {
        "title": "emon memory load settings for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "alert",
          "warn"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "ALERT messages memory load level in percents"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "WARNINIG messages memory load level in percents"
          }
        }
      },
      "emon_memory_load_w": {
        "title": "emon memory load settings for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "ALERT messages memory load level in percents, optional"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "WARNINIG messages memory load level in percents, optional"
          }
        }
      },
      "emon_cpu_load_r": {
        "title": "emon CPU load settings for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "alert",
          "warn"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "ALERT messages CPU load level in percents"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "WARNINIG messages CPU load level in percents"
          }
        }
      },
      "emon_cpu_load_w": {
        "title": "emon CPU load settings for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "ALERT messages CPU load level in percents, optional"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "WARNINIG messages CPU load level in percents, optional"
          }
        }
      },
      "emon_temperature_thr_r": {
        "title": "emon temperature threshold settings for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "alert",
          "warn"
        ],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "ALERT messages temperature threshold in Celsius"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "WARNINIG messages temperature threshold in Celsius"
          }
        }
      },
      "emon_temperature_thr_w": {
        "title": "emon temperature threshold settings for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "ALERT messages temperature threshold in Celsius, optional"
          },
          "warn": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "WARNINIG messages temperature threshold in Celsius, optional"
          }
        }
      },
      "emon_memory_r": {
        "title": "emon memory instance setting for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance",
          "interval",
          "load"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_r",
            "description": "alert/info/warning/poll intervals"
          },
          "load": {
            "$ref": "#/components/schemas/emon_memory_load_r",
            "description": "alert/warning memory load thresholds"
          }
        }
      },
      "emon_memory_w": {
        "title": "emon memory instance setting for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_w",
            "description": "alert/info/warning/poll intervals, optional"
          },
          "load": {
            "$ref": "#/components/schemas/emon_memory_load_w",
            "description": "alert/warning memory load thresholds, optional"
          }
        }
      },
      "emon_memory_d": {
        "title": "emon memory instance setting for deletion",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          }
        }
      },
      "emon_cpu_r": {
        "title": "emon CPU instance setting for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance",
          "interval",
          "load"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_nopoll_r",
            "description": "alert/info/warning intervals"
          },
          "load": {
            "$ref": "#/components/schemas/emon_cpu_load_r",
            "description": "alert/warning CPU load thresholds"
          }
        }
      },
      "emon_cpu_w": {
        "title": "emon CPU instance setting for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_nopoll_w",
            "description": "alert/info/warning intervals, optional"
          },
          "load": {
            "$ref": "#/components/schemas/emon_cpu_load_w",
            "description": "alert/warning CPU load thresholds, optional"
          }
        }
      },
      "emon_cpu_d": {
        "title": "emon CPU instance setting for deletion",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          }
        }
      },
      "emon_temperature_r": {
        "title": "emon temperature instance setting for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance",
          "interval",
          "thr"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_nopoll_r",
            "description": "alert/info/warning intervals"
          },
          "thr": {
            "$ref": "#/components/schemas/emon_temperature_thr_r",
            "description": "alert/warning temperature thresholds"
          }
        }
      },
      "emon_temperature_w": {
        "title": "emon temperature instance setting for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_nopoll_w",
            "description": "alert/info/warning intervals, optional"
          },
          "thr": {
            "$ref": "#/components/schemas/emon_temperature_thr_w",
            "description": "alert/warning temperature thresholds, optional"
          }
        }
      },
      "emon_temperature_d": {
        "title": "emon temperature instance setting for deletion",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          }
        }
      },
      "emon_smart_id": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "disk",
          "smart_id"
        ],
        "properties": {
          "disk": {
            "$ref": "#/components/schemas/WORD",
            "description": "S.M.A.R.T. disk name, use one of items retrieved by `/emon/list_smart`"
          },
          "smart_id": {
            "$ref": "#/components/schemas/UINT",
            "description": "smart ID to monitor"
          }
        }
      },
      "emon_smart_id_ignoreprop": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "disk"
        ],
        "properties": {
          "disk": {
            "$ref": "#/components/schemas/WORD",
            "description": "S.M.A.R.T. disk name, use one of items retrieved by `/emon/list_smart`"
          },
          "smart_id": {
            "$ref": "#/components/schemas/UINT",
            "description": "optional - ignored"
          }
        }
      },
      "emon_smart_r": {
        "title": "emon S.M.A.R.T. disk instance setting for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance",
          "interval",
          "items"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_r",
            "description": "alert/info/warning intervals"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_smart_id"
            },
            "description": "the list of smart-IDs"
          }
        }
      },
      "emon_smart_w": {
        "title": "emon S.M.A.R.T. disk instance setting for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_w",
            "description": "alert/info/warning intervals, optional"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_smart_id"
            },
            "description": "the list of smart-IDs, optional. This changes/adds only selected IDs, other will be untouched"
          }
        }
      },
      "emon_smart_d": {
        "title": "emon S.M.A.R.T. disk instance setting for deletion",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_smart_id_ignoreprop"
            },
            "description": "Specifies the list of smart-IDs to delete. if `items` is not given, whole instance will be deleted"
          }
        }
      },
      "emon_disk": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "disk",
          "alert_thr",
          "warn_thr"
        ],
        "properties": {
          "disk": {
            "$ref": "#/components/schemas/WORD",
            "description": "path to the disk partition, use one of items retrieved by `/emon/list_disk`"
          },
          "alert_thr": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "alert threshold in percents of whole available space"
          },
          "warn_thr": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "warning threshold in percents of whole available space"
          }
        }
      },
      "emon_disk_ignoreprop": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "disk"
        ],
        "properties": {
          "disk": {
            "$ref": "#/components/schemas/WORD",
            "description": "path to the disk partition, use one of items retrieved by `/emon/list_disk`"
          },
          "alert_thr": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "optional - ignored"
          },
          "warn_thr": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "optional - ignored"
          }
        }
      },
      "emon_disk_r": {
        "title": "emon disk usage instance setting for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance",
          "interval",
          "items"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_r",
            "description": "alert/info/warning intervals"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_disk"
            },
            "description": "the list of disks"
          }
        }
      },
      "emon_disk_w": {
        "title": "emon disk usage instance setting for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_w",
            "description": "alert/info/warning intervals, optional"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_disk"
            },
            "description": "the list of disks, optional. This changes/adds only selected disks, other will be untouched"
          }
        }
      },
      "emon_disk_d": {
        "title": "emon disk usage instance setting for deletion",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_disk_ignoreprop"
            },
            "description": "Specifies the list of disks to delete. if `items` is not given, whole instance will be deleted"
          }
        }
      },
      "emon_network": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ifname",
          "bAlert"
        ],
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "interface name, use one of items retrieved by `/emon/list_ifname`"
          },
          "bAlert": {
            "type": "boolean",
            "description": "if true, generate ALERT when link is down, otherwise, generate WARNING"
          }
        }
      },
      "emon_network_ignoreprop": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ifname"
        ],
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "interface name, use one of items retrieved by `/emon/list_ifname`"
          },
          "bAlert": {
            "type": "boolean",
            "description": "optional - ignored"
          }
        }
      },
      "emon_network_r": {
        "title": "emon network monitoring instance setting for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance",
          "interval",
          "items"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_r",
            "description": "alert/info/warning intervals"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_network"
            },
            "description": "the list of network interfaces and their settings"
          }
        }
      },
      "emon_network_w": {
        "title": "emon network monitoring instance setting for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_w",
            "description": "alert/info/warning intervals, optional"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_network"
            },
            "description": "the list of network interfaces and their settings"
          }
        }
      },
      "emon_network_d": {
        "title": "emon network monitoring instance setting for deletion",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_network_ignoreprop"
            },
            "description": "Specifies the list of interfaces to delete. if `items` is not given, whole instance will be deleted"
          }
        }
      },
      "emon_fan": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fanname",
          "bAlert"
        ],
        "properties": {
          "fanname": {
            "$ref": "#/components/schemas/WORD",
            "description": "fan name, use one of items retrieved by `/emon/list_fanname`"
          },
          "bAlert": {
            "type": "boolean",
            "description": "if true, generate ALERT when fan is down, otherwise, generate WARNING"
          }
        }
      },
      "emon_fan_ignoreprop": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fanname"
        ],
        "properties": {
          "fanname": {
            "$ref": "#/components/schemas/WORD",
            "description": "fan name, use one of items retrieved by `/emon/list_fanname`"
          },
          "bAlert": {
            "type": "boolean",
            "description": "optional here - ignored"
          }
        }
      },
      "emon_fan_r": {
        "title": "emon fan monitoring instance setting for reading",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance",
          "interval",
          "items"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_nopoll_r",
            "description": "alert/info/warning intervals"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_fan"
            },
            "description": "the list of fan and their settings"
          }
        }
      },
      "emon_fan_w": {
        "title": "emon fan monitoring instance setting for writing",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "interval": {
            "$ref": "#/components/schemas/emon_interval_nopoll_w",
            "description": "alert/info/warning intervals, optional"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_fan"
            },
            "description": "the list of fan and their settings"
          }
        }
      },
      "emon_fan_d": {
        "title": "emon fan monitoring instance setting for deletion",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "instance"
        ],
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/UINT",
            "description": "instance number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_fan_ignoreprop"
            },
            "description": "Specifies the list of fans to delete. if `items` is not given, whole instance will be deleted"
          }
        }
      },
      "emon_capabilities_r": {
        "type": "object",
        "required": [
          "alert",
          "info",
          "warn",
          "logging_console",
          "logging_led",
          "logging_syslog"
        ],
        "additionalProperties": false,
        "properties": {
          "alert": {
            "type": "boolean",
            "description": "enable sending messages with ALERT priority"
          },
          "warn": {
            "type": "boolean",
            "description": "enable sending messages with WARNING priority"
          },
          "info": {
            "type": "boolean",
            "description": "enable sending messages with INFO priority"
          },
          "logging_console": {
            "type": "boolean",
            "description": "Print to all system consoles"
          },
          "logging_led": {
            "type": "boolean",
            "description": "Indicate ALERTs by the LED on the front panel"
          },
          "logging_syslog": {
            "type": "boolean",
            "description": "Print to syslog"
          },
          "memory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_memory_r"
            },
            "description": "memory monitoring instances, optional"
          },
          "cpu": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_cpu_r"
            },
            "description": "CPU monitoring instances, optional"
          },
          "temperature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_temperature_r"
            },
            "description": "temperature monitoring instances, optional"
          },
          "fan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_fan_r"
            },
            "description": "fan  monitoring instances, optional"
          },
          "network": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_network_r"
            },
            "description": "network interface monitoring instances, optional"
          },
          "disk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_disk_r"
            },
            "description": "disk usage monitoring instances, optional"
          },
          "smart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_smart_r"
            },
            "description": "S.M.A.R.T. disk monitoring instances, optional"
          }
        }
      },
      "emon_capabilities_w": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "alert": {
            "type": "boolean",
            "description": "enable sending messages with ALERT priority, optional"
          },
          "warn": {
            "type": "boolean",
            "description": "enable sending messages with WARNING priority, optional"
          },
          "info": {
            "type": "boolean",
            "description": "enable sending messages with INFO priority, optional"
          },
          "logging_console": {
            "type": "boolean",
            "description": "Print to all system consoles, optional"
          },
          "logging_led": {
            "type": "boolean",
            "description": "Indicate ALERTs by the LED on the front panel, optional"
          },
          "logging_syslog": {
            "type": "boolean",
            "description": "Print to syslog, optional"
          },
          "memory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_memory_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "cpu": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_cpu_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "temperature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_temperature_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "fan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_fan_w"
            },
            "description": "fan  monitoring instances, optional"
          },
          "network": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_network_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "disk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_disk_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "smart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_smart_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          }
        }
      },
      "emon_capabilities_a": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "memory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_memory_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "cpu": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_cpu_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "temperature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_temperature_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "fan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_fan_w"
            },
            "description": "fan  monitoring instances, optional"
          },
          "network": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_network_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "disk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_disk_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          },
          "smart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_smart_w"
            },
            "description": "the list of instances to be modified, others will be unchanged"
          }
        }
      },
      "emon_capabilities_d": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "memory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_memory_d"
            },
            "description": "instance to be deleted, optional"
          },
          "cpu": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_cpu_d"
            },
            "description": "instance to be deleted, optional"
          },
          "temperature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_temperature_d"
            },
            "description": "instance to be deleted, optional"
          },
          "fan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_fan_d"
            },
            "description": "instance/items to be deleted, optional"
          },
          "network": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_network_d"
            },
            "description": "instance/items to be deleted, optional"
          },
          "disk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_disk_d"
            },
            "description": "instance/items to be deleted, optional"
          },
          "smart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emon_smart_d"
            },
            "description": "instance/items to be deleted, optional"
          }
        }
      },
      "out_emon_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read monitoring daemon status",
        "description": "Result of reading emon daemon status",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "adm_status",
              "status"
            ],
            "properties": {
              "adm_status": {
                "type": "boolean",
                "description": "administrative status of monitoring daemon (on or off)"
              },
              "status": {
                "type": "string",
                "description": "daemon running status"
              }
            }
          }
        }
      },
      "in_emon_status_write": {
        "description": "Modify monitoring daemon admin status :on/off/restart",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "restart"
            ]
          }
        }
      },
      "out_emon_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading emon daemon capability",
        "description": "Result of reading results of reading emon daemon capability",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/emon_capabilities_r",
            "description": "capabilities to read"
          }
        }
      },
      "emon_instance_type": {
        "type": "string",
        "enum": [
          "cpu",
          "disk",
          "fan",
          "memory",
          "network",
          "smart",
          "temperature"
        ]
      },
      "in_emon_capability_write": {
        "description": "Modify/add/delete emon daemon capabilities",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "capabilities": {
                        "$ref": "#/components/schemas/emon_capabilities_w",
                        "description": "capabilities to update existing instances"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "add instance",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "capabilities": {
                        "$ref": "#/components/schemas/emon_capabilities_a",
                        "description": "capabilities to add: similar to change but issues an error if instance already exists"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete instance/items",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "capabilities": {
                        "$ref": "#/components/schemas/emon_capabilities_d",
                        "description": "capabilities to delete"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_emon_sensors_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read sensors values",
        "description": "Result of reading sensors",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "name",
                "value"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name of sensor"
                },
                "value": {
                  "type": "string",
                  "description": "read value"
                },
                "units": {
                  "type": "string",
                  "description": "measurement units (optional)"
                }
              }
            }
          }
        }
      },
      "snmp_engineid": {
        "$ref": "#/components/schemas/HEX",
        "description": "must consist of octets with length from 5 to 32 octets"
      },
      "snmp_rw_mode": {
        "description": "Read-only or read-write, default is `ro`",
        "enum": [
          "ro",
          "rw"
        ]
      },
      "snmp_trap": {
        "description": "SNMP trap object. For v1, v2c `community` must be specified, for v3 - `username` and `password`",
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "ip_address",
          "port",
          "version"
        ],
        "properties": {
          "ip_address": {
            "$ref": "#/components/schemas/IP_ADDR"
          },
          "port": {
            "$ref": "#/components/schemas/UINT16"
          },
          "version": {
            "enum": [
              "1",
              "2c",
              "3"
            ]
          }
        },
        "if": {
          "title": "SNMP v3 trap",
          "properties": {
            "version": {
              "const": "3"
            }
          }
        },
        "then": {
          "title": "SNMP v3 trap",
          "description": "`username`, `password` required",
          "required": [
            "username",
            "password"
          ],
          "properties": {
            "username": {
              "$ref": "#/components/schemas/STRING"
            },
            "password": {
              "$ref": "#/components/schemas/STRING"
            },
            "engine_id": {
              "$ref": "#/components/schemas/snmp_engineid"
            }
          }
        },
        "else": {
          "title": "SNMP v1, v2c trap",
          "description": "`community` required",
          "required": [
            "community"
          ],
          "properties": {
            "community": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        }
      },
      "_snmp_community_common": {
        "title": "SNMP community common part for read, write",
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/STRING"
          },
          "mode": {
            "$ref": "#/components/schemas/snmp_rw_mode"
          }
        }
      },
      "snmp_community_subnet": {
        "title": "SNMP community subnet",
        "type": "object",
        "required": [
          "ip_address"
        ],
        "properties": {
          "ip_address": {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
          },
          "systemonly": {
            "type": "boolean",
            "description": "May be `true` for `mode: ro` only. default is `false`"
          }
        }
      },
      "snmp_community": {
        "title": "SNMP v1, v2c community",
        "$ref": "#/components/schemas/_snmp_community_common",
        "unevaluatedProperties": false,
        "required": [
          "ip_addresses",
          "mode"
        ],
        "properties": {
          "ip_addresses": {
            "type": "array",
            "items": {
              "unevaluatedProperties": false,
              "required": [
                "systemonly"
              ],
              "$ref": "#/components/schemas/snmp_community_subnet"
            }
          }
        }
      },
      "snmp_user": {
        "title": "SNMP v3 user",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "mode",
          "password"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/STRING"
          },
          "mode": {
            "$ref": "#/components/schemas/snmp_rw_mode"
          },
          "password": {
            "$ref": "#/components/schemas/STRING"
          },
          "encrypt_password": {
            "$ref": "#/components/schemas/STRING"
          }
        }
      },
      "snmp_state": {
        "type": "object",
        "required": [
          "enabled",
          "running"
        ],
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "running": {
            "type": "boolean"
          }
        }
      },
      "snmp_read_state": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/snmp_state"
          }
        }
      },
      "snmp_read_mib": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "type": "string"
          }
        }
      },
      "snmp_write_state_body": {
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF"
          },
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "restart"
            ]
          }
        }
      },
      "snmp_read_communities": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snmp_community"
            }
          }
        }
      },
      "snmp_write_communities_body": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action",
          "community"
        ],
        "properties": {
          "action": {
            "enum": [
              "add",
              "del"
            ]
          },
          "community": {
            "unevaluatedProperties": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/_snmp_community_common"
              },
              {
                "$ref": "#/components/schemas/snmp_community_subnet"
              }
            ],
            "title": "SNMP community with one subnet"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF"
          }
        }
      },
      "snmp_read_users": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/snmp_user"
              },
              {
                "title": "All SNMP v3 users",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/snmp_user"
                }
              }
            ]
          }
        }
      },
      "snmp_write_users_body": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action",
          "user"
        ],
        "properties": {
          "action": {
            "enum": [
              "add",
              "del"
            ]
          },
          "user": {
            "type": "object"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF"
          }
        },
        "if": {
          "title": "Add SNMP user",
          "properties": {
            "action": {
              "const": "add"
            }
          }
        },
        "then": {
          "properties": {
            "user": {
              "$ref": "#/components/schemas/snmp_user"
            }
          }
        },
        "else": {
          "title": "Delete SNMP user",
          "properties": {
            "user": {
              "additionalProperties": false,
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "$ref": "#/components/schemas/STRING"
                }
              }
            }
          }
        }
      },
      "snmp_read_traps": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snmp_trap"
            }
          }
        }
      },
      "snmp_write_traps_body": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action",
          "trap"
        ],
        "properties": {
          "action": {
            "enum": [
              "add",
              "del"
            ]
          },
          "trap": {
            "$ref": "#/components/schemas/snmp_trap"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF"
          }
        }
      },
      "snmp_read_traps_state": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "is sending traps enabled",
            "type": "boolean"
          }
        }
      },
      "snmp_write_traps_state_body": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "enabled"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "snmp_read_traps_engineid": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HEX"
          }
        }
      },
      "snmp_write_traps_engineid_body": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "engine_id"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF"
          },
          "engine_id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/snmp_engineid"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "snmp_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "state",
              "communities",
              "users",
              "traps",
              "traps_enabled"
            ],
            "additionalProperties": false,
            "properties": {
              "state": {
                "$ref": "#/components/schemas/snmp_state"
              },
              "communities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/snmp_community"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/snmp_user"
                }
              },
              "traps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/snmp_trap"
                }
              },
              "traps_enabled": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "snmp_read_vrf": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        }
      },
      "snmp_write_vrf_body": {
        "type": "object",
        "required": [
          "action",
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF"
          },
          "action": {
            "enum": [
              "add",
              "del"
            ]
          }
        }
      },
      "vrrp_auth_w": {
        "type": "object",
        "oneOf": [
          {
            "required": [
              "password"
            ]
          },
          {
            "required": [
              "secret"
            ]
          }
        ],
        "additionalProperties": false,
        "properties": {
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/STRING",
                "title": "password",
                "description": "Set password"
              },
              {
                "type": "null",
                "title": "Delete",
                "description": "Delete password"
              }
            ]
          },
          "secret": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BASE64",
                "title": "encrypted_password",
                "description": "Set encrypted password"
              },
              {
                "type": "null",
                "title": "Delete",
                "description": "Delete password"
              }
            ]
          }
        }
      },
      "vrrp_auth_r": {
        "type": "object",
        "required": [
          "secret"
        ],
        "additionalProperties": false,
        "properties": {
          "secret": {
            "$ref": "#/components/schemas/BASE64",
            "title": "encrypted_password",
            "description": "Set encrypted password"
          }
        }
      },
      "vrrp_track_action": {
        "type": "object",
        "required": [
          "action",
          "tracker_name"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ]
          },
          "tracker_name": {
            "$ref": "#/components/schemas/STRING"
          }
        }
      },
      "vrrp_track_interface_action": {
        "type": "object",
        "required": [
          "action",
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ]
          },
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "virtual_ipv4_ipv6": {
        "type": "object",
        "required": [
          "action",
          "ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ]
          },
          "ip_address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "title": "ipv4",
                "description": "ipv4 address"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
                "title": "ipv6",
                "description": "ipv6 address"
              }
            ]
          }
        }
      },
      "vrrp_track_ip_w": {
        "type": "object",
        "required": [
          "ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Tracked IP address"
          },
          "track_ip_params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/vrrp_track_ip_params",
                "title": "Tracker params",
                "description": "Tracker params"
              },
              {
                "type": "null",
                "title": "Stop tracking",
                "description": "Stop tracking ip address availability"
              }
            ]
          }
        }
      },
      "vrrp_track_ip_params": {
        "type": "object",
        "required": [
          "ping_number",
          "time_value",
          "time_resolution",
          "ok_percent",
          "weight"
        ],
        "additionalProperties": false,
        "properties": {
          "ping_number": {
            "$ref": "#/components/schemas/UINT_1_",
            "description": "Number of checks in time interval"
          },
          "time_value": {
            "$ref": "#/components/schemas/UINT_1_",
            "description": "Time interval value"
          },
          "time_resolution": {
            "$ref": "#/components/schemas/TIME_RESOLUTION",
            "description": "Time resolution value"
          },
          "ok_percent": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "Percent of positive checks"
          },
          "weight": {
            "$ref": "#/components/schemas/UINT",
            "description": "Value of success/fail"
          }
        }
      },
      "vrrp_track_ip_r": {
        "type": "object",
        "required": [
          "ip_address",
          "ping_number",
          "time_value",
          "ok_percent",
          "weight"
        ],
        "additionalProperties": false,
        "properties": {
          "ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Tracked IP address"
          },
          "ping_number": {
            "$ref": "#/components/schemas/UINT_1_",
            "description": "Number of checks in time interval"
          },
          "time_value": {
            "$ref": "#/components/schemas/UINT_1_",
            "description": "Time interval value"
          },
          "ok_percent": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "Percent of positive checks"
          },
          "weight": {
            "$ref": "#/components/schemas/UINT",
            "description": "Value of success/fail"
          }
        }
      },
      "vrrp_instance": {
        "type": "object",
        "required": [
          "instance_name"
        ],
        "additionalProperties": false,
        "properties": {
          "instance_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "VRRP instance name"
          },
          "version": {
            "$ref": "#/components/schemas/UINT_2_3",
            "description": "Version of VRRP (default: 2)"
          },
          "checksum_compatibility_mode": {
            "type": "boolean",
            "description": "Enable VRRPv2 checksum computation method in a VRRPv3 session"
          },
          "track": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "tracking",
            "description": "Tracking IP SLA trackers"
          },
          "advertising_interval": {
            "$ref": "#/components/schemas/FLOAT",
            "title": "adv value",
            "description": "Advertising interval value"
          },
          "authentification": {
            "$ref": "#/components/schemas/vrrp_auth_r",
            "title": "authentification",
            "description": "Get authentication parameter"
          },
          "interface": {
            "$ref": "#/components/schemas/IFNAME",
            "title": "iface",
            "description": "Get main interface for VRRP instance"
          },
          "priority": {
            "$ref": "#/components/schemas/UINT_1_255",
            "title": "priority",
            "description": "Get priority value for this VRRP instance"
          },
          "state": {
            "$ref": "#/components/schemas/STRING",
            "title": "state",
            "description": "Get initial state of instance"
          },
          "sync_group": {
            "$ref": "#/components/schemas/STRING",
            "title": "sync-group",
            "description": "Set sync-group"
          },
          "track_ip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vrrp_track_ip_r"
            },
            "title": "track ip",
            "description": "Track IP address availability"
          },
          "track_interface": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFNAME"
            },
            "description": "Track interface state"
          },
          "virtual_ip": {
            "type": "array",
            "description": "Get virtual IP address for VRRP",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                },
                {
                  "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
                }
              ]
            }
          },
          "virtual_router_id": {
            "$ref": "#/components/schemas/UINT_1_255",
            "title": "virtual-router id",
            "description": "Get virtual router ID"
          }
        }
      },
      "vrrp_working_state": {
        "type": "object",
        "required": [
          "instance_name",
          "working_state"
        ],
        "additionalProperties": false,
        "properties": {
          "instance_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "VRRP instance name"
          },
          "working_state": {
            "$ref": "#/components/schemas/STRING",
            "description": "VRRP working state"
          }
        }
      },
      "vrrp_start_params": {
        "type": "object",
        "required": [
          "interface",
          "priority",
          "virtual_ip_address",
          "virtual_router_id"
        ],
        "additionalProperties": false,
        "properties": {
          "interface": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Set main interface for VRRP instance"
          },
          "priority": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "Set priority value for this VRRP instance"
          },
          "virtual_ip_address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "title": "ipv4",
                "description": "ipv4 address"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
                "title": "ipv6",
                "description": "ipv6 address"
              }
            ]
          },
          "virtual_router_id": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "Set virtual router ID"
          }
        }
      },
      "out_vrrp_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read vrrp",
        "description": "Result of reading vrrp",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "instances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/vrrp_instance"
                }
              }
            }
          }
        }
      },
      "out_vrrp_control_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read vrrp",
        "description": "Result of reading vrrp",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string"
              }
            }
          }
        }
      },
      "out_vrrp_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read vrrp working state",
        "description": "get vrrp working state for specific instance or all",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "working_states"
            ],
            "properties": {
              "working_states": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/vrrp_working_state"
                }
              }
            }
          }
        }
      },
      "in_vrrp_write": {
        "description": "Create/Delete VRRP instance",
        "type": "object",
        "required": [
          "instance_name",
          "start_params"
        ],
        "additionalProperties": false,
        "properties": {
          "instance_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "VRRP instance name"
          },
          "start_params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/vrrp_start_params",
                "title": "start params",
                "description": "vrrp start params to initialise instance"
              },
              {
                "type": "null",
                "title": "delete_instance",
                "description": "Delete vrrp instance"
              }
            ]
          }
        }
      },
      "in_vrrp_control_write": {
        "description": "Turn on/off all VRRP instances",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ]
          }
        }
      },
      "in_vrrp_config_write": {
        "description": "Manage VRRP instance settings",
        "type": "object",
        "required": [
          "instance_name"
        ],
        "minProperties": 2,
        "additionalProperties": false,
        "properties": {
          "instance_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "VRRP instance name"
          },
          "version": {
            "$ref": "#/components/schemas/UINT_2_3",
            "description": "Version of VRRP (default: 2)"
          },
          "checksum_compatibility_mode": {
            "type": "boolean",
            "description": "Enable VRRPv2 checksum computation method in a VRRPv3 session"
          },
          "track": {
            "$ref": "#/components/schemas/vrrp_track_action",
            "description": "Tracking IP SLA tracker"
          },
          "advertising_interval": {
            "$ref": "#/components/schemas/FLOAT",
            "description": "Advertising interval value"
          },
          "authentification": {
            "$ref": "#/components/schemas/vrrp_auth_w",
            "description": "Set authentication parameters"
          },
          "interface": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Set main interface for VRRP instance"
          },
          "priority": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "Set priority value for this VRRP instance"
          },
          "state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/STATE_INSTANCE",
                "title": "state",
                "description": "Set initial state of instance"
              },
              {
                "type": "null",
                "title": "delete tate",
                "description": "Delete initial state of VRRP instance"
              }
            ]
          },
          "sync_group": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/STRING",
                "title": "sync-group",
                "description": "Set sync-group"
              },
              {
                "type": "null",
                "title": "delete sync-group",
                "description": "Delete sync-group"
              }
            ]
          },
          "track_ip": {
            "$ref": "#/components/schemas/vrrp_track_ip_w",
            "description": "Track IP address availability"
          },
          "track_interface": {
            "$ref": "#/components/schemas/vrrp_track_interface_action",
            "description": "Track interface state"
          },
          "virtual_ip": {
            "$ref": "#/components/schemas/virtual_ipv4_ipv6",
            "description": "Set virtual IP address for VRRP"
          },
          "virtual_router_id": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "Set virtual router ID"
          }
        }
      },
      "out_vrf_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading VRF list",
        "description": "Result of reading VRF list",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF name"
            }
          }
        }
      },
      "in_vrf_write": {
        "description": "Add/delete VRF",
        "type": "object",
        "required": [
          "vrf_name",
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name"
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ]
          }
        }
      },
      "route_target": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ASN_NN",
            "description": "AS number and an arbitrary number (for example, 100:1)"
          },
          {
            "$ref": "#/components/schemas/IP_ADDR_NN",
            "description": "32-bit IP address and an arbitrary number (for example, 192.16.10.1:1)"
          }
        ]
      },
      "out_vrf_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read VRF config/settings",
        "description": "Result of reading VRF config/settings",
        "properties": {
          "result": {
            "required": [],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "description": {
                "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                "description": "VRF description string, optional"
              },
              "router_id": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "default router ID for this VRF in form of IP address, optional"
              },
              "ip_forwarding": {
                "type": "boolean",
                "description": "IPv4 forwarding, optional"
              },
              "ipv6_forwarding": {
                "type": "boolean",
                "description": "IPv6 forwarding, optional"
              },
              "ip_icmp_broadcast": {
                "type": "boolean",
                "description": "Enable ICMP echo broadcast reply for VRF instance, optional"
              },
              "fib_id": {
                "type": "integer",
                "description": "FIB ID, read only"
              },
              "interfaces": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IFNAME"
                },
                "description": "interfaces in this VRF, read only"
              }
            }
          }
        }
      },
      "in_vrf_config_write": {
        "description": "Modify VRF config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vrf_name"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name"
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                "description": "VRF description string, optional"
              },
              {
                "type": "null",
                "description": "unset VRF description"
              }
            ]
          },
          "router_id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "default router ID for this VRF in form of IP address, optional"
              },
              {
                "type": "null",
                "description": "unset default VRF router ID"
              }
            ]
          },
          "ip_forwarding": {
            "type": "boolean",
            "description": "IPv4 forwarding"
          },
          "ipv6_forwarding": {
            "type": "boolean",
            "description": "IPv6 forwarding"
          },
          "ip_icmp_broadcast": {
            "type": "boolean",
            "description": "Enable ICMP echo broadcast reply for VRF instance"
          }
        }
      },
      "out_bgp_vrf_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read BGP VRF config/settings",
        "description": "Result of reading BGP VRF config/settings",
        "properties": {
          "result": {
            "required": [],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "rd": {
                "$ref": "#/components/schemas/route_target",
                "description": "route distinguisher, optional"
              },
              "import_map": {
                "$ref": "#/components/schemas/STRING",
                "description": "Route map, optional"
              }
            }
          }
        }
      },
      "in_bgp_vrf_config_write": {
        "description": "Modify BGP VRF config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vrf_name"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name"
          },
          "rd": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/route_target",
                "description": "route distinguisher, optional"
              },
              {
                "type": "null",
                "description": "unset router distinguisher"
              }
            ]
          },
          "import_map": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/STRING",
                "description": "Route map, optional"
              },
              {
                "type": "null",
                "description": "unset import map"
              }
            ]
          }
        }
      },
      "out_vrf_route_target_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read VRF config/settings",
        "description": "Result of reading VRF route targets",
        "properties": {
          "result": {
            "required": [],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "import": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/route_target"
                },
                "description": "a list of imported route-targets"
              },
              "export": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/route_target"
                },
                "description": "a list of exported route-targets"
              }
            }
          }
        }
      },
      "in_vrf_route_target_write": {
        "description": "Add/delete route targets",
        "type": "object",
        "required": [
          "vrf_name",
          "target",
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name"
          },
          "import_export": {
            "type": "string",
            "enum": [
              "import",
              "export",
              "both"
            ]
          },
          "target": {
            "$ref": "#/components/schemas/route_target",
            "description": "imported/exported route-target to add/delete"
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ]
          }
        }
      },
      "tftp_capabilities": {
        "type": "object",
        "required": [
          "status"
        ],
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "boolean",
            "description": "status of TFTP server (on or off)"
          }
        }
      },
      "out_tftp_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading TFTP server capability",
        "description": "Result of reading results of reading TFTP server capability",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/tftp_capabilities",
            "description": "capabilities to read"
          }
        }
      },
      "in_tftp_capability_write": {
        "description": "Modify TFTP server capabilities",
        "type": "object",
        "required": [
          "capabilities"
        ],
        "additionalProperties": false,
        "properties": {
          "capabilities": {
            "$ref": "#/components/schemas/tftp_capabilities",
            "description": "capabilities to write"
          }
        }
      },
      "out_tftp_show_files_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the list of TFTP files",
        "description": "Result of reading results of reading TFTP home directory",
        "properties": {
          "result": {
            "type": "array",
            "description": "list of files",
            "items": {
              "type": "object",
              "required": [
                "name",
                "size"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "file name"
                },
                "size": {
                  "type": "integer",
                  "description": "file size in bytes"
                }
              }
            }
          }
        }
      },
      "fib_retain_time": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "retain time in seconds"
          },
          {
            "type": "string",
            "const": "forever",
            "description": "retain forever"
          }
        ]
      },
      "if_arbiter": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "interface arbiter poll time, seconds"
          },
          {
            "type": "string",
            "const": "disable",
            "description": "disable interface arbiter"
          }
        ]
      },
      "out_routing_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading routing config",
        "description": "Result of reading routing config",
        "properties": {
          "result": {
            "required": [
              "ip_forwarding",
              "ipv6_forwarding",
              "ip_icmp_broadcast",
              "if_arbiter",
              "dste"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "router_id": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "default system router ID, optional"
              },
              "ip_forwarding": {
                "type": "boolean",
                "description": "IPv4 forwarding"
              },
              "ipv6_forwarding": {
                "type": "boolean",
                "description": "IPv6 forwarding"
              },
              "ip_icmp_broadcast": {
                "type": "boolean",
                "description": "Enable ICMP echo broadcast reply"
              },
              "if_arbiter": {
                "$ref": "#/components/schemas/if_arbiter",
                "description": "interface arbiter parameters"
              },
              "dste": {
                "type": "boolean",
                "description": "enable/disable DS-TE"
              }
            }
          }
        }
      },
      "in_routing_config_write": {
        "description": "Modify routing config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "router_id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "default system router ID"
              },
              {
                "type": "null",
                "description": "unset system router ID"
              }
            ]
          },
          "ip_forwarding": {
            "type": "boolean",
            "description": "IPv4 forwarding"
          },
          "ipv6_forwarding": {
            "type": "boolean",
            "description": "IPv6 forwarding"
          },
          "ip_icmp_broadcast": {
            "type": "boolean",
            "description": "Enable ICMP echo broadcast reply"
          },
          "if_arbiter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/if_arbiter",
                "description": "interface arbiter parameters"
              },
              {
                "type": "null",
                "description": "unset to defaut"
              }
            ]
          },
          "dste": {
            "type": "boolean",
            "description": "enable/disable DS-TE"
          }
        }
      },
      "out_rib_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading RIB config",
        "description": "Result of reading RIB config",
        "properties": {
          "result": {
            "required": [],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "max_fib_routes": {
                "$ref": "#/components/schemas/UINT_1_16384",
                "description": "Allowed number of fib routes including Kernel, Connect and Static, optional"
              },
              "max_static_routes": {
                "$ref": "#/components/schemas/UINT_1_4294967294",
                "description": "Allowed number of static routes, optional"
              },
              "fib_retain": {
                "$ref": "#/components/schemas/fib_retain_time",
                "description": "FIB retain time, optional"
              },
              "maximum_paths": {
                "$ref": "#/components/schemas/UINT_1_64",
                "description": "Maximum multipath number, optional"
              }
            }
          }
        }
      },
      "in_rib_config_write": {
        "description": "Modify RIB config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "max_fib_routes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_16384",
                "description": "Allowed number of fib routes including Kernel, Connect and Static, optional"
              },
              {
                "type": "null",
                "description": "unset to defaut"
              }
            ]
          },
          "max_static_routes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_4294967294",
                "description": "Allowed number of static routes, optional"
              },
              {
                "type": "null",
                "description": "unset to defaut"
              }
            ]
          },
          "fib_retain": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/fib_retain_time",
                "description": "FIB retain time, optional"
              },
              {
                "type": "null",
                "description": "unset to defaut"
              }
            ]
          },
          "maximum_paths": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_64",
                "description": "Maximum multipath number, optional"
              },
              {
                "type": "null",
                "description": "unset to defaut"
              }
            ]
          }
        }
      },
      "ripng_if_settings_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ifname",
          "status",
          "split_horizon",
          "metric_offset"
        ],
        "properties": {
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          },
          "status": {
            "description": "Enable/Disable RIP for IPv6",
            "type": "boolean"
          },
          "split_horizon": {
            "description": "Split horizon",
            "oneOf": [
              {
                "title": "disable",
                "type": "string",
                "const": "disable"
              },
              {
                "title": "split-horizon",
                "description": "Perform split horizon(without poisoned reverse)",
                "type": "string",
                "const": "split-horizon"
              },
              {
                "title": "poison-reverse",
                "description": "Perform poisoned reverse (by default)",
                "type": "string",
                "const": "poison-reverse"
              }
            ]
          },
          "metric_offset": {
            "description": "Metric offset",
            "oneOf": [
              {
                "title": "offset",
                "description": "Metric offset",
                "$ref": "#/components/schemas/UINT_1_16"
              },
              {
                "title": "not set",
                "$ref": "#/components/schemas/null"
              }
            ]
          }
        }
      },
      "ripng_if_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "description": "Enable/Disable RIP for IPv6",
            "type": "boolean"
          },
          "split_horizon": {
            "description": "Split horizon",
            "oneOf": [
              {
                "title": "disable",
                "type": "string",
                "const": "disable"
              },
              {
                "title": "split-horizon",
                "description": "Perform split horizon(without poisoned reverse)",
                "type": "string",
                "const": "split-horizon"
              },
              {
                "title": "poison-reverse",
                "description": "Perform poisoned reverse (by default)",
                "type": "string",
                "const": "poison-reverse"
              }
            ]
          },
          "metric_offset": {
            "description": "Metric offset",
            "oneOf": [
              {
                "title": "offset",
                "description": "Metric offset",
                "$ref": "#/components/schemas/UINT_1_16"
              },
              {
                "title": "not set",
                "$ref": "#/components/schemas/null"
              }
            ]
          }
        }
      },
      "ripng_settings_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "route_maps",
          "distribute_list",
          "redistribute_list",
          "offset_list",
          "neighbors",
          "routes",
          "passive_interfaces",
          "aggregate_addresses",
          "timers_basic",
          "recv_buffer_size",
          "distance",
          "default_metric",
          "default_information_originate",
          "vrf",
          "cisco_metric_behavior"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "$ref": "#/components/schemas/VRF"
          },
          "cisco_metric_behavior": {
            "description": "Metric update behavior",
            "type": "boolean"
          },
          "default_information_originate": {
            "description": "Distribute a default route",
            "type": "boolean"
          },
          "default_metric": {
            "description": "Metric of redistribute routes",
            "$ref": "#/components/schemas/UINT_1_16"
          },
          "distance": {
            "description": "Administrative distance by default",
            "$ref": "#/components/schemas/UINT_1_255"
          },
          "recv_buffer_size": {
            "description": "RIP UDP receive buffer size",
            "$ref": "#/components/schemas/UINT_8192_2147483647"
          },
          "timers_basic": {
            "description": "Basic IPv6 RIP update timers",
            "type": "object",
            "required": [
              "update",
              "timeout",
              "garbage"
            ],
            "additionalProperties": false,
            "properties": {
              "update": {
                "description": "Routing table update timer in seconds",
                "$ref": "#/components/schemas/UINT_5_2147483647"
              },
              "timeout": {
                "description": "Routing table timeout timer in seconds",
                "$ref": "#/components/schemas/UINT_5_2147483647"
              },
              "garbage": {
                "description": "Routing table garbage collection timer in seconds",
                "$ref": "#/components/schemas/UINT_5_2147483647"
              }
            }
          },
          "passive_interfaces": {
            "type": "array",
            "description": "List of IPv6 RIP passive interfaces",
            "items": {
              "description": "Interface name",
              "$ref": "#/components/schemas/IFNAME"
            }
          },
          "aggregate_addresses": {
            "type": "array",
            "description": "List of IPv6 RIP aggregate addresses",
            "items": {
              "description": "Aggregate network",
              "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
            }
          },
          "routes": {
            "type": "array",
            "description": "List of IPv6 RIP routes",
            "items": {
              "description": "The IP address prefix and length of this IP network",
              "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
            }
          },
          "neighbors": {
            "type": "array",
            "description": "List of IPv6 RIP neighbors",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "ipv6_addr",
                "ifname"
              ],
              "properties": {
                "ipv6_addr": {
                  "description": "Link-local IP address of a neighboring router",
                  "$ref": "#/components/schemas/IPV6_ADDR"
                },
                "ifname": {
                  "description": "Interface name",
                  "$ref": "#/components/schemas/IFNAME"
                }
              }
            }
          },
          "offset_list": {
            "type": "array",
            "description": "List of offsets to the RIP metric",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "acl_name",
                "metrics_type",
                "offset",
                "ifname"
              ],
              "properties": {
                "acl_name": {
                  "description": "Access-list number or names to apply",
                  "$ref": "#/components/schemas/STRING"
                },
                "metrics_type": {
                  "description": "Metrics of incoming/outgoing advertised routes",
                  "enum": [
                    "in",
                    "out"
                  ],
                  "type": "string"
                },
                "offset": {
                  "description": "Offset to use with metrics of networks matching the access list",
                  "$ref": "#/components/schemas/UINT_0_16"
                },
                "ifname": {
                  "description": "An alphanumeric string that specifies the interface to match",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/IFNAME"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                }
              }
            }
          },
          "route_maps": {
            "type": "array",
            "description": "List of attached route maps",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "map_name",
                "filter_type",
                "ifname"
              ],
              "properties": {
                "map_name": {
                  "description": "Access-list/prefix-list name to use",
                  "$ref": "#/components/schemas/STRING"
                },
                "filter_type": {
                  "description": "Filter incoming/outgoing routing updates",
                  "enum": [
                    "in",
                    "out"
                  ],
                  "type": "string"
                },
                "ifname": {
                  "description": "Interface name",
                  "$ref": "#/components/schemas/IFNAME"
                }
              }
            }
          },
          "distribute_list": {
            "type": "array",
            "description": "List of filters in routing updates",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "distribute_type",
                "list_name",
                "filter_type",
                "ifname"
              ],
              "properties": {
                "distribute_type": {
                  "description": "Filtering by access list or prefix list",
                  "enum": [
                    "acl",
                    "prefix"
                  ],
                  "type": "string"
                },
                "list_name": {
                  "description": "Access-list/prefix-list name to use",
                  "$ref": "#/components/schemas/STRING"
                },
                "filter_type": {
                  "description": "Filter incoming/outgoing routing updates",
                  "enum": [
                    "in",
                    "out"
                  ],
                  "type": "string"
                },
                "ifname": {
                  "description": "Specify the name of the interface on which distribute-list applies",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/IFNAME"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                }
              }
            }
          },
          "redistribute_list": {
            "type": "array",
            "description": "Redistribute information from another routing protocol",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "routes_type",
                "route_map",
                "metric"
              ],
              "properties": {
                "routes_type": {
                  "description": "Specify where the information is redistributed from",
                  "oneOf": [
                    {
                      "type": "string",
                      "const": "kernel",
                      "description": "Redistribute connected kernel routes"
                    },
                    {
                      "type": "string",
                      "const": "connected",
                      "description": "Redistribute from connected routes"
                    },
                    {
                      "type": "string",
                      "const": "static",
                      "description": "Redistribute connected static routes"
                    },
                    {
                      "type": "string",
                      "const": "ospf6",
                      "description": "Redistribute connected OSPFv6 routes"
                    },
                    {
                      "type": "string",
                      "const": "isis",
                      "description": "Redistribute connected ISO IS-IS routes"
                    },
                    {
                      "type": "string",
                      "const": "bgp",
                      "description": "Redistribute connected BGP routes"
                    }
                  ]
                },
                "metric": {
                  "description": "Metric",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/UINT_0_16"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                },
                "route_map": {
                  "description": "Route map reference",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/STRING"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "ripng_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vrf"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "cisco_metric_behavior": {
            "description": "Metric update behavior",
            "type": "boolean"
          },
          "default_information_originate": {
            "description": "Distribute a default route",
            "type": "boolean"
          },
          "default_metric": {
            "description": "Metric of redistribute routes",
            "oneOf": [
              {
                "title": "default metric",
                "description": "Set a metric of redistribute routes",
                "$ref": "#/components/schemas/UINT_1_16"
              },
              {
                "title": "not set",
                "description": "Unset default metric",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "recv_buffer_size": {
            "description": "RIP UDP receive buffer size",
            "oneOf": [
              {
                "title": "bytes",
                "description": "Set the RIP UDP receive buffer size",
                "$ref": "#/components/schemas/UINT_8192_2147483647"
              },
              {
                "title": "not set",
                "description": "Unset the RIP UDP receive buffer size",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "distance": {
            "description": "Administrative distance by default",
            "oneOf": [
              {
                "title": "distance value",
                "description": "Administrative distance value",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              {
                "title": "default value",
                "description": "Default value (120)",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "timers_basic": {
            "description": "Basic RIP update timers",
            "oneOf": [
              {
                "title": "timers",
                "type": "object",
                "required": [
                  "update",
                  "timeout",
                  "garbage"
                ],
                "additionalProperties": false,
                "properties": {
                  "update": {
                    "description": "Routing table update timer in seconds",
                    "$ref": "#/components/schemas/UINT_5_2147483647"
                  },
                  "timeout": {
                    "description": "Routing table timeout timer in seconds",
                    "$ref": "#/components/schemas/UINT_5_2147483647"
                  },
                  "garbage": {
                    "description": "Routing table garbage collection timer in seconds",
                    "$ref": "#/components/schemas/UINT_5_2147483647"
                  }
                }
              },
              {
                "title": "not set",
                "description": "Unset the RIP UDP receive buffer size",
                "$ref": "#/components/schemas/null"
              }
            ]
          }
        }
      },
      "in_ripng_status_write": {
        "title": "request write IPv6 RIP status",
        "description": "Enable/Disable `IPv6 RIP`",
        "type": "object",
        "required": [
          "status",
          "vrf"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "general (default vrf)",
                "description": "General Enable/Disable `RIP` and for default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "status": {
            "type": "boolean",
            "description": "Enable/Disable `IPv6 RIP`"
          }
        }
      },
      "out_ripng_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read IPv6 RIP status",
        "description": "Result of reading IPv6 RIP status",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "vrf_list"
            ],
            "properties": {
              "vrf_list": {
                "type": "array",
                "description": "List of VRF",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "status",
                    "vrf"
                  ],
                  "properties": {
                    "vrf": {
                      "description": "VRF name",
                      "$ref": "#/components/schemas/VRF"
                    },
                    "status": {
                      "type": "boolean",
                      "description": "RIP status"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_ripng_config_write": {
        "title": "request write `IPv6 RIP` config",
        "description": "Set `IPv6 RIP` settings",
        "type": "object",
        "required": [
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "settings": {
            "description": "Set `IPv6 RIP` settings",
            "$ref": "#/components/schemas/ripng_settings_w"
          }
        }
      },
      "out_ripng_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `IPv6 RIP` configuration",
        "description": "Result of reading `IPv6 RIP` settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "type": "array",
                "description": "List of `IPv6 RIP` settings",
                "items": {
                  "$ref": "#/components/schemas/ripng_settings_r"
                }
              }
            }
          }
        }
      },
      "in_ripng_passive_if_write": {
        "title": "request write `IPv6 RIP` network routing on an IP network",
        "description": "`IPv6 RIP` networks",
        "type": "object",
        "required": [
          "action",
          "vrf",
          "ifname"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "oneOf": [
              {
                "title": "add",
                "description": "Suppress RIP routing updates on an interface",
                "const": "add"
              },
              {
                "title": "delete",
                "description": "Enable routing updates on an interface",
                "const": "delete"
              }
            ]
          },
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_ripng_ag_address_write": {
        "title": "request write  aggregate `IPv6 RIP` route announcement",
        "description": "`IPv6 RIP` aggregate address",
        "type": "object",
        "required": [
          "action",
          "vrf",
          "network"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "oneOf": [
              {
                "title": "add",
                "description": "Set aggregate RIP route announcement",
                "const": "add"
              },
              {
                "title": "delete",
                "description": "Delete aggregate RIPng route announcement",
                "const": "delete"
              }
            ]
          },
          "network": {
            "description": "Aggregate network (IPv6 address prefix and length)",
            "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
          }
        }
      },
      "in_ripng_route_write": {
        "title": "request write `IPv6 RIP` route",
        "description": "Static route advertisement",
        "type": "object",
        "required": [
          "vrf",
          "action",
          "ipv6_addr"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/Revoke static route advertisement"
          },
          "ipv6_addr": {
            "description": "The IP address prefix and length of this IP network",
            "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
          }
        }
      },
      "in_ripng_neighbor_write": {
        "title": "request write `IPv6 RIP` neighbor",
        "description": "Neighbor router",
        "type": "object",
        "required": [
          "vrf",
          "action",
          "ipv6_addr",
          "ifname"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/delete neighbor router"
          },
          "ipv6_addr": {
            "description": "Link-local IP address of a neighboring router",
            "$ref": "#/components/schemas/IPV6_ADDR"
          },
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_ripng_offset_write": {
        "title": "Offset to the `IPv6 RIP` metric",
        "description": "Add/delete offset to the `IPv6 RIP` metric",
        "type": "object",
        "required": [
          "vrf",
          "action",
          "acl_name",
          "metrics_type",
          "offset"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/delete offset"
          },
          "acl_name": {
            "description": "Access-list number or names to apply",
            "$ref": "#/components/schemas/STRING"
          },
          "metrics_type": {
            "description": "Metrics of incoming/outgoing advertised routes",
            "enum": [
              "in",
              "out"
            ],
            "type": "string"
          },
          "offset": {
            "description": "Offset to use with metrics of networks matching the access list",
            "$ref": "#/components/schemas/UINT_0_16"
          },
          "ifname": {
            "description": "An alphanumeric string that specifies the interface to match",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_ripng_route_map_write": {
        "title": "`IPv6 RIP` route-map",
        "description": "Attach/Detach route map",
        "type": "object",
        "required": [
          "vrf",
          "action",
          "map_name",
          "filter_type",
          "ifname"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/delete offset"
          },
          "map_name": {
            "description": "A route map name",
            "$ref": "#/components/schemas/STRING"
          },
          "filter_type": {
            "description": "Filter incoming/outgoing routing updates",
            "enum": [
              "in",
              "out"
            ],
            "type": "string"
          },
          "ifname": {
            "description": "Specify the name of the interface on which distribute-list applies",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_ripng_distribute_write": {
        "title": "Filter in routing updates",
        "description": "Filtering networks in routing updates by access list or prefix",
        "type": "object",
        "required": [
          "vrf",
          "distribute_type",
          "action",
          "list_name",
          "filter_type"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "distribute_type": {
            "description": "Filtering by access list or prefix list",
            "enum": [
              "acl",
              "prefix"
            ],
            "type": "string"
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/revoke filtering by access control lists"
          },
          "list_name": {
            "description": "Access-list/prefix-list name to use",
            "$ref": "#/components/schemas/STRING"
          },
          "filter_type": {
            "description": "Filter incoming/outgoing routing updates",
            "enum": [
              "in",
              "out"
            ],
            "type": "string"
          },
          "ifname": {
            "description": "Specify the name of the interface on which distribute-list applies",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_ripng_redistribute_write": {
        "title": "Redistribute",
        "description": "Redistribute information from another routing protocol",
        "type": "object",
        "required": [
          "vrf",
          "routes_type",
          "action"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/revoke filtering by access control lists"
          },
          "routes_type": {
            "description": "Specify where the information is redistributed from",
            "oneOf": [
              {
                "type": "string",
                "const": "kernel",
                "description": "Redistribute connected kernel routes"
              },
              {
                "type": "string",
                "const": "connected",
                "description": "Redistribute from connected routes"
              },
              {
                "type": "string",
                "const": "static",
                "description": "Redistribute connected static routes"
              },
              {
                "type": "string",
                "const": "ospf",
                "description": "Redistribute connected OSPFv3 routes"
              },
              {
                "type": "string",
                "const": "isis",
                "description": "Redistribute connected ISO IS-IS routes"
              },
              {
                "type": "string",
                "const": "bgp",
                "description": "Redistribute connected BGP routes"
              }
            ]
          },
          "route_map": {
            "description": "Route map reference",
            "$ref": "#/components/schemas/STRING"
          },
          "metric": {
            "description": "Metric",
            "$ref": "#/components/schemas/UINT_0_16"
          }
        }
      },
      "out_ripng_show_database_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `IPv6 RIP` database",
        "description": "Result of reading `IPv6 RIP` database",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_ripng_show_interface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `IPv6 RIP` interfaces",
        "description": "Result of reading `IPv6 RIP` interface status and configuration",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_ripng_show_rip_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `IPv6 RIP` parameters",
        "description": "Result of reading `IPv6 RIP` parameters",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "in_ripng_iface_config_write": {
        "title": "request write `IPv6 RIP` interface config",
        "description": "Set ``IPv6 RIP` interface settings",
        "type": "object",
        "required": [
          "ifname",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          },
          "settings": {
            "description": "Set `IPv6 RIP` interface settings",
            "$ref": "#/components/schemas/ripng_if_settings_w"
          }
        }
      },
      "out_ripng_iface_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `IPv6 RIP` interface configuration",
        "description": "Result of reading `IPv6 RIP` interface settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "description": "`IPv6 RIP` interface settings",
                "$ref": "#/components/schemas/ripng_if_settings_r"
              }
            }
          }
        }
      },
      "in_ripng_debug_write": {
        "description": "Modify IPv6 RIP debugging features",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "features"
        ],
        "properties": {
          "features": {
            "type": "object",
            "description": "All or separate features",
            "oneOf": [
              {
                "title": "all features",
                "additionalProperties": false,
                "required": [
                  "all"
                ],
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Enable/Disable all debugging"
                  }
                }
              },
              {
                "title": "separate features",
                "required": [
                  "events",
                  "packets",
                  "nsm",
                  "rib"
                ],
                "additionalProperties": false,
                "properties": {
                  "events": {
                    "type": "boolean",
                    "description": "RIPng events"
                  },
                  "packets": {
                    "type": "object",
                    "description": "RIPng packets",
                    "required": [
                      "detail",
                      "send",
                      "receive"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "detail": {
                        "type": "boolean",
                        "description": "detailed information"
                      },
                      "send": {
                        "type": "boolean",
                        "description": "RIPng send packets"
                      },
                      "receive": {
                        "type": "boolean",
                        "description": "RIPng receive packets"
                      }
                    }
                  },
                  "nsm": {
                    "type": "boolean",
                    "description": "RIPng NSM information"
                  },
                  "rib": {
                    "type": "boolean",
                    "description": "RIPng RIB information"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ripng_debug_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ripng debugging feature",
        "description": "Result of reading IPv6 RIP debugging features",
        "properties": {
          "result": {
            "required": [
              "events",
              "packets",
              "nsm",
              "rib"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "events": {
                "type": "boolean",
                "description": "Debug RIPng events"
              },
              "packets": {
                "type": "object",
                "description": "Debug RIPng packets",
                "required": [
                  "detail",
                  "send",
                  "receive"
                ],
                "additionalProperties": false,
                "properties": {
                  "detail": {
                    "type": "boolean",
                    "description": "detailed information"
                  },
                  "send": {
                    "type": "boolean",
                    "description": "RIPng send packets"
                  },
                  "receive": {
                    "type": "boolean",
                    "description": "RIPng receive packets"
                  }
                }
              },
              "nsm": {
                "type": "boolean",
                "description": "Debug RIPng NSM information"
              },
              "rib": {
                "type": "boolean",
                "description": "Debug RIPng RIB information"
              }
            }
          }
        }
      },
      "in_ripng_clear_route_write": {
        "description": "Clear RIPng routing tables",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "route"
        ],
        "properties": {
          "route": {
            "oneOf": [
              {
                "title": "ipv6 address",
                "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
                "description": "Removes entries which exactly match this destination address from the RIPng routing table"
              },
              {
                "type": "string",
                "const": "all",
                "description": "Removes the entire RIPng routing table"
              },
              {
                "type": "string",
                "const": "rip",
                "description": "Removes RIP entries from the RIPng routing table"
              },
              {
                "type": "string",
                "const": "kernel",
                "description": "Removes kernel entries from the RIPng routing table"
              },
              {
                "type": "string",
                "const": "connected",
                "description": "Removes entries for connected routes from the RIPng routing table"
              },
              {
                "type": "string",
                "const": "static",
                "description": "Removes static entries from the RIPng routing table"
              },
              {
                "type": "string",
                "const": "ospf6",
                "description": "Removes only OSPF routes from the RIPng routing table"
              },
              {
                "type": "string",
                "const": "isis",
                "description": "Removes only IS-IS routes from the RIPng routing table"
              },
              {
                "type": "string",
                "const": "bgp",
                "description": "Removes only BGP routes from the RIPng routing table"
              }
            ]
          }
        }
      },
      "rip_if_settings_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ifname",
          "authentication",
          "split_horizon",
          "send_packet",
          "receive_packet",
          "send_version",
          "receive_version"
        ],
        "properties": {
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          },
          "authentication": {
            "description": "Authentication control",
            "oneOf": [
              {
                "title": "disable",
                "$ref": "#/components/schemas/null"
              },
              {
                "title": "md5",
                "description": "MD5 digest",
                "type": "object",
                "anyOf": [
                  {
                    "title": "key-chane",
                    "required": [
                      "mode",
                      "key_chane"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "md5",
                        "description": "MD5 digest"
                      },
                      "key_chane": {
                        "description": "Specify the name of the key chain",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  },
                  {
                    "title": "key-string",
                    "required": [
                      "mode",
                      "key_string"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "md5",
                        "description": "MD5 digest"
                      },
                      "key_string": {
                        "description": "Authentication string or password used by a key",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  },
                  {
                    "title": "not key",
                    "additionalProperties": false,
                    "required": [
                      "mode"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "md5",
                        "description": "MD5 digest"
                      }
                    }
                  }
                ]
              },
              {
                "title": "text",
                "description": "Clear text authentication",
                "type": "object",
                "anyOf": [
                  {
                    "title": "key-chane",
                    "additionalProperties": false,
                    "required": [
                      "mode",
                      "key_chane"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "text",
                        "description": "Clear text authentication"
                      },
                      "key_chane": {
                        "description": "Specify the name of the key chain",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  },
                  {
                    "title": "key-string",
                    "additionalProperties": false,
                    "required": [
                      "mode",
                      "key_string"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "text",
                        "description": "Clear text authentication"
                      },
                      "key_string": {
                        "description": "Authentication string or password used by a key",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  },
                  {
                    "title": "not key",
                    "additionalProperties": false,
                    "required": [
                      "mode"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "text",
                        "description": "Clear text authentication"
                      }
                    }
                  }
                ]
              }
            ]
          },
          "split_horizon": {
            "description": "Split horizon",
            "oneOf": [
              {
                "title": "disable",
                "type": "string",
                "const": "disable"
              },
              {
                "title": "split-horizon",
                "description": "Perform split horizon(without poisoned reverse)",
                "type": "string",
                "const": "split-horizon"
              },
              {
                "title": "poison-reverse",
                "description": "Perform poisoned reverse (by default)",
                "type": "string",
                "const": "poison-reverse"
              }
            ]
          },
          "send_packet": {
            "description": "Sending RIP packets through the specified interface",
            "type": "boolean"
          },
          "receive_packet": {
            "description": "Receiving packet through the specified interface",
            "type": "boolean"
          },
          "send_version": {
            "description": "RIP send version control",
            "oneOf": [
              {
                "type": "string",
                "const": "global",
                "description": "the global RIP version control (unspecified for interface)"
              },
              {
                "type": "string",
                "const": "1",
                "description": "Sending RIP version 1 packets out of an interface"
              },
              {
                "type": "string",
                "const": "1-compatible",
                "description": "Sending RIP version 1 compatible packets from a version 2 RIP interface"
              },
              {
                "type": "string",
                "const": "2",
                "description": "Sending RIP version 2 packets out of an interface"
              },
              {
                "type": "string",
                "const": "1-2",
                "description": "Sending RIP packets of both versions (1 and 2) out of an interface"
              }
            ]
          },
          "receive_version": {
            "description": "RIP receive version control",
            "oneOf": [
              {
                "type": "string",
                "const": "global",
                "description": "the global RIP version control (unspecified for interface)"
              },
              {
                "type": "string",
                "const": "1",
                "description": "Receiving RIP version 1 packets from an interface"
              },
              {
                "type": "string",
                "const": "2",
                "description": "Receiving RIP version 2 packets from an interface"
              },
              {
                "type": "string",
                "const": "1-2",
                "description": "Receiving RIP packets of both versions (1 and 2) from an interface"
              }
            ]
          }
        }
      },
      "rip_if_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authentication": {
            "description": "Authentication control",
            "oneOf": [
              {
                "title": "disable",
                "$ref": "#/components/schemas/null"
              },
              {
                "title": "md5",
                "description": "MD5 digest",
                "type": "object",
                "oneOf": [
                  {
                    "title": "key-chane",
                    "required": [
                      "mode",
                      "key_chane"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "md5",
                        "description": "MD5 digest"
                      },
                      "key_chane": {
                        "description": "Specify the name of the key chain",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  },
                  {
                    "title": "key-string",
                    "required": [
                      "mode",
                      "key_string"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "md5",
                        "description": "MD5 digest"
                      },
                      "key_string": {
                        "description": "Authentication string or password used by a key",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  }
                ]
              },
              {
                "title": "text",
                "description": "Clear text authentication",
                "type": "object",
                "oneOf": [
                  {
                    "title": "key-chane",
                    "required": [
                      "mode",
                      "key_chane"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "text",
                        "description": "Clear text authentication"
                      },
                      "key_chane": {
                        "description": "Specify the name of the key chain",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  },
                  {
                    "title": "key-string",
                    "required": [
                      "mode",
                      "key_string"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "const": "text",
                        "description": "Clear text authentication"
                      },
                      "key_string": {
                        "description": "Authentication string or password used by a key",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      }
                    }
                  }
                ]
              }
            ]
          },
          "split_horizon": {
            "description": "Split horizon",
            "oneOf": [
              {
                "title": "disable",
                "type": "string",
                "const": "disable"
              },
              {
                "title": "split-horizon",
                "description": "Perform split horizon(without poisoned reverse)",
                "type": "string",
                "const": "split-horizon"
              },
              {
                "title": "poison-reverse",
                "description": "Perform poisoned reverse (by default)",
                "type": "string",
                "const": "poison-reverse"
              }
            ]
          },
          "send_packet": {
            "description": "Sending RIP packets through the specified interface",
            "type": "boolean"
          },
          "receive_packet": {
            "description": "Receiving packet through the specified interface",
            "type": "boolean"
          },
          "send_version": {
            "description": "RIP send version control",
            "oneOf": [
              {
                "title": "global",
                "type": "string",
                "const": "global",
                "description": "the global RIP version control (unspecified for interface)"
              },
              {
                "title": "version 1",
                "type": "string",
                "const": "1",
                "description": "Sending RIP version 1 packets out of an interface"
              },
              {
                "title": "version 1-compatible",
                "type": "string",
                "const": "1-compatible",
                "description": "Sending RIP version 1 compatible packets from a version 2 RIP interface"
              },
              {
                "title": "version 2",
                "type": "string",
                "const": "2",
                "description": "Sending RIP version 2 packets out of an interface"
              },
              {
                "title": "version 1-2",
                "type": "string",
                "const": "1-2",
                "description": "Sending RIP packets of both versions (1 and 2) out of an interface"
              }
            ]
          },
          "receive_version": {
            "description": "RIP receive version control",
            "oneOf": [
              {
                "title": "global",
                "type": "string",
                "const": "global",
                "description": "the global RIP version control (unspecified for interface)"
              },
              {
                "title": "version 1",
                "type": "string",
                "const": "1",
                "description": "Receiving RIP version 1 packets from an interface"
              },
              {
                "title": "version 2",
                "type": "string",
                "const": "2",
                "description": "Receiving RIP version 2 packets from an interface"
              },
              {
                "title": "version 1-2",
                "type": "string",
                "const": "1-2",
                "description": "Receiving RIP packets of both versions (1 and 2) from an interface"
              }
            ]
          }
        }
      },
      "rip_settings_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "distribute_list",
          "redistribute_list",
          "offset_list",
          "neighbors",
          "routes",
          "passive_interfaces",
          "networks",
          "timers_basic",
          "version",
          "recv_buffer_size",
          "maximum_prefix",
          "distance",
          "default_metric",
          "default_information_originate",
          "vrf",
          "bfd_all_interfaces",
          "cisco_metric_behavior"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "$ref": "#/components/schemas/VRF"
          },
          "bfd_all_interfaces": {
            "description": "Enable/Disable BFD on all interfaces",
            "type": "boolean"
          },
          "cisco_metric_behavior": {
            "description": "Metric update behavior",
            "type": "boolean"
          },
          "default_information_originate": {
            "type": "object",
            "description": "Distribute a default route",
            "additionalProperties": false,
            "required": [
              "route_map",
              "state"
            ],
            "properties": {
              "state": {
                "description": "Advertise default route",
                "type": "string",
                "enum": [
                  "enable",
                  "disable",
                  "always"
                ]
              },
              "route_map": {
                "description": "Route map reference",
                "oneOf": [
                  {
                    "title": "route-map",
                    "description": "Pointer to route-map entries",
                    "$ref": "#/components/schemas/STRING"
                  },
                  {
                    "title": "not set",
                    "description": "No route-map",
                    "$ref": "#/components/schemas/null"
                  }
                ]
              }
            }
          },
          "default_metric": {
            "description": "Metric of redistribute routes",
            "$ref": "#/components/schemas/UINT_1_15"
          },
          "distance": {
            "description": "Administrative distance",
            "type": "object",
            "required": [
              "default_distance_value",
              "distance_list"
            ],
            "additionalProperties": false,
            "properties": {
              "default_distance_value": {
                "description": "Administrative distance value",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "distance_list": {
                "type": "array",
                "description": "List of RIP settings",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "distance_value",
                    "network"
                  ],
                  "properties": {
                    "distance_value": {
                      "description": "Administrative distance value",
                      "$ref": "#/components/schemas/UINT_1_255"
                    },
                    "network": {
                      "description": "Network prefix and length",
                      "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                    }
                  }
                }
              }
            }
          },
          "maximum_prefix": {
            "description": "The maximum number of RIP routes",
            "type": "object",
            "required": [
              "maximum_number",
              "warning_threshold"
            ],
            "additionalProperties": false,
            "properties": {
              "maximum_number": {
                "description": "The maximum number of RIP routes allowed",
                "oneOf": [
                  {
                    "title": "number",
                    "description": "The maximum number of RIP routes",
                    "$ref": "#/components/schemas/UINT_1_65535"
                  },
                  {
                    "title": "not set",
                    "description": "Not set",
                    "$ref": "#/components/schemas/null"
                  }
                ]
              },
              "warning_threshold": {
                "description": "Percentage of maximum routes to generate a warning",
                "oneOf": [
                  {
                    "title": "percentage",
                    "description": "Percentage of maximum routes",
                    "$ref": "#/components/schemas/UINT_1_100"
                  },
                  {
                    "title": "not set",
                    "description": "Not set",
                    "$ref": "#/components/schemas/null"
                  }
                ]
              }
            }
          },
          "recv_buffer_size": {
            "description": "RIP UDP receive buffer size",
            "$ref": "#/components/schemas/UINT_8192_2147483647"
          },
          "version": {
            "description": "RIP version",
            "$ref": "#/components/schemas/UINT_1_2"
          },
          "timers_basic": {
            "description": "Basic RIP update timers",
            "type": "object",
            "required": [
              "update",
              "timeout",
              "garbage"
            ],
            "additionalProperties": false,
            "properties": {
              "update": {
                "description": "Routing table update timer in seconds",
                "$ref": "#/components/schemas/UINT_5_2147483647"
              },
              "timeout": {
                "description": "Routing table timeout timer in seconds",
                "$ref": "#/components/schemas/UINT_5_2147483647"
              },
              "garbage": {
                "description": "Routing table garbage collection timer in seconds",
                "$ref": "#/components/schemas/UINT_5_2147483647"
              }
            }
          },
          "networks": {
            "type": "array",
            "description": "List of RIP networks",
            "items": {
              "anyOf": [
                {
                  "title": "ip address",
                  "description": "The IP address prefix and length of this IP network",
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                },
                {
                  "title": "interface name",
                  "description": "Interface name",
                  "$ref": "#/components/schemas/IFNAME"
                }
              ]
            }
          },
          "passive_interfaces": {
            "type": "array",
            "description": "List of RIP passive interfaces",
            "items": {
              "description": "Interface name",
              "$ref": "#/components/schemas/IFNAME"
            }
          },
          "routes": {
            "type": "array",
            "description": "List of RIP routes",
            "items": {
              "description": "The IP address prefix and length of this IP network",
              "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
            }
          },
          "neighbors": {
            "type": "array",
            "description": "List of RIP neighbors",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "ip_addr",
                "fall_over_bfd"
              ],
              "properties": {
                "ip_addr": {
                  "description": "Neighbor address",
                  "$ref": "#/components/schemas/IP_ADDR"
                },
                "fall_over_bfd": {
                  "description": "Enable/Disable fall-over detection (BFD)",
                  "type": "boolean"
                }
              }
            }
          },
          "offset_list": {
            "type": "array",
            "description": "List of offsets to the RIP metric",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "acl_name",
                "metrics_type",
                "offset",
                "ifname"
              ],
              "properties": {
                "acl_name": {
                  "description": "Access-list number or names to apply",
                  "$ref": "#/components/schemas/STRING"
                },
                "metrics_type": {
                  "description": "Metrics of incoming/outgoing advertised routes",
                  "enum": [
                    "in",
                    "out"
                  ],
                  "type": "string"
                },
                "offset": {
                  "description": "Offset to use with metrics of networks matching the access list",
                  "$ref": "#/components/schemas/UINT_0_16"
                },
                "ifname": {
                  "description": "An alphanumeric string that specifies the interface to match",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/IFNAME"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                }
              }
            }
          },
          "distribute_list": {
            "type": "array",
            "description": "List of filters in routing updates",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "distribute_type",
                "list_name",
                "filter_type",
                "ifname"
              ],
              "properties": {
                "distribute_type": {
                  "description": "Filtering by access list or prefix list",
                  "enum": [
                    "acl",
                    "prefix"
                  ],
                  "type": "string"
                },
                "list_name": {
                  "description": "Access-list/prefix-list name to use",
                  "$ref": "#/components/schemas/STRING"
                },
                "filter_type": {
                  "description": "Filter incoming/outgoing routing updates",
                  "enum": [
                    "in",
                    "out"
                  ],
                  "type": "string"
                },
                "ifname": {
                  "description": "Specify the name of the interface on which distribute-list applies",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/IFNAME"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                }
              }
            }
          },
          "redistribute_list": {
            "type": "array",
            "description": "Redistribute information from another routing protocol",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "routes_type",
                "route_map",
                "metric"
              ],
              "properties": {
                "routes_type": {
                  "description": "Specify where the information is redistributed from",
                  "oneOf": [
                    {
                      "type": "string",
                      "const": "kernel",
                      "description": "Redistribute connected kernel routes"
                    },
                    {
                      "type": "string",
                      "const": "connected",
                      "description": "Redistribute from connected routes"
                    },
                    {
                      "type": "string",
                      "const": "static",
                      "description": "Redistribute connected static routes"
                    },
                    {
                      "type": "string",
                      "const": "ospf",
                      "description": "Redistribute connected OSPFv3 routes"
                    },
                    {
                      "type": "string",
                      "const": "isis",
                      "description": "Redistribute connected ISO IS-IS routes"
                    },
                    {
                      "type": "string",
                      "const": "bgp",
                      "description": "Redistribute connected BGP routes"
                    }
                  ]
                },
                "metric": {
                  "description": "Metric",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/UINT_0_16"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                },
                "route_map": {
                  "description": "Route map reference",
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/STRING"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "rip_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vrf"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "bfd_all_interfaces": {
            "description": "Enable/Disable BFD on all interfaces",
            "type": "boolean"
          },
          "cisco_metric_behavior": {
            "description": "Metric update behavior",
            "type": "boolean"
          },
          "default_information_originate": {
            "type": "object",
            "description": "Distribute a default route",
            "required": [
              "state"
            ],
            "oneOf": [
              {
                "title": "disable",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "description": "Disable distribution a default route",
                    "const": "disable"
                  }
                }
              },
              {
                "title": "enable",
                "required": [
                  "route_map"
                ],
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "description": "Distribute a default route",
                    "const": "enable"
                  },
                  "route_map": {
                    "description": "Route map reference",
                    "oneOf": [
                      {
                        "title": "route-map",
                        "description": "Pointer to route-map entries",
                        "$ref": "#/components/schemas/STRING"
                      },
                      {
                        "title": "not set",
                        "description": "No route-map",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              },
              {
                "title": "always",
                "required": [
                  "route_map"
                ],
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "description": "Always advertise default route",
                    "const": "always"
                  },
                  "route_map": {
                    "description": "Route map reference",
                    "oneOf": [
                      {
                        "title": "route-map",
                        "description": "Pointer to route-map entries",
                        "$ref": "#/components/schemas/STRING"
                      },
                      {
                        "title": "not set",
                        "description": "No route-map",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "default_metric": {
            "description": "Metric of redistribute routes",
            "oneOf": [
              {
                "title": "default metric",
                "description": "Set a metric of redistribute routes",
                "$ref": "#/components/schemas/UINT_1_15"
              },
              {
                "title": "not set",
                "description": "Unset default metric",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "maximum_prefix": {
            "description": "The maximum number of RIP routes",
            "oneOf": [
              {
                "title": "not set",
                "description": "Unset the RIP UDP receive buffer size",
                "$ref": "#/components/schemas/null"
              },
              {
                "title": "maximum-prefix",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "maximum_number"
                ],
                "properties": {
                  "maximum_number": {
                    "description": "The maximum number of RIP routes allowed",
                    "$ref": "#/components/schemas/UINT_1_65535"
                  },
                  "warning_threshold": {
                    "description": "Percentage of maximum routes to generate a warning",
                    "oneOf": [
                      {
                        "title": "percentage",
                        "description": "Percentage of maximum routes",
                        "$ref": "#/components/schemas/UINT_1_100"
                      },
                      {
                        "title": "not set",
                        "description": "Not set",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "recv_buffer_size": {
            "description": "RIP UDP receive buffer size",
            "oneOf": [
              {
                "title": "bytes",
                "description": "Set the RIP UDP receive buffer size",
                "$ref": "#/components/schemas/UINT_8192_2147483647"
              },
              {
                "title": "not set",
                "description": "Unset the RIP UDP receive buffer size",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "version": {
            "description": "RIP version",
            "oneOf": [
              {
                "title": "version of RIP",
                "description": "Set RIP version",
                "$ref": "#/components/schemas/UINT_1_2"
              },
              {
                "title": "not set",
                "description": "Unset RIP version",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "timers_basic": {
            "description": "Basic RIP update timers",
            "oneOf": [
              {
                "title": "timers",
                "type": "object",
                "required": [
                  "update",
                  "timeout",
                  "garbage"
                ],
                "additionalProperties": false,
                "properties": {
                  "update": {
                    "description": "Routing table update timer in seconds",
                    "$ref": "#/components/schemas/UINT_5_2147483647"
                  },
                  "timeout": {
                    "description": "Routing table timeout timer in seconds",
                    "$ref": "#/components/schemas/UINT_5_2147483647"
                  },
                  "garbage": {
                    "description": "Routing table garbage collection timer in seconds",
                    "$ref": "#/components/schemas/UINT_5_2147483647"
                  }
                }
              },
              {
                "title": "not set",
                "description": "Unset the RIP UDP receive buffer size",
                "$ref": "#/components/schemas/null"
              }
            ]
          }
        }
      },
      "in_rip_status_write": {
        "title": "request write RIP status",
        "description": "Enable/Disable `RIP`",
        "type": "object",
        "required": [
          "status",
          "vrf"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "general (default vrf)",
                "description": "General Enable/Disable `RIP` and for default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "status": {
            "type": "boolean",
            "description": "Enable/Disable `RIP`"
          }
        }
      },
      "out_rip_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RIP status",
        "description": "Result of reading RIP status",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "vrf_list"
            ],
            "properties": {
              "vrf_list": {
                "type": "array",
                "description": "List of VRF",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "status",
                    "vrf"
                  ],
                  "properties": {
                    "vrf": {
                      "description": "VRF name",
                      "$ref": "#/components/schemas/VRF"
                    },
                    "status": {
                      "type": "boolean",
                      "description": "RIP status"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_rip_config_write": {
        "title": "request write RIP config",
        "description": "Set `RIP` settings",
        "type": "object",
        "required": [
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "settings": {
            "description": "Set `RIP` settings",
            "$ref": "#/components/schemas/rip_settings_w"
          }
        }
      },
      "out_rip_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RIP configuration",
        "description": "Result of reading RIP settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "type": "array",
                "description": "List of RIP settings",
                "items": {
                  "$ref": "#/components/schemas/rip_settings_r"
                }
              }
            }
          }
        }
      },
      "in_rip_network_write": {
        "title": "request write RIP network routing on an IP network",
        "description": "Enable/Disable `RIP`",
        "type": "object",
        "required": [
          "action",
          "vrf",
          "network"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Enable/Disable `RIP` routing on an IP network"
          },
          "network": {
            "anyOf": [
              {
                "title": "ip address",
                "description": "The IP address prefix and length of this IP network",
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
              },
              {
                "title": "interface name",
                "description": "Interface name",
                "$ref": "#/components/schemas/IFNAME"
              }
            ]
          }
        }
      },
      "in_rip_passive_if_write": {
        "title": "request write RIP network routing on an IP network",
        "description": "Enable/Disable `RIP`",
        "type": "object",
        "required": [
          "action",
          "vrf",
          "ifname"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "oneOf": [
              {
                "title": "add",
                "description": "Suppress RIP routing updates on an interface",
                "const": "add"
              },
              {
                "title": "delete",
                "description": "Enable routing updates on an interface",
                "const": "delete"
              }
            ]
          },
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_rip_distance_write": {
        "title": "request write RIP distance",
        "description": "Enable/Disable `RIP`",
        "type": "object",
        "required": [
          "vrf",
          "distance_type"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "distance_type": {
            "oneOf": [
              {
                "title": "default distance",
                "required": [
                  "default_distance"
                ],
                "additionalProperties": false,
                "properties": {
                  "default_distance": {
                    "description": "Administrative distance by default",
                    "oneOf": [
                      {
                        "title": "distance value",
                        "description": "Administrative distance value",
                        "$ref": "#/components/schemas/UINT_1_255"
                      },
                      {
                        "title": "default value",
                        "description": "Default value (120)",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              },
              {
                "title": "network distance",
                "description": "Administrative distance for the specified network",
                "oneOf": [
                  {
                    "title": "add",
                    "required": [
                      "network",
                      "action",
                      "distance"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "action": {
                        "type": "string",
                        "const": "add",
                        "description": "Add network distance"
                      },
                      "network": {
                        "description": "Network prefix and length",
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                      },
                      "distance": {
                        "description": "Administrative distance value",
                        "$ref": "#/components/schemas/UINT_1_255"
                      }
                    }
                  },
                  {
                    "title": "delete",
                    "required": [
                      "network",
                      "action"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "action": {
                        "type": "string",
                        "const": "delete",
                        "description": "Delete network distance"
                      },
                      "network": {
                        "description": "Network prefix and length",
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      },
      "in_rip_route_write": {
        "title": "request write RIP route",
        "description": "Static route advertisement",
        "type": "object",
        "required": [
          "vrf",
          "action",
          "ip_addr"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/Revoke static route advertisement"
          },
          "ip_addr": {
            "description": "The IP address prefix and length of this IP network",
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
          }
        }
      },
      "in_rip_neighbor_write": {
        "title": "request write RIP route",
        "description": "Neighbor router",
        "type": "object",
        "required": [
          "vrf",
          "action",
          "ip_addr",
          "fall_over_bfd"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/delete neighbor router"
          },
          "ip_addr": {
            "description": "Neighbor address",
            "$ref": "#/components/schemas/IP_ADDR"
          },
          "fall_over_bfd": {
            "description": "Enable/Disable fall-over detection (BFD)",
            "type": "boolean"
          }
        }
      },
      "in_rip_offset_write": {
        "title": "Offset to the RIP metric",
        "description": "Add/delete offset to the RIP metric",
        "type": "object",
        "required": [
          "vrf",
          "action",
          "acl_name",
          "metrics_type",
          "offset"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/delete offset"
          },
          "acl_name": {
            "description": "Access-list number or names to apply",
            "$ref": "#/components/schemas/STRING"
          },
          "metrics_type": {
            "description": "Metrics of incoming/outgoing advertised routes",
            "enum": [
              "in",
              "out"
            ],
            "type": "string"
          },
          "offset": {
            "description": "Offset to use with metrics of networks matching the access list",
            "$ref": "#/components/schemas/UINT_0_16"
          },
          "ifname": {
            "description": "An alphanumeric string that specifies the interface to match",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_rip_distribute_write": {
        "title": "Filter in routing updates",
        "description": "Filtering networks in routing updates by access list or prefix",
        "type": "object",
        "required": [
          "vrf",
          "distribute_type",
          "action",
          "list_name",
          "filter_type"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "distribute_type": {
            "description": "Filtering by access list or prefix list",
            "enum": [
              "acl",
              "prefix"
            ],
            "type": "string"
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/revoke filtering by access control lists"
          },
          "list_name": {
            "description": "Access-list/prefix-list name to use",
            "$ref": "#/components/schemas/STRING"
          },
          "filter_type": {
            "description": "Filter incoming/outgoing routing updates",
            "enum": [
              "in",
              "out"
            ],
            "type": "string"
          },
          "ifname": {
            "description": "Specify the name of the interface on which distribute-list applies",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_rip_redistribute_write": {
        "title": "Redistribute",
        "description": "Redistribute information from another routing protocol",
        "type": "object",
        "required": [
          "vrf",
          "routes_type",
          "action"
        ],
        "properties": {
          "vrf": {
            "description": "VRF name",
            "oneOf": [
              {
                "title": "vrf",
                "description": "VRF name",
                "$ref": "#/components/schemas/VRF"
              },
              {
                "title": "default",
                "description": "Default VRF",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/revoke filtering by access control lists"
          },
          "routes_type": {
            "description": "Specify where the information is redistributed from",
            "oneOf": [
              {
                "type": "string",
                "const": "kernel",
                "description": "Redistribute connected kernel routes"
              },
              {
                "type": "string",
                "const": "connected",
                "description": "Redistribute from connected routes"
              },
              {
                "type": "string",
                "const": "static",
                "description": "Redistribute connected static routes"
              },
              {
                "type": "string",
                "const": "ospf",
                "description": "Redistribute connected OSPFv3 routes"
              },
              {
                "type": "string",
                "const": "isis",
                "description": "Redistribute connected ISO IS-IS routes"
              },
              {
                "type": "string",
                "const": "bgp",
                "description": "Redistribute connected BGP routes"
              }
            ]
          },
          "route_map": {
            "description": "Route map reference",
            "$ref": "#/components/schemas/STRING"
          },
          "metric": {
            "description": "Metric",
            "$ref": "#/components/schemas/UINT_0_16"
          }
        }
      },
      "out_rip_show_statistics_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RIP statistics",
        "description": "Result of reading RIP statistics",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_rip_show_database_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RIP database",
        "description": "Result of reading RIP database",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_rip_show_interface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RIP interfaces",
        "description": "Result of reading RIP interface status and configuration",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_rip_show_rip_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RIP parameters",
        "description": "Result of reading RIP parameters",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "in_rip_iface_config_write": {
        "title": "request write RIP interface config",
        "description": "Set `RIP` interface settings",
        "type": "object",
        "required": [
          "ifname",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          },
          "settings": {
            "description": "Set `RIP` interface settings",
            "$ref": "#/components/schemas/rip_if_settings_w"
          }
        }
      },
      "out_rip_iface_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `RIP` interface configuration",
        "description": "Result of reading `RIP` interface settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "description": "`RIP` interface settings",
                "$ref": "#/components/schemas/rip_if_settings_r"
              }
            }
          }
        }
      },
      "in_rip_debug_write": {
        "description": "Modify RIP debugging features",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "features"
        ],
        "properties": {
          "features": {
            "type": "object",
            "description": "All or separate features",
            "oneOf": [
              {
                "title": "all features",
                "additionalProperties": false,
                "required": [
                  "all"
                ],
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Enable/Disable all debugging"
                  }
                }
              },
              {
                "title": "separate features",
                "required": [
                  "events",
                  "packets",
                  "nsm",
                  "rib",
                  "bfd"
                ],
                "additionalProperties": false,
                "properties": {
                  "bfd": {
                    "type": "boolean",
                    "description": "Debug Bidirectional Forwarding Detection (BFD)"
                  },
                  "events": {
                    "type": "boolean",
                    "description": "Debug RIP events"
                  },
                  "packets": {
                    "type": "object",
                    "description": "Debug RIP packets",
                    "required": [
                      "detail",
                      "send",
                      "receive"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "detail": {
                        "type": "boolean",
                        "description": "detailed information"
                      },
                      "send": {
                        "type": "boolean",
                        "description": "RIP send packets"
                      },
                      "receive": {
                        "type": "boolean",
                        "description": "RIP receive packets"
                      }
                    }
                  },
                  "nsm": {
                    "type": "boolean",
                    "description": "Debug RIP NSM information"
                  },
                  "rib": {
                    "type": "boolean",
                    "description": "Debug RIP RIB information"
                  }
                }
              }
            ]
          }
        }
      },
      "out_rip_debug_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read rip debugging feature",
        "description": "Result of reading RIP debugging features",
        "properties": {
          "result": {
            "required": [
              "events",
              "packets",
              "nsm",
              "rib",
              "bfd"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "bfd": {
                "type": "boolean",
                "description": "Debug Bidirectional Forwarding Detection (BFD)"
              },
              "events": {
                "type": "boolean",
                "description": "Debug RIP events"
              },
              "packets": {
                "type": "object",
                "description": "Debug RIP packets",
                "required": [
                  "detail",
                  "send",
                  "receive"
                ],
                "additionalProperties": false,
                "properties": {
                  "detail": {
                    "type": "boolean",
                    "description": "detailed information"
                  },
                  "send": {
                    "type": "boolean",
                    "description": "RIP send packets"
                  },
                  "receive": {
                    "type": "boolean",
                    "description": "RIP receive packets"
                  }
                }
              },
              "nsm": {
                "type": "boolean",
                "description": "Debug RIP NSM information"
              },
              "rib": {
                "type": "boolean",
                "description": "Debug RIP RIB information"
              }
            }
          }
        }
      },
      "in_rip_clear_route_write": {
        "description": "Clear RIP routing tables",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "route"
        ],
        "properties": {
          "route": {
            "oneOf": [
              {
                "title": "ip address",
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "Removes entries which exactly match this destination address from the RIP routing table"
              },
              {
                "type": "string",
                "const": "all",
                "description": "Removes the entire RIP routing table"
              },
              {
                "type": "string",
                "const": "rip",
                "description": "Removes RIP entries from the RIP routing table"
              },
              {
                "type": "string",
                "const": "kernel",
                "description": "Removes kernel entries from the RIP routing table"
              },
              {
                "type": "string",
                "const": "connected",
                "description": "Removes entries for connected routes from the RIP routing table"
              },
              {
                "type": "string",
                "const": "static",
                "description": "Removes static entries from the RIP routing table"
              },
              {
                "type": "string",
                "const": "ospf",
                "description": "Removes only OSPF routes from the RIP routing table"
              },
              {
                "type": "string",
                "const": "isis",
                "description": "Removes only IS-IS routes from the RIP routing table"
              },
              {
                "type": "string",
                "const": "bgp",
                "description": "Removes only BGP routes from the RIP routing table"
              },
              {
                "title": "vrf",
                "type": "object",
                "description": " Clear RIP routes in VRF",
                "required": [
                  "vrf",
                  "vrf_route"
                ],
                "properties": {
                  "vrf": {
                    "description": "VRF name",
                    "oneOf": [
                      {
                        "title": "vrf",
                        "description": "VRF name",
                        "$ref": "#/components/schemas/VRF"
                      },
                      {
                        "title": "default",
                        "description": "default VRF",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  },
                  "vrf_route": {
                    "oneOf": [
                      {
                        "title": "ip address",
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                        "description": "Prefix to be cleared (e.g. 10.0.0.0/8)"
                      },
                      {
                        "type": "string",
                        "const": "all",
                        "description": "Clear all routes"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "in_rip_clear_stat_write": {
        "description": "Clear RIP statistics",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          }
        }
      },
      "in_radius_accounting_write": {
        "title": "request write RADIUS accounting",
        "description": "Set RADIUS accounting",
        "type": "object",
        "required": [
          "accounting"
        ],
        "additionalProperties": false,
        "properties": {
          "accounting": {
            "type": "boolean",
            "description": "RADIUS accounting is enabled"
          }
        }
      },
      "out_radius_accounting_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RADIUS accounting",
        "description": "Result of reading RADIUS accounting",
        "properties": {
          "result": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": [
              "accounting"
            ],
            "properties": {
              "accounting": {
                "type": "boolean",
                "description": "RADIUS accounting is enabled"
              }
            }
          }
        }
      },
      "out_radius_attributes_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RADIUS attributes",
        "description": "Result of reading RADIUS attributes",
        "properties": {
          "result": {
            "type": "object",
            "description": "List of RADIUS attributes names",
            "unevaluatedProperties": false,
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "array",
                "description": "Array of RADIUS attributes",
                "items": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "required": [
                    "name",
                    "number",
                    "type"
                  ],
                  "properties": {
                    "name": {
                      "description": "Attribute name",
                      "$ref": "#/components/schemas/WORD"
                    },
                    "number": {
                      "description": "Attribute number",
                      "$ref": "#/components/schemas/UINT"
                    },
                    "type": {
                      "description": "Attribute type",
                      "$ref": "#/components/schemas/WORD"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_radius_attributes_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RADIUS attributes list",
        "description": "Result of reading RADIUS attributes list",
        "properties": {
          "result": {
            "type": "object",
            "description": "List of RADIUS attributes names",
            "unevaluatedProperties": false,
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "array",
                "description": "Array of RADIUS attributes names",
                "items": {
                  "description": "Attribute name",
                  "$ref": "#/components/schemas/WORD"
                }
              }
            }
          }
        }
      },
      "in_radius_attributes_add_write": {
        "title": "request write RADIUS add attribute",
        "description": "add RADIUS attribute",
        "type": "object",
        "required": [
          "name",
          "number",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Attribute name",
            "$ref": "#/components/schemas/WORD"
          },
          "number": {
            "description": "Attribute number",
            "$ref": "#/components/schemas/UINT"
          },
          "type": {
            "description": "Attribute type",
            "$ref": "#/components/schemas/WORD"
          }
        }
      },
      "in_radius_attributes_delete_write": {
        "title": "request write RADIUS delete attribute",
        "description": "delete RADIUS attribute",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Attribute name",
            "$ref": "#/components/schemas/WORD"
          }
        }
      },
      "out_radius_servers_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RADIUS servers settings",
        "description": "Result of reading RADIUS servers settings",
        "properties": {
          "result": {
            "type": "object",
            "description": "List of RADIUS servers settings",
            "unevaluatedProperties": false,
            "required": [
              "servers"
            ],
            "properties": {
              "servers": {
                "type": "array",
                "description": "Array of RADIUS servers settings",
                "items": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "required": [
                    "ip_address",
                    "password",
                    "auth_port",
                    "acct_port",
                    "timeout"
                  ],
                  "properties": {
                    "ip_address": {
                      "description": "RADIUS server IP address",
                      "$ref": "#/components/schemas/IP_ADDR"
                    },
                    "password": {
                      "description": "Encrypted password to access RADIUS server",
                      "$ref": "#/components/schemas/WORD"
                    },
                    "auth_port": {
                      "description": "Authentication port",
                      "$ref": "#/components/schemas/UINT_1_65535"
                    },
                    "acct_port": {
                      "description": "Accounting port",
                      "$ref": "#/components/schemas/UINT_1_65535"
                    },
                    "timeout": {
                      "description": "Timeout in seconds (0..4294967295)",
                      "$ref": "#/components/schemas/UINT"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_radius_servers_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RADIUS servers list",
        "description": "Result of reading RADIUS servers list",
        "properties": {
          "result": {
            "type": "object",
            "description": "List of RADIUS servers names",
            "unevaluatedProperties": false,
            "required": [
              "servers"
            ],
            "properties": {
              "servers": {
                "type": "array",
                "description": "Array of RADIUS servers names",
                "items": {
                  "description": "RADIUS server IP address",
                  "$ref": "#/components/schemas/IP_ADDR"
                }
              }
            }
          }
        }
      },
      "in_radius_servers_add_write": {
        "title": "request write RADIUS add server",
        "description": "add RADIUS server",
        "type": "object",
        "required": [
          "ip_address",
          "password",
          "encrypted"
        ],
        "additionalProperties": false,
        "properties": {
          "ip_address": {
            "description": "RADIUS server IP address",
            "$ref": "#/components/schemas/IP_ADDR"
          },
          "password": {
            "description": "Password to access RADIUS server",
            "$ref": "#/components/schemas/WORD"
          },
          "encrypted": {
            "description": "If true, password must be entered in encrypted form, otherwise password will be in cleartext form",
            "type": "boolean"
          },
          "auth_port": {
            "description": "Authentication port",
            "$ref": "#/components/schemas/UINT_1_65535"
          },
          "acct_port": {
            "description": "Accounting port",
            "$ref": "#/components/schemas/UINT_1_65535"
          },
          "timeout": {
            "description": "Timeout in seconds (0..4294967295)",
            "$ref": "#/components/schemas/UINT"
          }
        }
      },
      "in_radius_servers_delete_write": {
        "title": "request write RADIUS delete server",
        "description": "delete RADIUS server",
        "type": "object",
        "required": [
          "ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "ip_address": {
            "description": "RADIUS server IP address",
            "$ref": "#/components/schemas/IP_ADDR"
          }
        }
      },
      "out_radius_attributes_interfaces_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read RADIUS attributes",
        "description": "Result of reading RADIUS attributes from server",
        "properties": {
          "result": {
            "type": "string",
            "description": "String of received from RADIUS server attributes"
          }
        }
      },
      "in_radius_radius_test_write": {
        "title": "request write radius-test",
        "description": "Send packets to a RADIUS server and show reply",
        "type": "object",
        "required": [
          "user",
          "password",
          "radius_ip_address",
          "radius_port",
          "radius_nas_port",
          "radius_secret"
        ],
        "additionalProperties": false,
        "properties": {
          "user": {
            "description": "Username to send",
            "$ref": "#/components/schemas/STRING"
          },
          "password": {
            "description": "Password of the user",
            "$ref": "#/components/schemas/STRING"
          },
          "radius_ip_address": {
            "description": "IP address of radius server",
            "$ref": "#/components/schemas/IP_ADDR"
          },
          "radius_port": {
            "description": "Radius authentication port (default: 1812)",
            "$ref": "#/components/schemas/UINT"
          },
          "radius_nas_port": {
            "description": "The value of the NAS-Port attribute",
            "$ref": "#/components/schemas/UINT"
          },
          "radius_secret": {
            "description": "The shared secret for this client",
            "$ref": "#/components/schemas/STRING"
          },
          "debug": {
            "description": "Enables debugging output for the RADIUS client",
            "type": "boolean"
          },
          "auth-type": {
            "description": "Set authentication type",
            "type": "string",
            "enum": [
              "pap",
              "chap",
              "mschap",
              "eap-md5"
            ]
          }
        }
      },
      "sc_choice": {
        "type": "object",
        "required": [
          "sc_choice_type"
        ],
        "oneOf": [
          {
            "title": "Segment slopes",
            "additionalProperties": false,
            "required": [
              "m2"
            ],
            "properties": {
              "sc_choice_type": {
                "description": "Segment slopes",
                "const": "slope"
              },
              "m2": {
                "type": "object",
                "additionalProperties": false,
                "description": "Slope of the second segment",
                "required": [
                  "rate"
                ],
                "properties": {
                  "rate": {
                    "description": "Rate value (10Mbit, 100kbit, 1Gbit)",
                    "$ref": "#/components/schemas/RATE_VALUE"
                  }
                }
              },
              "intersection": {
                "type": "object",
                "additionalProperties": false,
                "description": "x-coordinate of intersection",
                "required": [
                  "d_value"
                ],
                "properties": {
                  "rate": {
                    "description": "Rate value (10Mbit, 100kbit, 1Gbit)",
                    "$ref": "#/components/schemas/RATE_VALUE"
                  },
                  "d_value": {
                    "description": "Microseconds",
                    "$ref": "#/components/schemas/UINT"
                  }
                }
              }
            }
          },
          {
            "title": "Rate",
            "required": [
              "rate"
            ],
            "additionalProperties": false,
            "properties": {
              "sc_choice_type": {
                "description": "Rate",
                "const": "rate"
              },
              "rate": {
                "description": "Rate value (10Mbit, 100kbit, 1Gbit)",
                "$ref": "#/components/schemas/RATE_VALUE"
              },
              "dmax": {
                "description": "Maximum delay (Microseconds)",
                "$ref": "#/components/schemas/UINT"
              },
              "umax": {
                "description": "Maximum unit of work (Bytes)",
                "$ref": "#/components/schemas/UINT"
              }
            }
          }
        ]
      },
      "in_cbq_qos_write": {
        "title": "CBQ",
        "description": "`Class Based Queueing` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "avg_packet_size",
          "bandwidth"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "avg_packet_size": {
            "description": "Avarage packet size (Bytes)",
            "$ref": "#/components/schemas/QOS_AVPKT"
          },
          "selection_size": {
            "description": "One round data dequeue size (Bytes)",
            "$ref": "#/components/schemas/UINT"
          },
          "bandwidth": {
            "description": "Bandwidth for this interface (10Mbit, 100kbit, 1Gbit)",
            "$ref": "#/components/schemas/RATE_VALUE"
          }
        }
      },
      "in_cbq_class_write": {
        "title": "Add CBQ class",
        "description": "Add class for CBQ queueing discipline",
        "required": [
          "interface_name",
          "class_id",
          "parent_id",
          "avg_packet_size",
          "selection_size",
          "rate"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "class_id": {
            "description": "`Class ID`",
            "$ref": "#/components/schemas/CLASS_ID"
          },
          "parent_id": {
            "description": "Parent `class ID`",
            "$ref": "#/components/schemas/CLASS_ID"
          },
          "priority": {
            "description": "Class priority",
            "$ref": "#/components/schemas/UINT"
          },
          "avg_packet_size": {
            "description": "Avarage packet size (Bytes)",
            "$ref": "#/components/schemas/UINT"
          },
          "selection_size": {
            "description": "One round data dequeue size (Bytes)",
            "$ref": "#/components/schemas/UINT_256_4294967295"
          },
          "rate": {
            "description": "Rate limit",
            "type": "object",
            "oneOf": [
              {
                "title": "percent",
                "required": [
                  "rate_percent"
                ],
                "additionalProperties": false,
                "properties": {
                  "rate_percent": {
                    "description": "Rate value in percentage of root class",
                    "$ref": "#/components/schemas/PERCENT"
                  }
                }
              },
              {
                "title": "value",
                "required": [
                  "rate_value"
                ],
                "additionalProperties": false,
                "properties": {
                  "rate_value": {
                    "description": "Rate value (10Mbit, 100Kbit, 1Gbit)",
                    "$ref": "#/components/schemas/RATE_VALUE"
                  }
                }
              }
            ]
          },
          "bounded": {
            "description": "Bound class to the rate",
            "type": "boolean"
          }
        }
      },
      "in_hfsc_qos_write": {
        "title": "HFSC",
        "description": "`HFSC` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "default_class_id": {
            "description": "Default class id",
            "$ref": "#/components/schemas/UINT"
          }
        }
      },
      "in_hfsc_class_write": {
        "title": "Add HFSC class",
        "description": "Add class for HFSC queueing discipline",
        "required": [
          "interface_name",
          "class_id",
          "parent_id",
          "service_curve"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "class_id": {
            "description": "`Class ID`",
            "$ref": "#/components/schemas/CLASS_ID"
          },
          "parent_id": {
            "description": "Parent `class ID`",
            "$ref": "#/components/schemas/CLASS_ID"
          },
          "service_curve": {
            "description": "Service curve",
            "required": [
              "sc_type"
            ],
            "type": "object",
            "oneOf": [
              {
                "title": "rt",
                "required": [
                  "rt_choice"
                ],
                "properties": {
                  "sc_type": {
                    "description": "Realtime service curve",
                    "const": "rt"
                  },
                  "rt_choice": {
                    "$ref": "#/components/schemas/sc_choice"
                  }
                }
              },
              {
                "title": "ls",
                "required": [
                  "ls_choice"
                ],
                "properties": {
                  "sc_type": {
                    "description": "Linkshare service curve",
                    "const": "ls"
                  },
                  "ls_choice": {
                    "$ref": "#/components/schemas/sc_choice"
                  },
                  "ul_choice": {
                    "$ref": "#/components/schemas/sc_choice"
                  }
                }
              },
              {
                "title": "sc",
                "required": [
                  "sc_choice"
                ],
                "properties": {
                  "sc_type": {
                    "description": "Realtime + Linkshare service curve",
                    "const": "sc"
                  },
                  "sc_choice": {
                    "$ref": "#/components/schemas/sc_choice"
                  },
                  "ul_choice": {
                    "$ref": "#/components/schemas/sc_choice"
                  }
                }
              }
            ]
          }
        }
      },
      "in_htb_qos_write": {
        "title": "HTB",
        "description": "`HTB` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "selection_size",
          "rate"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "simple": {
            "description": "Simple mode of HTB (10 classes max, fast mode)",
            "type": "boolean"
          },
          "rate": {
            "description": "Rate value (10Mbit, 100kbit, 1Gbit)",
            "$ref": "#/components/schemas/RATE_VALUE_KMG"
          },
          "selection_size": {
            "description": "One round data dequeue size (Bytes)",
            "$ref": "#/components/schemas/UINT"
          },
          "default_class_id": {
            "description": "Default class id for unclassified traffic",
            "$ref": "#/components/schemas/QOS_ID"
          }
        }
      },
      "in_htb_class_write": {
        "title": "Add HTB class",
        "description": "Add class for HTB queueing discipline",
        "required": [
          "interface_name",
          "class_id",
          "parent_id",
          "rate",
          "selection_size"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "class_id": {
            "description": "`Class ID`",
            "$ref": "#/components/schemas/CLASS_ID"
          },
          "parent_id": {
            "description": "Parent `class ID`",
            "$ref": "#/components/schemas/CLASS_ID"
          },
          "rate": {
            "description": "Rate limit",
            "type": "object",
            "oneOf": [
              {
                "title": "percent",
                "required": [
                  "rate_percent"
                ],
                "additionalProperties": false,
                "properties": {
                  "rate_percent": {
                    "description": "Rate value in percentage of root class",
                    "$ref": "#/components/schemas/PERCENT"
                  }
                }
              },
              {
                "title": "value",
                "required": [
                  "rate_value"
                ],
                "additionalProperties": false,
                "properties": {
                  "rate_value": {
                    "description": "Rate value (10Mbit, 100Kbit, 1Gbit)",
                    "$ref": "#/components/schemas/RATE_VALUE"
                  }
                }
              }
            ]
          },
          "selection_size": {
            "description": "One round data dequeue size (Bytes)",
            "$ref": "#/components/schemas/UINT"
          },
          "priority": {
            "description": "Class priority",
            "$ref": "#/components/schemas/UINT3"
          },
          "ceil": {
            "description": "Maximum class speed. Default value is `rate-value`",
            "type": "object",
            "oneOf": [
              {
                "title": "percent",
                "required": [
                  "ceil_percent"
                ],
                "additionalProperties": false,
                "properties": {
                  "ceil_percent": {
                    "description": "Rate value in percentage of root class",
                    "$ref": "#/components/schemas/PERCENT"
                  }
                }
              },
              {
                "title": "value",
                "required": [
                  "ceil_value"
                ],
                "additionalProperties": false,
                "properties": {
                  "ceil_value": {
                    "description": "Rate value (10Mbit, 100Kbit, 1Gbit)",
                    "$ref": "#/components/schemas/RATE_VALUE"
                  }
                }
              }
            ]
          }
        }
      },
      "in_htb_stat_write": {
        "title": "HTB statistics",
        "description": "Manage kernel HTB statistics collection",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "Switch statistics collection",
            "$ref": "#/components/schemas/ON_OFF"
          }
        }
      },
      "in_gred_qos_write": {
        "title": "GRED",
        "description": "`GRED` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "queues",
          "default-queue"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "queues": {
            "description": "Number of queues",
            "$ref": "#/components/schemas/UINT_1_16"
          },
          "default-queue": {
            "description": "Default queue number",
            "$ref": "#/components/schemas/UINT"
          },
          "grio": {
            "description": "Turns on the RIO-like buffering scheme",
            "type": "boolean"
          }
        }
      },
      "in_gred_vq_write": {
        "title": "add GRED vq",
        "description": "Configure virtual-queue for GRED",
        "required": [
          "interface_name",
          "queue_number",
          "parent_id",
          "queue-size",
          "min",
          "max",
          "avpkt",
          "burst"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "parent_id": {
            "description": "Parent `QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "queue_number": {
            "description": "Queue number",
            "$ref": "#/components/schemas/UINT"
          },
          "queue-size": {
            "description": "Queue size, upon reaching which all extra packets will be dropped. Value must be greater than `max-bytes-value` + `burst-value` (bytes).",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "min": {
            "description": "Queue size for minimum probability packet marking (bytes)",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "max": {
            "description": "Queue size for maximum probability packet marking (bytes). Value must be at least twice as large as `min-bytes`.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "avpkt": {
            "description": "Average packet size. This value is used with `burst` to define a time constant for calculating the average queue size. Recommended value is 1000.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "burst": {
            "description": "Burst value. This value is used to calculate the average queue size. Recommended value - `(2 * min-bytes + max-bytes ) / ( 3 * avpkt-bytes )`",
            "$ref": "#/components/schemas/UINT"
          },
          "prio": {
            "description": "Identifies the virtual queue priority",
            "$ref": "#/components/schemas/UINT_1_16"
          },
          "bandwidth": {
            "description": "Wire-speed of the interface",
            "$ref": "#/components/schemas/RATE_VALUE"
          },
          "probability": {
            "description": "Marking packet max probability. Recommended values - 1% or 2%",
            "$ref": "#/components/schemas/UINT_1_99"
          }
        }
      },
      "in_wred_qos_write": {
        "title": "WRED",
        "description": "`WRED` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "queues",
          "default-queue"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "queues": {
            "description": "Number of queues",
            "$ref": "#/components/schemas/UINT_1_16"
          },
          "default-queue": {
            "description": "Default queue number (default value is 0)",
            "$ref": "#/components/schemas/UINT"
          }
        }
      },
      "in_wred_vq_write": {
        "title": "add WRED vq",
        "description": "Configure virtual-queue for WRED",
        "required": [
          "interface_name",
          "queue_number",
          "parent_id",
          "queue-size",
          "min",
          "max",
          "avpkt",
          "burst",
          "probability"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "parent_id": {
            "description": "Parent `QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "queue_number": {
            "description": "Queue number",
            "$ref": "#/components/schemas/UINT"
          },
          "queue-size": {
            "description": "Queue size, upon reaching which all extra packets will be dropped. Value must be greater than `max-bytes-value` + `burst-value` (bytes).",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "min": {
            "description": "Queue size for minimum probability packet marking (bytes)",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "max": {
            "description": "Queue size for maximum probability packet marking (bytes). Value must be at least twice as large as `min-bytes`.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "avpkt": {
            "description": "Average packet size. This value is used with `burst` to define a time constant for calculating the average queue size. Recommended value is 1000.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "burst": {
            "description": "Burst value. This value is used to calculate the average queue size. Recommended value - `(2 * min-bytes + max-bytes ) / ( 3 * avpkt-bytes )`",
            "$ref": "#/components/schemas/UINT"
          },
          "probability": {
            "description": "Marking packet max probability. Recommended values - 1% or 2%",
            "$ref": "#/components/schemas/UINT_1_99"
          }
        }
      },
      "in_rio_qos_write": {
        "title": "RIO",
        "description": "`RIO` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "queues",
          "default-queue"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "queues": {
            "description": "Number of queues",
            "$ref": "#/components/schemas/UINT_1_16"
          },
          "default-queue": {
            "description": "Default queue number (default value is 0)",
            "$ref": "#/components/schemas/UINT4"
          }
        }
      },
      "in_rio_vq_write": {
        "title": "add RIO vq",
        "description": "Configure virtual-queue for RIO",
        "required": [
          "interface_name",
          "queue_number",
          "parent_id",
          "queue-size",
          "min",
          "max",
          "avpkt",
          "burst"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "parent_id": {
            "description": "Parent `QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "queue_number": {
            "description": "Queue number",
            "$ref": "#/components/schemas/UINT"
          },
          "queue-size": {
            "description": "Queue size, upon reaching which all extra packets will be dropped. Value must be greater than `max-bytes-value` + `burst-value` (bytes).",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "min": {
            "description": "Queue size for minimum probability packet marking (bytes)",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "max": {
            "description": "Queue size for maximum probability packet marking (bytes). Value must be at least twice as large as `min-bytes`.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "avpkt": {
            "description": "Average packet size. This value is used with `burst` to define a time constant for calculating the average queue size. Recommended value is 1000.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "burst": {
            "description": "Burst value. This value is used to calculate the average queue size. Recommended value - `(2 * min-bytes + max-bytes ) / ( 3 * avpkt-bytes )`",
            "$ref": "#/components/schemas/UINT"
          },
          "prio": {
            "description": "Identifies the virtual queue priority",
            "$ref": "#/components/schemas/UINT_1_255"
          },
          "probability": {
            "description": "Marking packet max probability. Recommended values - 1% or 2%",
            "$ref": "#/components/schemas/UINT_0_100"
          }
        }
      },
      "in_input_qos_write": {
        "title": "QoS input",
        "description": "`Input` configuration",
        "required": [
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "rate": {
            "description": "Speed value",
            "type": "object",
            "required": [
              "burst_value"
            ],
            "additionalProperties": false,
            "properties": {
              "burst_value": {
                "description": "Burst value (bytes)",
                "$ref": "#/components/schemas/UINT_1_"
              },
              "rate_value": {
                "description": "Rate value (10Mbit, 100kbit, 1Gbit)",
                "$ref": "#/components/schemas/RATE_VALUE"
              }
            }
          }
        }
      },
      "in_fifo_qos_write": {
        "title": "QoS FIFO",
        "description": "`FIFO` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "limit"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "limit": {
            "description": "Queue limit",
            "type": "object",
            "oneOf": [
              {
                "title": "Packet",
                "required": [
                  "packet_limit"
                ],
                "additionalProperties": false,
                "properties": {
                  "packet_limit": {
                    "description": "Queue size in packets",
                    "$ref": "#/components/schemas/UINT"
                  }
                }
              },
              {
                "title": "Bytes",
                "required": [
                  "byte_limit"
                ],
                "additionalProperties": false,
                "properties": {
                  "byte_limit": {
                    "description": "Queue size in bytes",
                    "$ref": "#/components/schemas/UINT"
                  }
                }
              }
            ]
          }
        }
      },
      "in_pq_qos_write": {
        "title": "QoS PQ",
        "description": "`PQ` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "queues": {
            "description": "Number of queues (from 3 to 16)",
            "$ref": "#/components/schemas/UINT_3_16"
          }
        }
      },
      "in_red_qos_write": {
        "title": "QoS RED",
        "description": "`RED` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "queue_size",
          "min",
          "max",
          "avpkt",
          "burst"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "queue_size": {
            "description": "Queue size, upon reaching which all extra packets will be dropped. Value must be greater than `max` + `burst` (bytes).",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "min": {
            "description": "Queue size for minimum probability packet marking (bytes)",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "max": {
            "description": "Queue size for maximum probability packet marking (bytes). Value must be at least twice as large as `min`.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "avpkt": {
            "description": "Average packet size. This value is used with `burst` to define a time constant for calculating the average queue size. Recommended value is 1000.",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "burst": {
            "description": "Burst value. This value is used to calculate the average queue size. Recommended value - `(2 * min + max ) / ( 3 * avpkt )`",
            "$ref": "#/components/schemas/UINT"
          },
          "ecn": {
            "description": "Explicit Congestion Notification flags on packets. Recommended.",
            "type": "boolean"
          },
          "probability": {
            "description": "Marking packet max probability",
            "$ref": "#/components/schemas/UINT_0_100"
          }
        }
      },
      "in_sfq_qos_write": {
        "title": "QoS SFQ",
        "description": "`SFQ` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "queues": {
            "description": "Number of queues (default value is 1024)",
            "$ref": "#/components/schemas/UINT"
          },
          "queue_size": {
            "description": "Maximum number of packets in the queue. Default value is 127",
            "$ref": "#/components/schemas/UINT_2_4294967295"
          },
          "rehash_time": {
            "description": "Rehash time (Seconds). Default value is 0",
            "$ref": "#/components/schemas/UINT"
          },
          "selection_size": {
            "description": "One round dequeue data size (bytes).",
            "$ref": "#/components/schemas/UINT"
          }
        }
      },
      "in_tbf_qos_write": {
        "title": "QoS TBF",
        "description": "`TBF` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id",
          "rate",
          "limit"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "rate": {
            "description": "Speed limit",
            "$ref": "#/components/schemas/RATE_VALUE_KMG"
          },
          "maxburst": {
            "description": "Tocken bucket size (bytes). Recommended calculation formula: `rate / 100`",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "minburst": {
            "description": "Peakrate bucket size (bytes)",
            "$ref": "#/components/schemas/UINT"
          },
          "limit": {
            "description": "Limit for packets waiting tockens",
            "type": "object",
            "oneOf": [
              {
                "title": "Latency",
                "required": [
                  "latency_limit"
                ],
                "additionalProperties": false,
                "properties": {
                  "latency_limit": {
                    "description": "Time limit for packets waiting tockens (Microseconds)",
                    "$ref": "#/components/schemas/UINT_1_4294967295"
                  }
                }
              },
              {
                "title": "Buffer",
                "required": [
                  "buffer_limit"
                ],
                "additionalProperties": false,
                "properties": {
                  "buffer_limit": {
                    "description": "Size limit for packets waiting tockens (bytes)",
                    "$ref": "#/components/schemas/UINT_1_4294967295"
                  }
                }
              }
            ]
          }
        }
      },
      "in_wfq_qos_write": {
        "title": "QoS WFQ",
        "description": "`WFQ` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "queues": {
            "description": "Number of queues ",
            "$ref": "#/components/schemas/QUEUE_COUNT"
          },
          "length": {
            "description": "Length of queues",
            "$ref": "#/components/schemas/UINT16"
          }
        }
      },
      "in_wrr_qos_write": {
        "title": "QoS WRR",
        "description": "`WRR` configuration",
        "required": [
          "interface_name",
          "qdisc_id",
          "parent_id"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "qdisc_id": {
            "description": "`QoS ID`",
            "$ref": "#/components/schemas/QOS_ID"
          },
          "parent_id": {
            "description": "Parent class `id`",
            "oneOf": [
              {
                "title": "`QoS`/Class `ID`",
                "$ref": "#/components/schemas/CLASS_ID"
              },
              {
                "title": "root",
                "type": "string",
                "const": "root"
              }
            ]
          },
          "length": {
            "description": "Length of queues. Default value is 64",
            "$ref": "#/components/schemas/UINT_1_65535"
          },
          "weights": {
            "description": "Weights of queues. Default value is 1",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "weight0": {
                "description": "Set weight of VLAN queue with 0 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "weight1": {
                "description": "Set weight of VLAN queue with 1 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "weight2": {
                "description": "Set weight of VLAN queue with 2 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "weight3": {
                "description": "Set weight of VLAN queue with 3 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "weight4": {
                "description": "Set weight of VLAN queue with 4 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "weight5": {
                "description": "Set weight of VLAN queue with 5 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "weight6": {
                "description": "Set weight of VLAN queue with 6 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              },
              "weight7": {
                "description": "Set weight of VLAN queue with 7 priority",
                "$ref": "#/components/schemas/UINT_1_255"
              }
            }
          }
        }
      },
      "qos_stat_r": {
        "required": [
          "iface_name",
          "statistics"
        ],
        "properties": {
          "iface_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Interface system name"
          },
          "statistics": {
            "type": "array",
            "description": "QoS statistics",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "out_qos_stat_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get queueing discipline settings",
        "properties": {
          "result": {
            "title": "response to out_qos_stat_read request",
            "type": "object",
            "required": [
              "qos"
            ],
            "properties": {
              "qos": {
                "type": "array",
                "description": "List of QoS",
                "items": {
                  "$ref": "#/components/schemas/qos_stat_r"
                }
              }
            }
          }
        }
      },
      "out_qos_classes_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get QoS classes",
        "properties": {
          "result": {
            "title": "response to out_qos_classes_read request",
            "type": "object",
            "required": [
              "classes"
            ],
            "properties": {
              "qos": {
                "type": "array",
                "description": "List of QoS classes",
                "items": {
                  "$ref": "#/components/schemas/qos_stat_r"
                }
              }
            }
          }
        }
      },
      "out_qos_filters_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get filters of QoS classes",
        "properties": {
          "result": {
            "title": "response to out_qos_filters_read request",
            "type": "object",
            "required": [
              "filters"
            ],
            "properties": {
              "qos": {
                "type": "array",
                "description": "List of filters of QoS classes ",
                "items": {
                  "$ref": "#/components/schemas/qos_stat_r"
                }
              }
            }
          }
        }
      },
      "in_qos_statistics_clear_write": {
        "title": "Clear QoS statistics",
        "description": "Reset traffic counters on the interface",
        "required": [
          "iface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "iface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          }
        }
      },
      "in_qos_delete_write": {
        "title": "Negate QoS config",
        "description": "Negate Quality of Service configuration",
        "required": [
          "interface_name",
          "obj_to_delete"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "obj_to_delete": {
            "oneOf": [
              {
                "title": "QoS",
                "required": [
                  "qdisc_id",
                  "obj_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "obj_type": {
                    "type": "string",
                    "const": "qos",
                    "description": "Delete QoS"
                  },
                  "qdisc_id": {
                    "$ref": "#/components/schemas/QOS_ID",
                    "description": "QoS ID"
                  }
                }
              },
              {
                "title": "class",
                "required": [
                  "class_id",
                  "obj_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "obj_type": {
                    "type": "string",
                    "const": "class",
                    "description": "Delete QoS class"
                  },
                  "class_id": {
                    "$ref": "#/components/schemas/CLASS_ID",
                    "description": "Class ID"
                  }
                }
              },
              {
                "title": "input",
                "required": [
                  "obj_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "obj_type": {
                    "type": "string",
                    "const": "input",
                    "description": "Delete QoS input"
                  }
                }
              }
            ]
          }
        }
      },
      "in_qos_filter_write": {
        "title": "Negate QoS config",
        "description": "Negate Quality of Service configuration",
        "required": [
          "interface_name",
          "class_id",
          "action",
          "filter"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "description": "Interface system name",
            "$ref": "#/components/schemas/STRING"
          },
          "class_id": {
            "description": "Class ID",
            "$ref": "#/components/schemas/CLASS_ID"
          },
          "action": {
            "enum": [
              "include",
              "exclude"
            ],
            "description": "Attache flow to class/Disconnect flow from class"
          },
          "filter": {
            "type": "object",
            "required": [
              "filter_type"
            ],
            "oneOf": [
              {
                "title": "flow",
                "additionalProperties": false,
                "required": [
                  "flow_id"
                ],
                "properties": {
                  "filter_type": {
                    "const": "flow",
                    "description": "Flow filter"
                  },
                  "flow_id": {
                    "description": "Flow ID",
                    "$ref": "#/components/schemas/UINT_0_4294967295"
                  },
                  "policy": {
                    "type": "object",
                    "description": "Speed policy",
                    "additionalProperties": false,
                    "required": [
                      "rate",
                      "burst"
                    ],
                    "properties": {
                      "rate": {
                        "description": "Specify speed value (10Mbit, 100Kbit, 1Gbit)",
                        "$ref": "#/components/schemas/STRING"
                      },
                      "burst": {
                        "description": "Specify burst value (Bytes)",
                        "$ref": "#/components/schemas/UINT"
                      }
                    }
                  }
                }
              },
              {
                "title": "mpls",
                "required": [
                  "tc_class"
                ],
                "additionalProperties": false,
                "properties": {
                  "filter_type": {
                    "const": "mpls",
                    "description": "MPLS filter"
                  },
                  "tc_class": {
                    "description": "Traffic class value",
                    "$ref": "#/components/schemas/UINT3"
                  }
                }
              }
            ]
          }
        }
      },
      "ospf_show_type": {
        "type": "string",
        "enum": [
          "border-routers",
          "database",
          "database asbr-summary",
          "database external",
          "database max-age",
          "database network",
          "database nssa-external",
          "database opaque-area",
          "database opaque-as",
          "database opaque-link",
          "database router",
          "database self-originate",
          "database summary",
          "buffers",
          "igp-shortcut-lsp",
          "igp-shortcut-route",
          "multi-area-adjacencies",
          "neighbour all",
          "neighbour detail",
          "neighbour detail all",
          "neighbour private",
          "protocols",
          "opaque-area valid",
          "opaque-as valid",
          "opaque-link valid",
          "te-database",
          "virtual-links",
          "virtual-links brief"
        ]
      },
      "ospf_show_process_type": {
        "type": "string",
        "enum": [
          "border-routers",
          "database",
          "database asbr-summary",
          "database external",
          "database max-age",
          "database network",
          "database nssa-external",
          "database opaque-area",
          "database opaque-as",
          "database opaque-link",
          "database router",
          "database self-originate",
          "database summary",
          "buffers",
          "multi-area-adjacencies",
          "neighbour all",
          "neighbour detail",
          "neighbour detail all",
          "neighbour private",
          "opaque-area valid",
          "opaque-as valid",
          "opaque-link valid",
          "te-database",
          "virtual-links",
          "virtual-links brief"
        ]
      },
      "ospf_show_route_type": {
        "type": "string",
        "oneOf": [
          {
            "type": "string",
            "const": "summary",
            "title": "display summary"
          },
          {
            "type": "string",
            "const": "fast-reroute",
            "title": "display fast-retoute info"
          },
          {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IP address"
          },
          {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
            "description": "subnet1"
          }
        ]
      },
      "ospf_router": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "processID"
            ],
            "properties": {
              "processID": {
                "type": "integer",
                "const": 0,
                "description": "default instance - should be run in default VRF"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "processID"
            ],
            "properties": {
              "processID": {
                "$ref": "#/components/schemas/UINT_1_65535"
              },
              "vrf": {
                "$ref": "#/components/schemas/VRF",
                "description": "VRF name - missing if running on default VRF"
              }
            }
          }
        ]
      },
      "out_ospf_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf status",
        "description": "Result of reading OSPF status",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_router"
            },
            "description": "list of routers with their process IDs and VRFs"
          }
        }
      },
      "in_ospf_write": {
        "description": "add/delete OSPF router",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add OSPF router",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_router",
                    "description": "router ID and optional VRF to add"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete OSPF router",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/UINT16",
                    "description": "OSPF router ID to delete"
                  }
                }
              }
            ]
          }
        }
      },
      "ospf_default_information_originate_r": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "enable"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": false,
                "description": "disabled"
              }
            }
          },
          {
            "type": "object",
            "description": "metric, metric_type and route_map migh be omitted here",
            "additionalProperties": false,
            "required": [
              "enable",
              "always"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": true,
                "description": "enabled"
              },
              "always": {
                "type": "boolean",
                "description": "Used to advertise the default route regardless of whether there is a default route"
              },
              "metric": {
                "$ref": "#/components/schemas/UINT_0_16777214",
                "description": "OSPF metric used in creating the default route"
              },
              "metric_type": {
                "type": "integer",
                "enum": [
                  1,
                  2
                ],
                "description": "The external link type associated with the default route advertised into the OSPF routing domain (see RFC 3101)"
              },
              "route_map": {
                "$ref": "#/components/schemas/WORD",
                "description": "Route map"
              }
            }
          }
        ]
      },
      "ospf_default_information_originate_w": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "enable"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": false,
                "description": "disabled"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "enable"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": true,
                "description": "enabled"
              },
              "always": {
                "type": "boolean",
                "description": "Used to advertise the default route regardless of whether there is a default route"
              },
              "metric": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT_0_16777214",
                    "description": "OSPF metric used in creating the default route"
                  },
                  {
                    "type": "null",
                    "description": "unset to default"
                  }
                ]
              },
              "metric_type": {
                "oneOf": [
                  {
                    "type": "integer",
                    "enum": [
                      1,
                      2
                    ],
                    "description": "The external link type associated with the default route advertised into the OSPF routing domain (see RFC 3101)"
                  },
                  {
                    "type": "null",
                    "description": "unset to default"
                  }
                ]
              },
              "route_map": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WORD",
                    "description": "Route map"
                  },
                  {
                    "type": "null",
                    "description": "unset route map"
                  }
                ]
              }
            }
          }
        ]
      },
      "ospf_default_information_originate_area": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "enable"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": false,
                "description": "disabled"
              }
            }
          },
          {
            "type": "object",
            "description": "metric, metric_type and route_map migh be omitted here",
            "additionalProperties": false,
            "required": [
              "enable"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": true,
                "description": "enabled"
              },
              "metric": {
                "$ref": "#/components/schemas/UINT_0_16777214",
                "description": "OSPF metric used in creating the default route"
              },
              "metric_type": {
                "type": "integer",
                "enum": [
                  1,
                  2
                ],
                "description": "The external link type associated with the default route advertised into the OSPF routing domain (see RFC 3101)"
              },
              "route_map": {
                "$ref": "#/components/schemas/WORD",
                "description": "Route map"
              }
            }
          }
        ]
      },
      "ospf_restart": {
        "oneOf": [
          {
            "type": "string",
            "const": "disable",
            "description": "Disable restart"
          },
          {
            "type": "string",
            "const": "lls",
            "description": "Enable link local signaling (LLS) feature"
          },
          {
            "type": "string",
            "const": "graceful",
            "description": "Enable OSPF graceful restart or restart signaling. If a router is not restart-enabled, it cannot enter graceful  restart mode and act as a helper"
          }
        ]
      },
      "ospf_cspf_r": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "enable",
              "default_reoptimization_interval",
              "default_retry_interval",
              "better_protection",
              "tie_break"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": true,
                "description": "Enable Constrained Shortest Path First"
              },
              "default_reoptimization_interval": {
                "$ref": "#/components/schemas/UINT_1_3600",
                "description": "CSPF default computation reoptimization interval"
              },
              "default_retry_interval": {
                "$ref": "#/components/schemas/UINT_1_3600",
                "description": "CSPF default computation retry interval"
              },
              "better_protection": {
                "type": "boolean",
                "description": "Enable/disable better CSPF protection"
              },
              "tie_break": {
                "type": "string",
                "enum": [
                  "disable",
                  "least-fill",
                  "most-fill",
                  "random"
                ],
                "description": "CSPF tie break method"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "enable"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": false,
                "description": "Disable Constrained Shortest Path First"
              }
            }
          }
        ]
      },
      "ospf_cspf_w": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": true,
                "description": "Enable Constrained Shortest Path First"
              },
              "default_reoptimization_interval": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT_1_3600",
                    "description": "CSPF default computation reoptimization interval"
                  },
                  {
                    "type": "null",
                    "description": "set to default value"
                  }
                ]
              },
              "default_retry_interval": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT_1_3600",
                    "description": "CSPF default computation retry interval"
                  },
                  {
                    "type": "null",
                    "description": "set to default value"
                  }
                ]
              },
              "better_protection": {
                "type": "boolean",
                "description": "Enable/disable better CSPF protection"
              },
              "tie_break": {
                "type": "string",
                "enum": [
                  "disable",
                  "least-fill",
                  "most-fill",
                  "random"
                ],
                "description": "CSPF tie break method"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "enable"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "const": false,
                "description": "Disable Constrained Shortest Path First"
              }
            }
          }
        ]
      },
      "ospf_distance_r": {
        "description": "all properties are optional, if some of them is missing this means parameter is unset",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "default": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "default administrative distance used when no other specification exists for a routing"
          },
          "external": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "Routes from other routing domains learned by redistribution"
          },
          "inter_area": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "Routes from one area to another area"
          },
          "intra_area": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "Routes within an area"
          }
        }
      },
      "ospf_distance_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "default": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_255",
                "description": "default administrative distance used when no other specification exists for a routing"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          },
          "external": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_255",
                "description": "Routes from other routing domains learned by redistribution"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          },
          "inter_area": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_255",
                "description": "Routes from one area to another area"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          },
          "intra_area": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_255",
                "description": "Routes within an area"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          }
        }
      },
      "ospf_domain_id_r": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "const": "NULL"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "type",
              "value"
            ],
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "type-as",
                  "type-as4",
                  "type-back-comp",
                  "type-ip"
                ]
              },
              "value": {
                "type": "string",
                "pattern": "[0-9a-fA-F]{12}",
                "description": "6-byte hexadecimal number"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "type",
              "value"
            ],
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "const": "ip"
              },
              "value": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "domain ID in form of IP address"
              }
            }
          }
        ]
      },
      "ospf_fast_reroute_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "keep_all_paths",
          "tie_break"
        ],
        "properties": {
          "keep_all_paths": {
            "type": "boolean",
            "description": "enable/disable fast routing"
          },
          "tie_break": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "broadcast-interface-disjoint",
                "interface-disjoint",
                "node-protecting",
                "primary-path"
              ],
              "maxItems": 4
            },
            "description": "order of tie-breaks (each item should be unique!)"
          }
        }
      },
      "ospf_fast_reroute_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "keep_all_paths": {
            "type": "boolean",
            "description": "enable/disable fast routing"
          },
          "tie_break": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "broadcast-interface-disjoint",
                    "interface-disjoint",
                    "node-protecting",
                    "primary-path"
                  ],
                  "maxItems": 4
                },
                "description": "order of tie-breaks (each item should be unique!)"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          }
        }
      },
      "ospf_host": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "address",
          "area",
          "cost"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Host address"
          },
          "area": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "OSPF area ID in IP address format"
          },
          "cost": {
            "$ref": "#/components/schemas/UINT16",
            "description": "Cost (0...65535)"
          }
        }
      },
      "ospf_host_w": {
        "description": "host parameters to modify",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Host address"
          },
          "area": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "OSPF area ID in IP address format"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT16",
                "description": "Cost (0...65535)"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          }
        }
      },
      "ospf_log_adjacency_changes": {
        "type": "string",
        "enum": [
          "disable",
          "enable",
          "detail"
        ]
      },
      "ospf_neighbor_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Neighbor address"
          },
          "cost": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Metric (1..65535)"
          },
          "priority": {
            "$ref": "#/components/schemas/UINT8",
            "description": "Priority (0..255)"
          },
          "poll_interval": {
            "$ref": "#/components/schemas/UINT_1_2147483647",
            "description": "Poll interval in seconds (1..2147483647)"
          }
        }
      },
      "ospf_neighbor_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Neighbor address"
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "Metric (1..65535)"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT8",
                "description": "Priority (0..255)"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          },
          "poll_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_2147483647",
                "description": "Poll interval in seconds (1..2147483647)"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          }
        }
      },
      "ospf_abr_type_r": {
        "oneOf": [
          {
            "type": "string",
            "const": "unknown",
            "description": "unknown"
          },
          {
            "type": "string",
            "const": "cisco",
            "description": "Alternative ABR, Cisco implementation (RFC3509)"
          },
          {
            "type": "string",
            "const": "ibm",
            "description": "Alternative ABR, IBM implementation (RFC3509)"
          },
          {
            "type": "string",
            "const": "shortcut",
            "description": "Shortcut ABR"
          },
          {
            "type": "string",
            "const": "standard",
            "description": "Standard behavior (RFC2328)"
          }
        ]
      },
      "ospf_abr_type": {
        "oneOf": [
          {
            "type": "string",
            "const": "cisco",
            "description": "Alternative ABR, Cisco implementation (RFC3509)"
          },
          {
            "type": "string",
            "const": "ibm",
            "description": "Alternative ABR, IBM implementation (RFC3509)"
          },
          {
            "type": "string",
            "const": "shortcut",
            "description": "Shortcut ABR"
          },
          {
            "type": "string",
            "const": "standard",
            "description": "Standard behavior (RFC2328)"
          }
        ]
      },
      "ospf_overflow_external": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "maxlsa",
          "timeout"
        ],
        "properties": {
          "maxlsa": {
            "$ref": "#/components/schemas/UINT_0_2147483647",
            "description": "Maximum number of external LSAs to receive in the waiting state"
          },
          "timeout": {
            "$ref": "#/components/schemas/UINT16",
            "description": "The number of seconds the router waits before trying to exit the  database overflow state. If this parameter is 0, the router exits the overflow state only after an explicit administrator command"
          }
        }
      },
      "ospf_overflow_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "database"
        ],
        "properties": {
          "database": {
            "$ref": "#/components/schemas/UINT_0_4294967294",
            "description": "The maximum number of LSAs"
          },
          "external": {
            "$ref": "#/components/schemas/ospf_overflow_external",
            "description": "external database properties might be missing"
          }
        }
      },
      "ospf_overflow_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "database": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_4294967294",
                "description": "The maximum number of LSAs"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "external": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_overflow_external"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          }
        }
      },
      "ospf_redistribute_r": {
        "description": "redistribute entry to read (no index here)",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/UINT_0_16777214",
            "description": "OSPF metric used in creating the default route"
          },
          "metric_type": {
            "type": "integer",
            "enum": [
              1,
              2
            ],
            "description": "The external link type associated with the default route advertised into the OSPF routing domain (see RFC 3101)"
          },
          "route_map": {
            "$ref": "#/components/schemas/WORD",
            "description": "Route map"
          },
          "tag": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "32-bit tag value (0..4294967295)"
          }
        }
      },
      "ospf_redistribute_e": {
        "oneOf": [
          {
            "description": "redistribute entry index",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "type": "string",
                "enum": [
                  "bgp",
                  "connected",
                  "isis",
                  "kernel",
                  "rip",
                  "static"
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "type": "string",
                "const": "ospf"
              },
              "process": {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "OSPF process ID"
              }
            }
          }
        ]
      },
      "ospf_redistribute_w": {
        "description": "redistribute entry for write/update (no index here)",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "metric": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_16777214",
                "description": "OSPF metric used in creating the default route"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "metric_type": {
            "oneOf": [
              {
                "type": "integer",
                "enum": [
                  1,
                  2
                ],
                "description": "The external link type associated with the default route advertised into the OSPF routing domain (see RFC 3101)"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "route_map": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WORD",
                "description": "Route map"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "tag": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "32-bit tag value (0..4294967295)"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          }
        }
      },
      "ospf_summary_address_r": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "advertise"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "IP summary prefix"
              },
              "advertise": {
                "type": "boolean",
                "const": false,
                "description": "suppress routes that match the prefix"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "advertise"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "IP summary prefix"
              },
              "advertise": {
                "type": "boolean",
                "const": true,
                "description": "advertise routes that match the prefix"
              },
              "tag": {
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "32-bit tag value (0..4294967295)"
              }
            }
          }
        ]
      },
      "ospf_summary_address_w": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "advertise"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "IP summary prefix"
              },
              "advertise": {
                "type": "boolean",
                "const": false,
                "description": "suppress routes that match the prefix"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "advertise"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "IP summary prefix"
              },
              "advertise": {
                "type": "boolean",
                "const": true,
                "description": "advertise routes that match the prefix"
              },
              "tag": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT_0_4294967295",
                    "description": "32-bit tag value (0..4294967295)"
                  },
                  {
                    "type": "null",
                    "description": "reset to default value"
                  }
                ]
              }
            }
          }
        ]
      },
      "ospf_timers_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "refresh",
          "lsa_arrival",
          "spf_exp",
          "throttle_lsa"
        ],
        "properties": {
          "refresh": {
            "$ref": "#/components/schemas/UINT_10_1800",
            "description": "LSA refresh timer in seconds"
          },
          "lsa_arrival": {
            "$ref": "#/components/schemas/UINT_0_600000",
            "description": "The minimum delay in milliseconds between accepting the same LSA from neighbors"
          },
          "spf_exp": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "minimum",
              "maximum"
            ],
            "properties": {
              "minimum": {
                "$ref": "#/components/schemas/UINT_0_2147483647",
                "description": "Minimum delay between receiving a topology change to SPF calculation in milliseconds"
              },
              "maximum": {
                "$ref": "#/components/schemas/UINT_0_2147483647",
                "description": "Maximum delay between receiving a topology change to SPF calculation in milliseconds"
              }
            }
          },
          "throttle_lsa": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "start",
              "hold",
              "maximum"
            ],
            "properties": {
              "start": {
                "$ref": "#/components/schemas/UINT_0_600000",
                "description": "Start interval: The minimum delay in milliseconds for the generation of LSAs. The first instance of LSA is always generated immediately upon a local OSPF topology change. The generation of the next LSA is not before the start interval"
              },
              "hold": {
                "$ref": "#/components/schemas/UINT_1_600000",
                "description": "Hold interval: The hold time in milliseconds. This value is used to calculate the subsequent rate limiting times for LSA generation"
              },
              "maximum": {
                "$ref": "#/components/schemas/UINT_1_600000",
                "description": "Maximum interval: The maximum wait time in milliseconds between generation of the same LSA"
              }
            }
          }
        }
      },
      "ospf_timers_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "refresh": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_10_1800",
                "description": "LSA refresh timer in seconds"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "lsa_arrival": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_600000",
                "description": "The minimum delay in milliseconds between accepting the same LSA from neighbors"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "spf_exp": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "minimum",
                  "maximum"
                ],
                "properties": {
                  "minimum": {
                    "$ref": "#/components/schemas/UINT_0_2147483647",
                    "description": "Minimum delay between receiving a topology change to SPF calculation in milliseconds"
                  },
                  "maximum": {
                    "$ref": "#/components/schemas/UINT_0_2147483647",
                    "description": "Maximum delay between receiving a topology change to SPF calculation in milliseconds"
                  }
                }
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "throttle_lsa": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "start",
                  "hold",
                  "maximum"
                ],
                "properties": {
                  "start": {
                    "$ref": "#/components/schemas/UINT_0_600000",
                    "description": "Start interval: The minimum delay in milliseconds for the generation of LSAs. The first instance of LSA is always generated immediately upon a local OSPF topology change. The generation of the next LSA is not before the start interval"
                  },
                  "hold": {
                    "$ref": "#/components/schemas/UINT_1_600000",
                    "description": "Hold interval: The hold time in milliseconds. This value is used to calculate the subsequent rate limiting times for LSA generation"
                  },
                  "maximum": {
                    "$ref": "#/components/schemas/UINT_1_600000",
                    "description": "Maximum interval: The maximum wait time in milliseconds between generation of the same LSA"
                  }
                }
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          }
        }
      },
      "ospf_shortcut": {
        "oneOf": [
          {
            "type": "string",
            "const": "enable",
            "description": "Enable shortcutting through the area"
          },
          {
            "type": "string",
            "const": "disable",
            "description": "Disable shortcutting through the area"
          }
        ]
      },
      "ospf_translator_role": {
        "oneOf": [
          {
            "type": "string",
            "const": "always",
            "description": "Always translate NSSA-LSA to Type-5 LSA"
          },
          {
            "type": "string",
            "const": "never",
            "description": "Never translate NSSA-LSA to Type-5 LSA"
          },
          {
            "type": "string",
            "const": "candidate",
            "description": "Translate NSSA-LSA to Type-5 LSA if router is elected"
          }
        ]
      },
      "ospf_nssa_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_type",
          "no_redistribution",
          "no_summary",
          "translator_role"
        ],
        "properties": {
          "area_type": {
            "type": "string",
            "const": "nssa"
          },
          "default_information_originate": {
            "$ref": "#/components/schemas/ospf_default_information_originate_area",
            "description": "Originate Type 7 LSA default into NSSA area"
          },
          "no_redistribution": {
            "type": "boolean",
            "description": "Do not redistribute into the NSSA"
          },
          "no_summary": {
            "type": "boolean",
            "description": "Do not send summary LSA into NSSA"
          },
          "stability_interval": {
            "$ref": "#/components/schemas/UINT_0_2147483647",
            "description": "Stability timer for a NSSA area, seconds"
          },
          "translator_role": {
            "$ref": "#/components/schemas/ospf_translator_role",
            "description": "NNSA-LSA translation mode"
          }
        }
      },
      "ospf_nssa_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_type"
        ],
        "properties": {
          "area_type": {
            "type": "string",
            "const": "nssa"
          },
          "default_information_originate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_default_information_originate_area",
                "description": "Originate Type 7 LSA default into NSSA area"
              },
              {
                "type": "null",
                "description": "do not originate"
              }
            ]
          },
          "no_redistribution": {
            "type": "boolean",
            "description": "Do not redistribute into the NSSA"
          },
          "no_summary": {
            "type": "boolean",
            "description": "Do not send summary LSA into NSSA"
          },
          "stability_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_2147483647",
                "description": "Stability timer for a NSSA area, seconds"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          },
          "translator_role": {
            "$ref": "#/components/schemas/ospf_translator_role",
            "description": "NNSA-LSA translation mode"
          }
        }
      },
      "ospf_stub_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_type",
          "no_summary"
        ],
        "properties": {
          "area_type": {
            "type": "string",
            "const": "stub"
          },
          "no_summary": {
            "type": "boolean",
            "description": "Do not send summary LSA into NSSA"
          }
        }
      },
      "ospf_stub_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_type"
        ],
        "properties": {
          "area_type": {
            "type": "string",
            "const": "stub"
          },
          "no_summary": {
            "type": "boolean",
            "description": "Do not send summary LSA into NSSA"
          }
        }
      },
      "ospf_vlink_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_id",
          "peer_id",
          "fall_over_bfd"
        ],
        "properties": {
          "area_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area id"
          },
          "peer_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": " Router ID (IP addr) associated with virtual link neighbor"
          },
          "instance_id": {
            "$ref": "#/components/schemas/UINT8",
            "description": "OSPF instance ID"
          },
          "dead_interval": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "dead interval in seconds"
          },
          "fall_over_bfd": {
            "type": "boolean",
            "description": "enable BFD"
          },
          "hello_interval": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "interval between HELLO packets in seconds"
          },
          "retransmit_interval": {
            "$ref": "#/components/schemas/UINT_1_1800",
            "description": "interval between LSA retransmission in seconds"
          },
          "transmit_delay": {
            "$ref": "#/components/schemas/UINT_1_3600",
            "description": "estimated time to transmit LSA packets in seconds"
          },
          "authentication": {
            "type": "string",
            "enum": [
              "null",
              "simple-text",
              "md5"
            ],
            "description": "authenticaiton type"
          },
          "authentication_key": {
            "$ref": "#/components/schemas/ospf_authentication_key_r",
            "description": "authentication key for simple text authentication"
          },
          "md5_keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_md5_key_r"
            },
            "description": "set of md5 authentication keys"
          }
        }
      },
      "ospf_vlink_a": {
        "title": "add vlink",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_id",
          "peer_id"
        ],
        "properties": {
          "area_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area id"
          },
          "peer_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": " Router ID (IP addr) associated with virtual link neighbor"
          },
          "instance_id": {
            "$ref": "#/components/schemas/UINT8",
            "description": "OSPF instance ID, note: normally, this field can not be changes after creation of virtual link"
          }
        }
      },
      "ospf_vlink_w": {
        "title": "modify vlink, use routerID as index",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_id",
          "peer_id"
        ],
        "properties": {
          "area_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area id"
          },
          "peer_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": " Router ID (IP addr) associated with virtual link neighbor"
          },
          "dead_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "dead interval in seconds"
              },
              {
                "type": "null",
                "description": "unset to default"
              }
            ]
          },
          "fall_over_bfd": {
            "type": "boolean",
            "description": "enable BFD"
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "interval between HELLO packets in seconds"
              },
              {
                "type": "null",
                "description": "unset to default"
              }
            ]
          },
          "retransmit_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_1800",
                "description": "interval between LSA retransmission in seconds"
              },
              {
                "type": "null",
                "description": "unset to default"
              }
            ]
          },
          "transmit_delay": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_3600",
                "description": "estimated time to transmit LSA packets in seconds"
              },
              {
                "type": "null",
                "description": "unset to default"
              }
            ]
          },
          "authentication": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "null",
                  "simple-text",
                  "md5"
                ],
                "description": "authenticaiton type"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "authentication_key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_authentication_key_vlink_w",
                "description": "authentication key for simple text authentication (encrypted only)"
              },
              {
                "type": "null",
                "description": "remove key"
              }
            ]
          },
          "md5_keys": {
            "$ref": "#/components/schemas/ospf_md5_key_w",
            "description": "one md5 authentication key to modify or delete"
          }
        }
      },
      "ospf_vlink_d": {
        "title": "delete vlink",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_id",
          "peer_id"
        ],
        "properties": {
          "area_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area id"
          },
          "peer_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": " Router ID (IP addr) associated with virtual link neighbor"
          }
        }
      },
      "ospf_range_r": {
        "oneOf": [
          {
            "title": "advertise prefix",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "action"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "area range prefix"
              },
              "action": {
                "type": "string",
                "const": "advertise"
              }
            }
          },
          {
            "title": "do not advertise prefix",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "action"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "area range prefix"
              },
              "action": {
                "type": "string",
                "const": "not-advertise"
              }
            }
          },
          {
            "title": "substitute prefix",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "action",
              "mangle"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "area range prefix"
              },
              "action": {
                "type": "string",
                "const": "substitute"
              },
              "mangle": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "Network prefix to be announced instead of range"
              }
            }
          }
        ]
      },
      "ospf_range_w": {
        "oneOf": [
          {
            "title": "advertise prefix",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "action"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "area range prefix"
              },
              "action": {
                "type": "string",
                "const": "advertise"
              }
            }
          },
          {
            "title": "do not advertise prefix",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "action"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "area range prefix"
              },
              "action": {
                "type": "string",
                "const": "not-advertise"
              }
            }
          },
          {
            "title": "substitute prefix",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "action",
              "mangle"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "area range prefix"
              },
              "action": {
                "type": "string",
                "const": "substitute"
              },
              "mangle": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "Network prefix to be announced instead of range"
              }
            }
          },
          {
            "title": "delete prefix entry",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prefix",
              "action"
            ],
            "properties": {
              "prefix": {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "description": "area range prefix"
              },
              "action": {
                "type": "string",
                "const": "delete"
              }
            }
          }
        ]
      },
      "ospf_area_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_id"
        ],
        "properties": {
          "area_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area ID in form of IP address"
          },
          "authentication": {
            "type": "string",
            "enum": [
              "null",
              "simple-text",
              "md5"
            ],
            "description": "authenticaiton type"
          },
          "default_cost": {
            "$ref": "#/components/schemas/UINT_0_16777215",
            "description": "Stub's advertised default summary cost (0..16777215)"
          },
          "filter_list_in": {
            "$ref": "#/components/schemas/WORD",
            "description": "Filter networks sent to this area"
          },
          "filter_list_out": {
            "$ref": "#/components/schemas/WORD",
            "description": "Filter networks sent from this area"
          },
          "ranges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_range_r"
            },
            "description": "Summarize routes matching address/mask"
          },
          "shortcut": {
            "$ref": "#/components/schemas/ospf_shortcut",
            "description": "shortcut mode"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_nssa_r",
                "description": "NSSA area parameters"
              },
              {
                "$ref": "#/components/schemas/ospf_stub_r",
                "description": "stub area parameters"
              }
            ]
          }
        }
      },
      "ospf_area_a": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_id"
        ],
        "properties": {
          "area_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area ID in form of IP address"
          },
          "area_type": {
            "type": "string",
            "enum": [
              "nssa",
              "stub"
            ]
          }
        }
      },
      "ospf_area_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "area_id"
        ],
        "properties": {
          "area_id": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area ID in form of IP address"
          },
          "authentication": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "null",
                  "simple-text",
                  "md5"
                ],
                "description": "authenticaiton type"
              },
              {
                "type": "null",
                "description": "unset authentication type"
              }
            ]
          },
          "default_cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_16777215",
                "description": "Stub's advertised default summary cost (0..16777215)"
              },
              {
                "type": "null",
                "description": "unset default cost"
              }
            ]
          },
          "filter_list_in": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WORD",
                "description": "Filter networks sent to this area"
              },
              {
                "type": "null",
                "description": "unset filter list"
              }
            ]
          },
          "filter_list_out": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WORD",
                "description": "Filter networks sent from this area"
              },
              {
                "type": "null",
                "description": "unset filter list"
              }
            ]
          },
          "ranges": {
            "$ref": "#/components/schemas/ospf_range_w",
            "description": "modify or delete entry"
          },
          "shortcut": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_shortcut",
                "description": "shortcut mode"
              },
              {
                "type": "null",
                "description": "unset shortcut parameters"
              }
            ]
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_nssa_w",
                "description": "NSSA area parameters"
              },
              {
                "$ref": "#/components/schemas/ospf_stub_w",
                "description": "stub area parameters"
              },
              {
                "type": "null",
                "description": "unset NSSA/stub area parameters"
              }
            ]
          }
        }
      },
      "ospf_capability_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "restart",
          "opaque",
          "te",
          "vrf_lite"
        ],
        "properties": {
          "restart": {
            "$ref": "#/components/schemas/ospf_restart",
            "description": "restart method"
          },
          "opaque": {
            "type": "boolean",
            "description": "Enable opaque LSA Types 9, 10, 11"
          },
          "te": {
            "type": "boolean",
            "description": "Enable OSPF Traffic Engineering extension"
          },
          "vrf_lite": {
            "type": "boolean",
            "description": "Apply multi-VRF capability to OSPF process or to decouple the PE router from the VPN backbone"
          }
        }
      },
      "ospf_capability_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "restart": {
            "$ref": "#/components/schemas/ospf_restart",
            "description": "restart method"
          },
          "opaque": {
            "type": "boolean",
            "description": "Enable opaque LSA Types 9, 10, 11"
          },
          "te": {
            "type": "boolean",
            "description": "Enable OSPF Traffic Engineering extension"
          },
          "vrf_lite": {
            "type": "boolean",
            "description": "Apply multi-VRF capability to OSPF process or to decouple the PE router from the VPN backbone"
          }
        }
      },
      "out_ospf_global_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read global config/settings",
        "description": "Result of reading global OSPF config/settings",
        "properties": {
          "result": {
            "required": [
              "ext_ospf_multi_inst"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "ext_ospf_multi_inst": {
                "type": "boolean",
                "description": "Extension to OSPF multi process support"
              }
            }
          }
        }
      },
      "in_ospf_global_write": {
        "description": "Modify global OSPF config/settings",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "ext_ospf_multi_inst": {
            "type": "boolean",
            "description": "Extension to OSPF multi process support"
          }
        }
      },
      "out_ospf_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf config/settings",
        "description": "Result of reading OSPF config/settings",
        "properties": {
          "result": {
            "required": [
              "reference_bandwidth",
              "bfd_all_interfaces",
              "capability",
              "compatible_rfc1583",
              "cspf",
              "default_information_originate",
              "distance",
              "db_summary_opt",
              "fast_reroute",
              "log_adjacency_changes",
              "max_concurrent_dd",
              "maximum_area",
              "abr_type",
              "flood_reduction",
              "router_id",
              "overflow",
              "timers"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "reference_bandwidth": {
                "$ref": "#/components/schemas/UINT_1_4294967",
                "description": "auto-cost reference bandwidth in terms of Mbits per second"
              },
              "bfd_all_interfaces": {
                "type": "boolean",
                "description": "Enable BFD on all interfaces"
              },
              "capability": {
                "$ref": "#/components/schemas/ospf_capability_r",
                "description": "OSPF capabilities"
              },
              "compatible_rfc1583": {
                "type": "boolean",
                "description": "Metric calculation per RFC1583"
              },
              "cspf": {
                "$ref": "#/components/schemas/ospf_cspf_r",
                "description": "CSPF parameters"
              },
              "default_information_originate": {
                "$ref": "#/components/schemas/ospf_default_information_originate_r",
                "description": "Distribute a default route"
              },
              "default_metric": {
                "$ref": "#/components/schemas/UINT_1_16777214",
                "description": "Default metric value, might be absent if unset"
              },
              "distance": {
                "$ref": "#/components/schemas/ospf_distance_r",
                "description": "Administrative distance"
              },
              "db_summary_opt": {
                "type": "boolean",
                "description": "Enable OSPF Database Summary Optimization"
              },
              "fast_reroute": {
                "$ref": "#/components/schemas/ospf_fast_reroute_r",
                "description": "fast rerouting"
              },
              "log_adjacency_changes": {
                "$ref": "#/components/schemas/ospf_log_adjacency_changes",
                "description": "Log changes in adjacency state"
              },
              "max_concurrent_dd": {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "Maximum number of DD processes"
              },
              "maximum_area": {
                "$ref": "#/components/schemas/UINT_1_4294967294",
                "description": "Maximum number of OSPF areas (excluding Backbone Area)"
              },
              "abr_type": {
                "$ref": "#/components/schemas/ospf_abr_type_r",
                "description": "Area Border Router (ABR) type"
              },
              "flood_reduction": {
                "type": "boolean",
                "description": "Enable/disable flood reduction"
              },
              "router_id": {
                "oneOf": [
                  {
                    "type": "string",
                    "const": ""
                  },
                  {
                    "$ref": "#/components/schemas/IP_ADDR"
                  }
                ],
                "description": "router ID for this OSPF process"
              },
              "overflow": {
                "$ref": "#/components/schemas/ospf_overflow_r",
                "description": "Overflow parameters"
              },
              "timers": {
                "$ref": "#/components/schemas/ospf_timers_r",
                "description": "timers"
              }
            }
          }
        }
      },
      "in_ospf_config_write": {
        "description": "Modify ospf config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processID"
        ],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "reference_bandwidth": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_4294967",
                "description": "auto-cost reference bandwidth in terms of Mbits per second"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "bfd_all_interfaces": {
            "type": "boolean",
            "description": "Enable BFD on all interfaces"
          },
          "capability": {
            "$ref": "#/components/schemas/ospf_capability_w",
            "description": "OSPF capabilities"
          },
          "compatible_rfc1583": {
            "type": "boolean",
            "description": "Metric calculation per RFC1583"
          },
          "cspf": {
            "$ref": "#/components/schemas/ospf_cspf_w",
            "description": "CSPF parameters"
          },
          "default_information_originate": {
            "$ref": "#/components/schemas/ospf_default_information_originate_w",
            "description": "Distribute a default route"
          },
          "default_metric": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_16777214",
                "description": "Default metric value"
              },
              {
                "type": "null",
                "description": "unset the value"
              }
            ]
          },
          "distance": {
            "$ref": "#/components/schemas/ospf_distance_w",
            "description": "Administrative distance"
          },
          "db_summary_opt": {
            "type": "boolean",
            "description": "Enable OSPF Database Summary Optimization"
          },
          "fast_reroute": {
            "$ref": "#/components/schemas/ospf_fast_reroute_w",
            "description": "fast rerouting"
          },
          "log_adjacency_changes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_log_adjacency_changes",
                "description": "Log changes in adjacency state"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "max_concurrent_dd": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "Maximum number of DD processes"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "maximum_area": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_4294967294",
                "description": "Maximum number of OSPF areas (excluding Backbone Area)"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "abr_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_abr_type",
                "description": "Area Border Router (ABR) type"
              },
              {
                "type": "null",
                "description": "set to default value"
              }
            ]
          },
          "flood_reduction": {
            "type": "boolean",
            "description": "Enable/disable flood reduction"
          },
          "router_id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "router ID for this OSPF process"
              },
              {
                "type": "null",
                "description": "reset to empty value"
              }
            ]
          },
          "overflow": {
            "$ref": "#/components/schemas/ospf_overflow_w",
            "description": "Overflow parameters"
          },
          "timers": {
            "$ref": "#/components/schemas/ospf_timers_w",
            "description": "timers"
          }
        }
      },
      "out_ospf_area_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf area config/settings",
        "description": "Result of reading OSPF area config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_area_r"
            },
            "description": "area parameters"
          }
        }
      },
      "in_ospf_area_write": {
        "description": "Modify ospf area config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processID"
        ],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add area config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_area_a"
                  }
                }
              },
              {
                "type": "object",
                "title": "modify area config",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ospf_area_w"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ospf_host_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf host config/settings",
        "description": "Result of reading OSPF host config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_host",
              "description": "OSPF stub host entry"
            }
          }
        }
      },
      "in_ospf_host_write": {
        "description": "Modify ospf host config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processID"
        ],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add host config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_host_w"
                  }
                }
              },
              {
                "type": "object",
                "title": "modify host config",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ospf_host_w"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete host config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Host address to delete"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ospf_neighbor_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf neighbor config/settings",
        "description": "Result of reading OSPF neighbor config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_neighbor_r",
              "description": "neighbor entry"
            }
          }
        }
      },
      "in_ospf_neighbor_write": {
        "description": "Modify ospf neighbor config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processID"
        ],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add neighbor config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_neighbor_w"
                  }
                }
              },
              {
                "type": "object",
                "title": "modify neighbor config",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ospf_neighbor_w"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete neighbor config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Neighbor address to delete"
                  }
                }
              }
            ]
          }
        }
      },
      "ospf_network": {
        "description": "ospf network entry",
        "type": "object",
        "required": [
          "subnet",
          "area"
        ],
        "additionalProperties": false,
        "properties": {
          "subnet": {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
            "description": "subnet address/mask"
          },
          "area": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "OSPF area in form of IP address"
          },
          "instance_id": {
            "$ref": "#/components/schemas/UINT8",
            "description": "optional instance ID"
          }
        }
      },
      "out_ospf_network_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf network config/settings",
        "description": "Result of reading OSPF network config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_network",
              "description": "network for with routing is enabled"
            }
          }
        }
      },
      "in_ospf_network_write": {
        "description": "Modify ospf network config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processID"
        ],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add neighbor config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_network",
                    "description": "network to add"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete neighbor config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                    "description": "network to delete"
                  }
                }
              }
            ]
          }
        }
      },
      "ospf_passive_interface": {
        "description": "passive interface - name and optional IP address",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ifname"
        ],
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "interface name"
          },
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "optional IP address"
          }
        }
      },
      "out_ospf_passive_interface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf passive interface config/settings",
        "description": "Result of reading OSPF passive_interface config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_passive_interface",
              "description": "interface name and optional IP address"
            }
          }
        }
      },
      "in_ospf_passive_interface_write": {
        "description": "Modify ospf passive interface config/settings",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processID"
        ],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add neighbor config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_passive_interface",
                    "description": "passive interface to add"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete neighbor config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/ospf_passive_interface",
                    "description": "passive interface to delete"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ospf_redistribute_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf redistribute config/settings",
        "description": "Result of reading OSPF redistribute config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "array",
              "prefixItems": [
                {
                  "$ref": "#/components/schemas/ospf_redistribute_e",
                  "description": "index"
                },
                {
                  "$ref": "#/components/schemas/ospf_redistribute_r",
                  "description": "value"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      },
      "in_ospf_redistribute_write": {
        "description": "Modify ospf redistribute config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processID"
        ],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add redistribute config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "array",
                    "prefixItems": [
                      {
                        "$ref": "#/components/schemas/ospf_redistribute_e",
                        "description": "index"
                      },
                      {
                        "$ref": "#/components/schemas/ospf_redistribute_w",
                        "description": "value"
                      }
                    ],
                    "maxItems": 2,
                    "minItems": 2
                  }
                }
              },
              {
                "type": "object",
                "title": "modify redistribute config",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "array",
                    "prefixItems": [
                      {
                        "$ref": "#/components/schemas/ospf_redistribute_e",
                        "description": "index"
                      },
                      {
                        "$ref": "#/components/schemas/ospf_redistribute_w",
                        "description": "value"
                      }
                    ],
                    "maxItems": 2,
                    "minItems": 2
                  }
                }
              },
              {
                "type": "object",
                "title": "delete redistribute config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/ospf_redistribute_e",
                    "description": "entry to delete"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ospf_summary_address_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf summary address config/settings",
        "description": "Result of reading OSPF summary_address config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_summary_address_r",
              "description": "summary address entry"
            }
          }
        }
      },
      "in_ospf_summary_address_write": {
        "description": "Modify ospf summary address config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add summary address config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_summary_address_w"
                  }
                }
              },
              {
                "type": "object",
                "title": "modify summary address config",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ospf_summary_address_w"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete summary address config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                    "description": "summary address to delete"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ospf_virtual_link_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf virtual link config/settings",
        "description": "Result of reading OSPF  virtual link config/settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_vlink_r",
              "description": "virtual link entry"
            }
          }
        }
      },
      "in_ospf_virtual_link_write": {
        "description": "Modify ospf virtual link config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add virtual link config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ospf_vlink_a"
                  }
                }
              },
              {
                "type": "object",
                "title": "modify virtual link config",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ospf_vlink_w"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete virtual link config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/ospf_vlink_d"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ospf_iface_list": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading the list of  OSPF-capable interfaces",
        "description": "Result of reading the list of  OSPF-capable interfaces",
        "properties": {
          "result": {
            "required": [
              "interfaces"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "interfaces": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IFNAME"
                }
              }
            }
          }
        }
      },
      "out_ospf_show_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to all ospf show commands",
        "description": "Result of all ospf show commands",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "in_ospf_clear_write": {
        "description": "clear OSPF process",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "process ID to clear, if not given, clear all processes"
          }
        }
      },
      "ospf_packet_debug": {
        "type": "object",
        "required": [
          "detail",
          "send",
          "receive"
        ],
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "boolean",
            "description": "detailed data"
          },
          "send": {
            "type": "boolean",
            "description": "debug send direction"
          },
          "receive": {
            "type": "boolean",
            "description": "debug receive direction"
          }
        }
      },
      "out_ospf_debug_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ospf debugging feature",
        "description": "Result of reading OSPF debugging features",
        "properties": {
          "result": {
            "required": [
              "events_abr",
              "events_asbr",
              "events_lsa",
              "events_nssa",
              "events_os",
              "events_router",
              "events_vlink",
              "lsa_flooding",
              "lsa_generate",
              "lsa_install",
              "lsa_maxage",
              "lsa_refresh",
              "packets_dd",
              "packets_hello",
              "packets_ls_ack",
              "packets_ls_request",
              "packets_ls_update",
              "bfd",
              "database_timer",
              "ifsm_events",
              "nsm_interface",
              "nsm_redistribute",
              "ifsm_status",
              "ifsm_timers",
              "nfsm_events",
              "nfsm_status",
              "nfsm_timers",
              "rib_interface",
              "rib_redistribute",
              "route_ase",
              "route_ia",
              "route_install",
              "route_spf"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "events_abr": {
                "type": "boolean",
                "description": "OSPF ABR events"
              },
              "events_asbr": {
                "type": "boolean",
                "description": "OSPF ASBR events"
              },
              "events_lsa": {
                "type": "boolean",
                "description": "OSPF LSA events"
              },
              "events_nssa": {
                "type": "boolean",
                "description": "OSPF NSSA events"
              },
              "events_os": {
                "type": "boolean",
                "description": "OSPF OS interaction events"
              },
              "events_router": {
                "type": "boolean",
                "description": "Other router events"
              },
              "events_vlink": {
                "type": "boolean",
                "description": "OSPF Virtual-Link events"
              },
              "lsa_flooding": {
                "type": "boolean",
                "description": "LSA flooding"
              },
              "lsa_generate": {
                "type": "boolean",
                "description": "LSA generation"
              },
              "lsa_install": {
                "type": "boolean",
                "description": "LSA installation"
              },
              "lsa_maxage": {
                "type": "boolean",
                "description": "Maximum age processing"
              },
              "lsa_refresh": {
                "type": "boolean",
                "description": "LSA refresh"
              },
              "packets_dd": {
                "$ref": "#/components/schemas/ospf_packet_debug",
                "description": "OSPF database"
              },
              "packets_hello": {
                "$ref": "#/components/schemas/ospf_packet_debug",
                "description": "OSPF hello packets"
              },
              "packets_ls_ack": {
                "$ref": "#/components/schemas/ospf_packet_debug",
                "description": "OSPF link state acknowledgments"
              },
              "packets_ls_request": {
                "$ref": "#/components/schemas/ospf_packet_debug",
                "description": "OSPF link state requests"
              },
              "packets_ls_update": {
                "$ref": "#/components/schemas/ospf_packet_debug",
                "description": "OSPF link state updates"
              },
              "bfd": {
                "type": "boolean",
                "description": "Enable debugging of Bidirectional Forwarding Detection (BFD) processes in OSPF"
              },
              "database_timer": {
                "type": "boolean",
                "description": "Enable debugging the Rate Limiting Values for LSA Throttling"
              },
              "nsm_interface": {
                "type": "boolean",
                "description": "NSM interface"
              },
              "nsm_redistribute": {
                "type": "boolean",
                "description": "NSM redistribute"
              },
              "ifsm_events": {
                "type": "boolean",
                "description": "IFSM Event Information "
              },
              "ifsm_status": {
                "type": "boolean",
                "description": "IFSM Status Information"
              },
              "ifsm_timers": {
                "type": "boolean",
                "description": "NFSM Timer Information"
              },
              "nfsm_events": {
                "type": "boolean",
                "description": "NFSM Event Information"
              },
              "nfsm_status": {
                "type": "boolean",
                "description": "NFSM Status Information"
              },
              "nfsm_timers": {
                "type": "boolean",
                "description": "NFSM Timer Information"
              },
              "rib_interface": {
                "type": "boolean",
                "description": "RIB interface"
              },
              "rib_redistribute": {
                "type": "boolean",
                "description": "RIB redistribute"
              },
              "route_ase": {
                "type": "boolean",
                "description": "OSPF external route calculation"
              },
              "route_ia": {
                "type": "boolean",
                "description": "OSPF Inter-Area route calculation"
              },
              "route_install": {
                "type": "boolean",
                "description": "OSPF route installation"
              },
              "route_spf": {
                "type": "boolean",
                "description": "OSPF SPF calculation"
              }
            }
          }
        }
      },
      "in_ospf_restart_write": {
        "type": "null"
      },
      "in_ospf_debug_write": {
        "description": "Modify OSPF debugging features",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "events_abr": {
            "type": "boolean",
            "description": "OSPF ABR events"
          },
          "events_asbr": {
            "type": "boolean",
            "description": "OSPF ASBR events"
          },
          "events_lsa": {
            "type": "boolean",
            "description": "OSPF LSA events"
          },
          "events_nssa": {
            "type": "boolean",
            "description": "OSPF NSSA events"
          },
          "events_os": {
            "type": "boolean",
            "description": "OSPF OS interaction events"
          },
          "events_router": {
            "type": "boolean",
            "description": "Other router events"
          },
          "events_vlink": {
            "type": "boolean",
            "description": "OSPF Virtual-Link events"
          },
          "lsa_flooding": {
            "type": "boolean",
            "description": "LSA flooding"
          },
          "lsa_generate": {
            "type": "boolean",
            "description": "LSA generation"
          },
          "lsa_install": {
            "type": "boolean",
            "description": "LSA installation"
          },
          "lsa_maxage": {
            "type": "boolean",
            "description": "Maximum age processing"
          },
          "lsa_refresh": {
            "type": "boolean",
            "description": "LSA refresh"
          },
          "packets_dd": {
            "$ref": "#/components/schemas/ospf_packet_debug",
            "description": "OSPF database"
          },
          "packets_hello": {
            "$ref": "#/components/schemas/ospf_packet_debug",
            "description": "OSPF hello packets"
          },
          "packets_ls_ack": {
            "$ref": "#/components/schemas/ospf_packet_debug",
            "description": "OSPF link state acknowledgments"
          },
          "packets_ls_request": {
            "$ref": "#/components/schemas/ospf_packet_debug",
            "description": "OSPF link state requests"
          },
          "packets_ls_update": {
            "$ref": "#/components/schemas/ospf_packet_debug",
            "description": "OSPF link state updates"
          },
          "bfd": {
            "type": "boolean",
            "description": "Enable debugging of Bidirectional Forwarding Detection (BFD) processes in OSPF"
          },
          "database_timer": {
            "type": "boolean",
            "description": "Enable debugging the Rate Limiting Values for LSA Throttling"
          },
          "nsm_interface": {
            "type": "boolean",
            "description": "NSM interface"
          },
          "nsm_redistribute": {
            "type": "boolean",
            "description": "NSM redistribute"
          },
          "ifsm_events": {
            "type": "boolean",
            "description": "IFSM Event Information "
          },
          "ifsm_status": {
            "type": "boolean",
            "description": "IFSM Status Information"
          },
          "ifsm_timers": {
            "type": "boolean",
            "description": "NFSM Timer Information"
          },
          "nfsm_events": {
            "type": "boolean",
            "description": "NFSM Event Information"
          },
          "nfsm_status": {
            "type": "boolean",
            "description": "NFSM Status Information"
          },
          "nfsm_timers": {
            "type": "boolean",
            "description": "NFSM Timer Information"
          },
          "rib_interface": {
            "type": "boolean",
            "description": "RIB interface"
          },
          "rib_redistribute": {
            "type": "boolean",
            "description": "RIB redistribute"
          },
          "route_ase": {
            "type": "boolean",
            "description": "OSPF external route calculation"
          },
          "route_ia": {
            "type": "boolean",
            "description": "OSPF Inter-Area route calculation"
          },
          "route_install": {
            "type": "boolean",
            "description": "OSPF route installation"
          },
          "route_spf": {
            "type": "boolean",
            "description": "OSPF SPF calculation"
          }
        }
      },
      "ospf_authentication_key_r": {
        "oneOf": [
          {
            "title": "unencrypted key",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "encrypted",
              "password"
            ],
            "properties": {
              "encrypted": {
                "type": "boolean",
                "const": false
              },
              "password": {
                "type": "string",
                "description": "password, up to 8 characters"
              }
            }
          },
          {
            "title": "encrypted key",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "encrypted",
              "secret"
            ],
            "properties": {
              "encrypted": {
                "type": "boolean",
                "const": true
              },
              "secret": {
                "type": "string",
                "description": "secret"
              }
            }
          }
        ]
      },
      "ospf_authentication_key_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "encrypted",
          "password"
        ],
        "properties": {
          "encrypted": {
            "type": "boolean",
            "description": "encrypted/unencrypted key"
          },
          "password": {
            "$ref": "#/components/schemas/WORD",
            "description": "password, will be truncated to 8 characters for unencrypted mode"
          }
        }
      },
      "ospf_authentication_key_vlink_w": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "encrypted",
          "password"
        ],
        "properties": {
          "encrypted": {
            "type": "boolean",
            "const": true,
            "description": "encrypted key storage for vlink"
          },
          "password": {
            "$ref": "#/components/schemas/WORD",
            "description": "password, will be truncated to 8 characters for unencrypted mode"
          }
        }
      },
      "ospf_md5_key_r": {
        "title": "encrypted md5 key",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "index",
          "secret"
        ],
        "properties": {
          "index": {
            "$ref": "#/components/schemas/UINT8",
            "description": "key index"
          },
          "secret": {
            "type": "string",
            "description": "secret"
          }
        }
      },
      "ospf_md5_key_w": {
        "title": "set md5 key",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "index",
          "password"
        ],
        "properties": {
          "index": {
            "$ref": "#/components/schemas/UINT8",
            "description": "key index"
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WORD",
                "description": "set password"
              },
              {
                "type": "null",
                "description": "delete entry"
              }
            ]
          }
        }
      },
      "ospf_config_ip_r": {
        "description": "parameters overrides for specific ip address on interface",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IP-address"
          },
          "cost": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "link-state metric. The default value is 10"
          },
          "database_filter": {
            "type": "boolean",
            "description": "turn on the LSA database-filter for a particular interface"
          },
          "dead_interval": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "dead interval in seconds"
          },
          "hello_interval": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "interval between HELLO packets in seconds"
          },
          "mtu_ignore": {
            "type": "boolean",
            "description": "ignore MTU in DBD packets"
          },
          "priority": {
            "$ref": "#/components/schemas/UINT8",
            "description": "router priority"
          },
          "resync_timeout": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Re-synchronization timeout value in seconds"
          },
          "retransmit_interval": {
            "$ref": "#/components/schemas/UINT_1_1800",
            "description": "interval between LSA retransmission in seconds"
          },
          "transmit_delay": {
            "$ref": "#/components/schemas/UINT_1_3600",
            "description": "estimated time to transmit LSA packets in seconds"
          },
          "authentication": {
            "type": "string",
            "enum": [
              "null",
              "simple-text",
              "md5"
            ],
            "description": "authenticaiton type"
          },
          "authentication_key": {
            "$ref": "#/components/schemas/ospf_authentication_key_r",
            "description": "authentication key for simple text authentication"
          },
          "md5_keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ospf_md5_key_r"
            },
            "description": "set of md5 authentication keys"
          }
        }
      },
      "ospf_config_ip_w": {
        "description": "parameters overrides to update",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IP-address"
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "link-state metric. The default value is 10"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "database_filter": {
            "type": "boolean",
            "description": "turn on the LSA database-filter for a particular interface"
          },
          "dead_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "dead interval in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "interval between HELLO packets in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "mtu_ignore": {
            "type": "boolean",
            "description": "ignore MTU in DBD packets"
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT8",
                "description": "router priority"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "resync_timeout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "Re-synchronization timeout value in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "retransmit_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_1800",
                "description": "interval between LSA retransmission in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "transmit_delay": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_3600",
                "description": "estimated time to transmit LSA packets in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "authentication": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "null",
                  "simple-text",
                  "md5"
                ],
                "description": "authenticaiton type"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "authentication_key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_authentication_key_w",
                "description": "authentication key for simple text authentication"
              },
              {
                "type": "null",
                "description": "remove key"
              }
            ]
          },
          "md5_keys": {
            "$ref": "#/components/schemas/ospf_md5_key_w",
            "description": "one md5 authentication key to modify or delete"
          }
        }
      },
      "ospf_multi_area_r": {
        "required": [
          "processID",
          "area",
          "neighbor"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "processID": {
            "$ref": "#/components/schemas/UINT16",
            "description": "OSPF process ID"
          },
          "area": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "area ID in form of IP address"
          },
          "neighbor": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "neighbor IP address"
          }
        }
      },
      "ospf_multi_area_w": {
        "oneOf": [
          {
            "description": "add neighbour to processID and area - should be unique",
            "required": [
              "processID",
              "area",
              "neighbor"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "processID": {
                "$ref": "#/components/schemas/UINT16",
                "description": "OSPF process ID"
              },
              "area": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "area ID in form of IP address"
              },
              "neighbor": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "neighbor IP address"
              }
            }
          },
          {
            "description": "delete neighbour fromt processID and area",
            "required": [
              "processID",
              "area",
              "neighbor"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "processID": {
                "$ref": "#/components/schemas/UINT16",
                "description": "OSPF process ID"
              },
              "area": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "area ID in form of IP address"
              },
              "neighbor": {
                "type": "null"
              }
            }
          }
        ]
      },
      "out_ospf_config_iface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read OSPF config/settings overrides for specific interface",
        "description": "Result of reading OSPF config/settings overrides for specific interface",
        "properties": {
          "result": {
            "required": [],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "bfd": {
                "type": "boolean",
                "description": "Enable BFD on interface"
              },
              "cost": {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "link-state metric. The default value is 10"
              },
              "database_filter": {
                "type": "boolean",
                "description": "turn on the LSA database-filter for a particular interface"
              },
              "dead_interval": {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "dead interval in seconds"
              },
              "disable": {
                "type": "boolean",
                "description": "disable OSPF functionality"
              },
              "fast_reroute": {
                "type": "boolean",
                "description": "false values prohibits the interface from being used as the next hop ina repair path"
              },
              "flood_reduction": {
                "type": "boolean",
                "description": "Enable flood-reduction on interface"
              },
              "hello_interval": {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "interval between HELLO packets in seconds"
              },
              "mtu": {
                "$ref": "#/components/schemas/UINT_576_65535",
                "description": "MTU size for OSPF packets on this interface"
              },
              "mtu_ignore": {
                "type": "boolean",
                "description": "ignore MTU in DBD packets"
              },
              "priority": {
                "$ref": "#/components/schemas/UINT8",
                "description": "router priority"
              },
              "resync_timeout": {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "Re-synchronization timeout value in seconds"
              },
              "retransmit_interval": {
                "$ref": "#/components/schemas/UINT_1_1800",
                "description": "interval between LSA retransmission in seconds"
              },
              "transmit_delay": {
                "$ref": "#/components/schemas/UINT_1_3600",
                "description": "estimated time to transmit LSA packets in seconds"
              },
              "authentication": {
                "type": "string",
                "enum": [
                  "null",
                  "simple-text",
                  "md5"
                ],
                "description": "authenticaiton type"
              },
              "authentication_key": {
                "$ref": "#/components/schemas/ospf_authentication_key_r",
                "description": "authentication key for simple text authentication"
              },
              "md5_keys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ospf_md5_key_r"
                },
                "description": "set of md5 authentication keys"
              },
              "network": {
                "type": "string",
                "enum": [
                  "broadcast",
                  "non-broadcast",
                  "point-to-multipoint",
                  "point-to-multipoint non-broadcast",
                  "point-to-point"
                ],
                "description": "OSPF network type"
              },
              "multi_area": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ospf_multi_area_r"
                },
                "description": "array of enabled multi-areas on this interface"
              },
              "ip": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ospf_config_ip_r"
                },
                "description": "array of overrides for specific IP addresses on this interface"
              }
            }
          }
        }
      },
      "in_ospf_config_iface_write": {
        "description": "Modify OSPF config/settings overrides for specific interface, use null to reset to defaults",
        "type": "object",
        "required": [
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "instanceID": {
            "$ref": "#/components/schemas/UINT8",
            "description": "OSPF instance ID - omitted for default"
          },
          "interface_name": {
            "$ref": "#/components/schemas/interfaces_common_ifname",
            "description": "interface name"
          },
          "bfd": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "Enable BFD on interface"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "link-state metric. The default value is 10"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "database_filter": {
            "type": "boolean",
            "description": "turn on the LSA database-filter for a particular interface"
          },
          "dead_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "dead interval in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "disable": {
            "type": "boolean",
            "description": "disable OSPF functionality"
          },
          "fast_reroute": {
            "type": "boolean",
            "description": "false values prohibits the interface from being used as the next hop ina repair path"
          },
          "flood_reduction": {
            "type": "boolean",
            "description": "Enable flood-reduction on interface"
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "interval between HELLO packets in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "mtu": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_576_65535",
                "description": "MTU size for OSPF packets on this interface"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "mtu_ignore": {
            "type": "boolean",
            "description": "ignore MTU in DBD packets"
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT8",
                "description": "router priority"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "resync_timeout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "Re-synchronization timeout value in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "retransmit_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_1800",
                "description": "interval between LSA retransmission in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "transmit_delay": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_3600",
                "description": "estimated time to transmit LSA packets in seconds"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "authentication": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "null",
                  "simple-text",
                  "md5"
                ],
                "description": "authenticaiton type"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "authentication_key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ospf_authentication_key_w",
                "description": "authentication key for simple text authentication"
              },
              {
                "type": "null",
                "description": "remove key"
              }
            ]
          },
          "md5_keys": {
            "$ref": "#/components/schemas/ospf_md5_key_w",
            "description": "one md5 authentication key to modify or delete"
          },
          "network": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "broadcast",
                  "non-broadcast",
                  "point-to-multipoint",
                  "point-to-multipoint non-broadcast",
                  "point-to-point"
                ],
                "description": "OSPF network type"
              },
              {
                "type": "null",
                "description": "unset value"
              }
            ]
          },
          "multi_area": {
            "$ref": "#/components/schemas/ospf_multi_area_w",
            "description": "add/delete neighbor from multi-areas"
          },
          "ip": {
            "$ref": "#/components/schemas/ospf_config_ip_w",
            "description": "change specific IP override"
          }
        }
      },
      "ntp_dhcp_iface": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/IFNAME",
            "title": "interface name",
            "description": "interface name"
          },
          {
            "type": "string",
            "const": "default",
            "title": "default",
            "description": "default settings"
          }
        ],
        "description": "NTP DHCP interface selection"
      },
      "ntp_dhcp_settings": {
        "type": "object",
        "description": "NTP DHCP settings",
        "additionalProperties": false,
        "properties": {
          "ignore": {
            "type": "boolean",
            "description": "Ignore server"
          },
          "ipv4": {
            "type": "boolean",
            "description": "Force IPv4 protocol"
          },
          "ipv6": {
            "type": "boolean",
            "description": "Force IPv6 protocol"
          },
          "iburst": {
            "type": "boolean",
            "description": "Send a burst of six packets when the server is unreachable"
          },
          "burst": {
            "type": "boolean",
            "description": "Send a burst of eight packets when the server is reachable"
          },
          "prefer": {
            "type": "boolean",
            "description": "Marks the server as preferred"
          },
          "preempt": {
            "type": "boolean",
            "description": "Specifies the association as preemptable"
          },
          "minpoll": {
            "$ref": "#/components/schemas/UINT_3_6",
            "description": "Minimum poll interval for NTP messages in seconds as a power of two.  The minimum poll interval defaults to 6 (64 s), but can be decreased to a lower limit of 3 (8 s)"
          },
          "maxpoll": {
            "$ref": "#/components/schemas/UINT_10_17",
            "description": "Maximum poll interval for NTP messages, in seconds as a power of two. The maximum poll interval defaults to 10 (1,024 s), but can be increased to an upper limit of 17 (36.4 h)"
          }
        },
        "not": {
          "anyOf": [
            {
              "required": [
                "burst",
                "iburst"
              ]
            },
            {
              "required": [
                "ipv4",
                "ipv6"
              ]
            }
          ]
        }
      },
      "ntp_dhcp_iface_settings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "interface",
          "settings"
        ],
        "properties": {
          "interface": {
            "$ref": "#/components/schemas/ntp_dhcp_iface"
          },
          "settings": {
            "$ref": "#/components/schemas/ntp_dhcp_settings"
          }
        }
      },
      "ntp_iface": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR_MAY_HAVE_BIT_MASK",
            "description": "address/subnet of IPv4 site"
          },
          {
            "$ref": "#/components/schemas/IPV6_ADDR_MAY_HAVE_BIT_MASK",
            "description": "address/subnet of IPv6 site"
          },
          {
            "$ref": "#/components/schemas/IFNAME",
            "description": "interface name"
          },
          {
            "type": "string",
            "const": "all",
            "description": "all addresses"
          },
          {
            "type": "string",
            "const": "ipv4",
            "description": "all ipv4 addresses"
          },
          {
            "type": "string",
            "const": "ipv6",
            "description": "all ipv6 addresses"
          }
        ],
        "description": "interface selection"
      },
      "ntp_action": {
        "oneOf": [
          {
            "type": "string",
            "const": "listen",
            "title": "listen",
            "description": "Listen to the interface"
          },
          {
            "type": "string",
            "const": "drop",
            "title": "drop",
            "description": "Drop interface"
          },
          {
            "type": "string",
            "const": "ignore",
            "title": "ignore",
            "description": "Do not open interface"
          }
        ],
        "description": "interface action"
      },
      "ntp_interface_action": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_action",
          "_address"
        ],
        "properties": {
          "_action": {
            "$ref": "#/components/schemas/ntp_action"
          },
          "_address": {
            "$ref": "#/components/schemas/ntp_iface"
          }
        }
      },
      "ntp_srv_host": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "address of IPv4 site"
          },
          {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "address of IPv6 site"
          },
          {
            "$ref": "#/components/schemas/FQDN",
            "description": "fully qualified domain name"
          }
        ],
        "description": "host name/ip"
      },
      "ntp_srv_settings": {
        "type": "object",
        "description": "NTP server/pool settings",
        "additionalProperties": false,
        "properties": {
          "ipv4": {
            "type": "boolean",
            "description": "Force IPv4 protocol"
          },
          "ipv6": {
            "type": "boolean",
            "description": "Force IPv6 protocol"
          },
          "iburst": {
            "type": "boolean",
            "description": "Send a burst of six packets when the server is unreachable"
          },
          "burst": {
            "type": "boolean",
            "description": "Send a burst of eight packets when the server is reachable"
          },
          "prefer": {
            "type": "boolean",
            "description": "Marks the server as preferred"
          },
          "preempt": {
            "type": "boolean",
            "description": "Specifies the association as preemptable"
          },
          "minpoll": {
            "$ref": "#/components/schemas/UINT_3_6",
            "description": "Minimum poll interval for NTP messages in seconds as a power of two.  The minimum poll interval defaults to 6 (64 s), but can be decreased to a lower limit of 3 (8 s)"
          },
          "maxpoll": {
            "$ref": "#/components/schemas/UINT_10_17",
            "description": "Maximum poll interval for NTP messages, in seconds as a power of two. The maximum poll interval defaults to 10 (1,024 s), but can be increased to an upper limit of 17 (36.4 h)"
          }
        },
        "not": {
          "anyOf": [
            {
              "required": [
                "burst",
                "iburst"
              ]
            },
            {
              "required": [
                "ipv4",
                "ipv6"
              ]
            }
          ]
        }
      },
      "ntp_restricts": {
        "type": "object",
        "description": "NTP restrictss",
        "additionalProperties": false,
        "properties": {
          "nomodify": {
            "type": "boolean",
            "description": "Not allowed to modify"
          },
          "notrap": {
            "type": "boolean",
            "description": "Not allowed to send traps"
          },
          "ignore": {
            "type": "boolean",
            "description": "Ignore server"
          },
          "kod": {
            "type": "boolean",
            "description": "Send kod (Kill on Death) as warning of service denial"
          },
          "noquery": {
            "type": "boolean",
            "description": "Disable queries"
          },
          "nopeer": {
            "type": "boolean",
            "description": "Disable synchronization with this host"
          }
        }
      },
      "ntp_restrict_addr": {
        "description": "address for NTP restrict",
        "oneOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR_MAY_HAVE_BIT_MASK",
            "title": "IPv4 subnet",
            "description": "address/subnet of IPv4 site"
          },
          {
            "$ref": "#/components/schemas/IPV6_ADDR_MAY_HAVE_BIT_MASK",
            "title": "IPv6 subnet",
            "description": "address/subnet of IPv6 site"
          },
          {
            "type": "string",
            "const": "default ipv4",
            "title": "default ipv4",
            "description": "default for all IPv4 sites"
          },
          {
            "type": "string",
            "const": "default ipv6",
            "title": "default ipv6",
            "description": "default for all IPv6 sites"
          }
        ]
      },
      "ntp_restrict_addr_nodefaults": {
        "description": "address for NTP restrict, defaults are forbidden",
        "oneOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR_MAY_HAVE_BIT_MASK",
            "title": "IPv4 subnet",
            "description": "address/subnet of IPv4 site"
          },
          {
            "$ref": "#/components/schemas/IPV6_ADDR_MAY_HAVE_BIT_MASK",
            "title": "IPv6 subnet",
            "description": "address/subnet of IPv6 site"
          }
        ]
      },
      "ntp_restrict_addr_settings": {
        "type": "object",
        "required": [
          "addr",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "addr": {
            "$ref": "#/components/schemas/ntp_restrict_addr"
          },
          "settings": {
            "$ref": "#/components/schemas/ntp_restricts"
          }
        }
      },
      "ntp_restrict_addr_settings_nodefaults": {
        "type": "object",
        "required": [
          "addr",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "addr": {
            "$ref": "#/components/schemas/ntp_restrict_addr_nodefaults"
          },
          "settings": {
            "$ref": "#/components/schemas/ntp_restricts"
          }
        }
      },
      "ntp_srv_host_settings": {
        "type": "object",
        "required": [
          "host",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "host": {
            "$ref": "#/components/schemas/ntp_srv_host"
          },
          "settings": {
            "$ref": "#/components/schemas/ntp_srv_settings"
          }
        }
      },
      "out_ntp_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ntp status",
        "description": "Result of reading ntp status",
        "properties": {
          "result": {
            "required": [
              "on"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "on": {
                "type": "boolean",
                "description": "administrative state"
              },
              "connection_state": {
                "type": "string",
                "description": "actual NTP connection, taken from ntpq"
              }
            }
          }
        }
      },
      "in_ntp_status_write": {
        "description": "Modify NTP client status",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "restart"
            ],
            "description": "action to change the NTP client state"
          }
        }
      },
      "out_ntp_configuration_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ntp configuration file",
        "description": "Result of reading ntp configuration file",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "NTP config file"
          }
        }
      },
      "out_ntp_dhcp_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read NTP DHCP settings",
        "description": "Result of reading NTP DHCP settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ntp_dhcp_iface_settings"
            }
          }
        }
      },
      "in_ntp_dhcp_write": {
        "description": "Modify NTP DHCP settings",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "title": "add",
                "required": [
                  "add"
                ],
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ntp_dhcp_iface_settings"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "modify",
                "required": [
                  "modify"
                ],
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ntp_dhcp_iface_settings"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "delete",
                "required": [
                  "delete"
                ],
                "properties": {
                  "delete": {
                    "type": "object",
                    "required": [
                      "interface"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "interface": {
                        "$ref": "#/components/schemas/ntp_dhcp_iface"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_ntp_stratum_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read NTP stratum settings",
        "description": "Result of reading NTP stratum settings",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "stratum": {
                "$ref": "#/components/schemas/UINT",
                "description": "stratum value (optional)"
              }
            }
          }
        }
      },
      "in_ntp_stratum_write": {
        "description": "Modify NTP stratum settings",
        "type": "object",
        "required": [
          "stratum"
        ],
        "additionalProperties": false,
        "properties": {
          "stratum": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT",
                "description": "stratum value"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "set to default value"
              }
            ]
          }
        }
      },
      "out_ntp_interface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read NTP interface settings",
        "description": "Result of reading NTP interface settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ntp_interface_action"
            }
          }
        }
      },
      "in_ntp_interface_write": {
        "description": "Modify NTP interface settings",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "title": "add",
                "required": [
                  "add"
                ],
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ntp_interface_action"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "delete",
                "required": [
                  "delete"
                ],
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/ntp_interface_action"
                  }
                }
              }
            ]
          }
        }
      },
      "out_ntp_server_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read NTP servers settings",
        "description": "Result of reading NTP servers settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "required": [
                "host",
                "settings"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "host": {
                  "$ref": "#/components/schemas/ntp_srv_host"
                },
                "settings": {
                  "$ref": "#/components/schemas/ntp_srv_settings"
                }
              }
            }
          }
        }
      },
      "in_ntp_server_write": {
        "description": "Modify NTP server settings",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "title": "add",
                "required": [
                  "add"
                ],
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ntp_srv_host_settings"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "modify",
                "required": [
                  "modify"
                ],
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ntp_srv_host_settings"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "delete",
                "required": [
                  "delete"
                ],
                "properties": {
                  "delete": {
                    "type": "object",
                    "required": [
                      "host"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "host": {
                        "$ref": "#/components/schemas/ntp_srv_host"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_ntp_restrict_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read NTP restricts settings",
        "description": "Result of reading NTP restricts settings",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ntp_restrict_addr_settings"
            }
          }
        }
      },
      "in_ntp_restrict_write": {
        "description": "Modify NTP restrict settings",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "title": "add",
                "required": [
                  "add"
                ],
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ntp_restrict_addr_settings_nodefaults"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "modify",
                "required": [
                  "modify"
                ],
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ntp_restrict_addr_settings"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "delete",
                "required": [
                  "delete"
                ],
                "properties": {
                  "delete": {
                    "type": "object",
                    "required": [
                      "addr"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "addr": {
                        "$ref": "#/components/schemas/ntp_restrict_addr_nodefaults"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_ntp_synchronize_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "watchdog settings",
        "description": "Result of execution NTP synchronization process",
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "object",
                "title": "ok",
                "required": [
                  "ok"
                ],
                "additionalProperties": false,
                "properties": {
                  "ok": {
                    "type": "boolean",
                    "const": true,
                    "description": "ok, synchronization completed"
                  }
                }
              },
              {
                "type": "object",
                "title": "fail",
                "required": [
                  "ok"
                ],
                "additionalProperties": false,
                "properties": {
                  "ok": {
                    "type": "boolean",
                    "const": false,
                    "description": "something getting wrong"
                  },
                  "errMsg": {
                    "type": "string",
                    "description": "multiline string with textual description of error"
                  }
                }
              }
            ]
          }
        }
      },
      "in_ntp_synchronize_write": {
        "title": "synchronize with NTP",
        "additionalProperties": false,
        "type": "object",
        "required": [
          "host"
        ],
        "description": "synchronize with NTP",
        "properties": {
          "host": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "address of IPv4 site"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR",
                "description": "address of IPv6 site"
              },
              {
                "$ref": "#/components/schemas/FQDN",
                "description": "fully qualified domain name"
              }
            ],
            "description": "host name/ip"
          },
          "protocol": {
            "$ref": "#/components/schemas/IP_PROTO",
            "description": "optional IP protocol type (applicable for hostnames/fqdn)"
          }
        }
      },
      "mpls_mangle_label": {
        "type": "object",
        "title": "set label",
        "required": [
          "action",
          "label"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-label"
          },
          "label": {
            "$ref": "#/components/schemas/UINT_0_1048575",
            "description": "new label for packet"
          }
        }
      },
      "mpls_mangle_exp": {
        "type": "object",
        "title": "set `EXP` field",
        "required": [
          "action",
          "exp"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-exp"
          },
          "exp": {
            "$ref": "#/components/schemas/UINT3",
            "description": "new `EXP` value"
          }
        }
      },
      "mpls_mangle_ttl": {
        "type": "object",
        "title": "set `TTL` field",
        "required": [
          "action",
          "ttl"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-ttl"
          },
          "ttl": {
            "$ref": "#/components/schemas/UINT8",
            "description": "new `TTL` value"
          }
        }
      },
      "mpls_mangle_depth": {
        "type": "object",
        "title": "set depth value",
        "required": [
          "action",
          "depth"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-depth"
          },
          "depth": {
            "$ref": "#/components/schemas/UINT_1_255",
            "description": "new depth value"
          }
        }
      },
      "mpls_acl_mangle_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/mpls_mangle_label",
            "title": "set label"
          },
          {
            "$ref": "#/components/schemas/mpls_mangle_exp",
            "title": "set `EXP` field"
          },
          {
            "$ref": "#/components/schemas/mpls_mangle_ttl",
            "title": "set `TTL` field"
          },
          {
            "$ref": "#/components/schemas/mpls_mangle_depth",
            "title": "set depth"
          }
        ]
      },
      "out_mpls_mangle_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading MPLS ACL mangle lists",
        "description": "Result of reading MPLS ACL mangle lists",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "POSTL2VPN": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_mangle_chain"
                },
                "description": "POSTL2VPN chains"
              },
              "POSTMPLS": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_mangle_chain"
                },
                "description": "POSTMPLS chains"
              },
              "PREL2VPN": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_mangle_chain"
                },
                "description": "PREL2VPN chains"
              },
              "PREMPLS": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_mangle_chain"
                },
                "description": "PREMPLS chains"
              }
            }
          }
        }
      },
      "in_mpls_mangle_write": {
        "description": "Modify MPLS ACL mangle list",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add mangle list",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain",
                      "mangle"
                    ],
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/MPLS_CHAIN",
                        "description": "chain name"
                      },
                      "mangle": {
                        "$ref": "#/components/schemas/mpls_acl_mangle_chain",
                        "description": "mangle list"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete mangle list or whole chain",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/MPLS_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "mpls_acl_filter_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name",
          "action"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          },
          "action": {
            "$ref": "#/components/schemas/PERMIT_DENY",
            "description": "permit or deny"
          }
        }
      },
      "out_mpls_filter_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading MPLS ACL filters",
        "description": "Result of reading MPLS ACL filters",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "POSTL2VPN": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_filter_chain"
                },
                "description": "POSTL2VPN chains"
              },
              "POSTMPLS": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_filter_chain"
                },
                "description": "POSTMPLS chains"
              },
              "PREL2VPN": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_filter_chain"
                },
                "description": "PREL2VPN chains"
              },
              "PREMPLS": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mpls_acl_filter_chain"
                },
                "description": "PREMPLS chains"
              }
            }
          }
        }
      },
      "in_mpls_filter_write": {
        "description": "Modify MPLS ACL filter",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add filter",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain",
                      "filter"
                    ],
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/MPLS_CHAIN",
                        "description": "chain name"
                      },
                      "filter": {
                        "$ref": "#/components/schemas/mpls_acl_filter_chain",
                        "description": "filter"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete filter or whole chain",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/MPLS_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_mpls_acl_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the list of MPLS ACLs",
        "description": "Result of reading the list of MPLS ACLs",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "mpls": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ACL_NAME"
                },
                "description": "MPLS ACLs"
              }
            }
          }
        }
      },
      "mpls_acl_label": {
        "type": "object",
        "title": "label rule",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "value"
            ]
          },
          {
            "required": [
              "min_value",
              "max_value"
            ]
          }
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert label rule"
          },
          "value": {
            "$ref": "#/components/schemas/UINT_0_1048575",
            "description": "label value"
          },
          "min_value": {
            "$ref": "#/components/schemas/UINT_0_1048575",
            "description": "min label value in range"
          },
          "max_value": {
            "$ref": "#/components/schemas/UINT_0_1048575",
            "description": "max label value in range"
          }
        }
      },
      "mpls_acl_exp": {
        "type": "object",
        "title": "`EXP` field rule",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "value"
            ]
          },
          {
            "required": [
              "min_value",
              "max_value"
            ]
          }
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert `EXP` field rule"
          },
          "value": {
            "$ref": "#/components/schemas/UINT3",
            "description": "`EXP` field value"
          },
          "min_value": {
            "$ref": "#/components/schemas/UINT3",
            "description": "min `EXP` value in range"
          },
          "max_value": {
            "$ref": "#/components/schemas/UINT3",
            "description": "max `EXP` value in range"
          }
        }
      },
      "mpls_acl_ttl": {
        "type": "object",
        "title": "`TTL` field rule",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "value"
            ]
          },
          {
            "required": [
              "min_value",
              "max_value"
            ]
          }
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert `TTL` field rule"
          },
          "value": {
            "$ref": "#/components/schemas/UINT8",
            "description": "`TTL` field value"
          },
          "min_value": {
            "$ref": "#/components/schemas/UINT8",
            "description": "min `TTL` value in range"
          },
          "max_value": {
            "$ref": "#/components/schemas/UINT8",
            "description": "max `TTL` value in range"
          }
        }
      },
      "mpls_acl_bos": {
        "type": "object",
        "title": "bottom-of-stack field rule",
        "additionalProperties": false,
        "required": [
          "bos"
        ],
        "properties": {
          "bos": {
            "type": "boolean",
            "description": "presence of bottom-of-stack"
          }
        }
      },
      "mpls_acl_depth": {
        "type": "object",
        "title": "depth of stack rule",
        "additionalProperties": false,
        "required": [
          "depth"
        ],
        "properties": {
          "depth": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_255",
                "description": "depth of MPLS stack"
              },
              {
                "type": "string",
                "const": "any"
              }
            ]
          }
        }
      },
      "mpls_acl_rule": {
        "type": "object",
        "title": "MPLS access control list rule",
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "label"
            ],
            "title": "MPLS label rule"
          },
          {
            "required": [
              "exp"
            ],
            "title": "`EXP` field rule"
          },
          {
            "required": [
              "ttl"
            ],
            "title": "`TTL` field rule"
          },
          {
            "required": [
              "bos"
            ],
            "title": "bottom-of-stack rule"
          },
          {
            "required": [
              "depth"
            ],
            "title": "MPLS stack depth rule"
          }
        ],
        "properties": {
          "label": {
            "$ref": "#/components/schemas/mpls_acl_label"
          },
          "exp": {
            "$ref": "#/components/schemas/mpls_acl_exp"
          },
          "ttl": {
            "$ref": "#/components/schemas/mpls_acl_ttl"
          },
          "bos": {
            "$ref": "#/components/schemas/mpls_acl_bos"
          },
          "depth": {
            "$ref": "#/components/schemas/mpls_acl_depth"
          }
        }
      },
      "out_mpls_acl_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading MPLS ACL rules",
        "description": "Result of reading MPLS ACL rules",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "list_name": {
                  "$ref": "#/components/schemas/ACL_NAME",
                  "description": "ACL name"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mpls_acl_rule"
                  },
                  "description": "list of rules"
                }
              }
            }
          }
        }
      },
      "in_mpls_acl_write": {
        "description": "Modify MPLS ACL rule",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name",
                      "rule"
                    ],
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/mpls_acl_rule",
                        "description": "rule to add"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name"
                    ],
                    "comment": "rule and index are mutually exclusive. If none of them give while ACL is deleted",
                    "not": {
                      "required": [
                        "rule",
                        "index"
                      ]
                    },
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/mpls_acl_rule",
                        "description": "rule to delete"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to delete"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_mpls_show_ebtables_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response display ebtables",
        "description": "Result of reading ebtables",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "strings to display"
          }
        }
      },
      "lldp_portidsubtype": {
        "type": "object",
        "oneOf": [
          {
            "title": "ifname",
            "additionalProperties": false,
            "required": [
              "portidsubtype"
            ],
            "properties": {
              "portidsubtype": {
                "type": "string",
                "const": "ifname"
              }
            }
          },
          {
            "title": "macaddress",
            "additionalProperties": false,
            "required": [
              "portidsubtype"
            ],
            "properties": {
              "portidsubtype": {
                "type": "string",
                "const": "macaddress"
              }
            }
          }
        ]
      },
      "lldp_portidsubtype_iface": {
        "type": "object",
        "title": "ifname",
        "additionalProperties": false,
        "required": [
          "portidsubtype",
          "_value"
        ],
        "properties": {
          "portidsubtype": {
            "type": "string",
            "const": "local"
          },
          "_value": {
            "$ref": "#/components/schemas/STRING"
          }
        }
      },
      "lldp_dot3power_class": {
        "oneOf": [
          {
            "type": "string",
            "const": "class-0",
            "title": "class-0",
            "description": "Power is 0,44-12,95 Wt; current is 0-5 mA"
          },
          {
            "type": "string",
            "const": "class-1",
            "title": "class-1",
            "description": "Power is 0,44-3,84 Wt; current is 8-13 mA"
          },
          {
            "type": "string",
            "const": "class-2",
            "title": "class-2",
            "description": "Power is 3,84-6,49 Wt; current is 16-21 mA"
          },
          {
            "type": "string",
            "const": "class-3",
            "title": "class-3",
            "description": "Power is 6,49-12,95 Wt; current is 25-31 mA"
          },
          {
            "type": "string",
            "const": "class-4",
            "title": "class-4",
            "description": "Power is 12,95-25,5 Wt; current is 35-45 mA"
          }
        ]
      },
      "lldp_dot3power_source": {
        "oneOf": [
          {
            "type": "string",
            "const": "unknown",
            "title": "unknown",
            "description": "Power source is unknown"
          },
          {
            "type": "string",
            "const": "pse",
            "title": "pse",
            "description": "Power source is other PSE device"
          },
          {
            "type": "string",
            "const": "local",
            "title": "local",
            "description": "Power source is local"
          },
          {
            "type": "string",
            "const": "both",
            "title": "both",
            "description": "Power source both PSE and local"
          },
          {
            "type": "string",
            "const": "primary",
            "title": "primary",
            "description": "Power source is primary"
          },
          {
            "type": "string",
            "const": "backup",
            "title": "backup",
            "description": "Power source is backup"
          }
        ]
      },
      "lldp_dot3power": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "_power",
          "powerpairs"
        ],
        "properties": {
          "_power": {
            "type": "string",
            "enum": [
              "pd",
              "pse"
            ],
            "description": "power destination/power source"
          },
          "powerpairs": {
            "type": "string",
            "enum": [
              "signal",
              "spare"
            ],
            "description": "Power is supplied via signal/spare pairs"
          },
          "paircontrol": {
            "type": "boolean",
            "description": "power pairs selection can be controlled"
          },
          "enabled": {
            "type": "boolean",
            "description": "MDI power is enabled by default"
          },
          "supported": {
            "type": "boolean",
            "description": "MDI-power supported for all ports by default"
          },
          "class": {
            "$ref": "#/components/schemas/lldp_dot3power_class",
            "description": "power class"
          },
          "type": {
            "$ref": "#/components/schemas/UINT_1_2",
            "description": "type of device per 802.3at"
          },
          "source": {
            "$ref": "#/components/schemas/lldp_dot3power_source",
            "description": "power source type"
          },
          "requested": {
            "$ref": "#/components/schemas/UINT_0_100000",
            "description": "Requested power value, mW"
          },
          "allocated": {
            "$ref": "#/components/schemas/UINT_0_100000",
            "description": "Allocated power value, mW"
          }
        }
      },
      "lldp_mode": {
        "oneOf": [
          {
            "type": "string",
            "const": "tx-only",
            "title": "tx-only",
            "description": "Transmit only mode"
          },
          {
            "type": "string",
            "const": "rx-only",
            "title": "rx-only",
            "description": "Receive only mode"
          },
          {
            "type": "string",
            "const": "rx-and-tx",
            "title": "rx-and-tx",
            "description": "Transmit and receive only mode"
          },
          {
            "type": "string",
            "const": "disabled",
            "title": "disabled",
            "description": "Disabled"
          }
        ]
      },
      "lldp_agent_type": {
        "oneOf": [
          {
            "type": "string",
            "const": "nearest-bridge",
            "title": "nearest-bridge",
            "description": "Use MAC address 01:80:c2:00:00:0e for LLDPDUs propagation"
          },
          {
            "type": "string",
            "const": "nearest-non-tpmr-bridge",
            "title": "nearest-non-tpmr-bridge",
            "description": "Use MAC address 01:80:c2:00:00:03 for LLDPDUs propagation"
          },
          {
            "type": "string",
            "const": "nearest-customer-bridge",
            "title": "nearest-customer-bridge",
            "description": "Use MAC address 01:80:c2:00:00:00 for LLDPDUs propagation"
          }
        ]
      },
      "lldp_location_address": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "country"
        ],
        "properties": {
          "country": {
            "$ref": "#/components/schemas/COUNTRY_CODE",
            "description": "Two-letter coutry code"
          },
          "language": {
            "$ref": "#/components/schemas/STRING",
            "description": "Language name"
          },
          "country-subdivision": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Specify country-subdivision"
          },
          "county": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "County name"
          },
          "city": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "City name"
          },
          "city-division": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "City-division name"
          },
          "block": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Block name"
          },
          "street": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Street name"
          },
          "direction": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Direction name"
          },
          "trailing-street-suffix": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Trailing-street-suffix"
          },
          "street-suffix": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Street-suffix"
          },
          "number": {
            "$ref": "#/components/schemas/UINT_1_",
            "description": "Number"
          },
          "number-suffix": {
            "$ref": "#/components/schemas/STRING",
            "description": "Number-suffix"
          },
          "additional": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Additional information"
          },
          "name": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Name"
          },
          "zip": {
            "$ref": "#/components/schemas/STRING",
            "description": "Zip"
          },
          "building": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Building"
          },
          "unit": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Unit"
          },
          "room": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Room number"
          },
          "place-type": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Place-type"
          },
          "script": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Script"
          }
        }
      },
      "lldp_location_elin": {
        "$ref": "#/components/schemas/PHONE_NUMBER",
        "description": "Emergency call number (e.g. 112)"
      },
      "lldp_location_datum": {
        "oneOf": [
          {
            "type": "string",
            "const": "WGS84",
            "title": "WGS84",
            "description": "WGS84 datum"
          },
          {
            "type": "string",
            "const": "NAD83",
            "title": "NAD83",
            "description": "NAD83 datum"
          },
          {
            "type": "string",
            "const": "NAD83/MLLW",
            "title": "NAD83/MLLW",
            "description": "NAD83/MLLW datum"
          }
        ]
      },
      "lldp_location_coordinate": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "longitude",
          "latitude",
          "altitude",
          "_altitude_unit"
        ],
        "properties": {
          "longitude": {
            "$ref": "#/components/schemas/LONGITUDE",
            "description": "Degrees and code (e.g. 150.7815E)"
          },
          "latitude": {
            "$ref": "#/components/schemas/LATITUDE",
            "description": "Degrees and code (e.g. 59.5393N)"
          },
          "altitude": {
            "$ref": "#/components/schemas/ALTITUDE",
            "description": "Altitude"
          },
          "_altitude_unit": {
            "type": "string",
            "enum": [
              "m",
              "f"
            ],
            "description": "Units - meters/floors"
          },
          "datum": {
            "$ref": "#/components/schemas/lldp_location_datum",
            "description": "Datum name"
          }
        }
      },
      "lldp_policy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unknown": {
            "type": "boolean",
            "description": "Specify network policy as unknown"
          },
          "tagged": {
            "type": "boolean",
            "description": "Specify that VLAN should be tagged for the specified application"
          },
          "vlan": {
            "$ref": "#/components/schemas/VLAN_ID",
            "description": "VLAN number"
          },
          "dscp": {
            "$ref": "#/components/schemas/UINT6",
            "description": "DSCP value"
          },
          "priority": {
            "type": "string",
            "enum": [
              "background",
              "best-effort",
              "excellent-effort",
              "critical-applications",
              "video",
              "voice",
              "internetwork-control",
              "network-control"
            ],
            "description": "Layer 2 Priority, also known as Class of Service (CoS)"
          }
        }
      },
      "lldp_policies": {
        "type": "object",
        "additionalProperties": false,
        "description": "LLDP policies by application type",
        "properties": {
          "voice": {
            "$ref": "#/components/schemas/lldp_policy"
          },
          "voice-signaling": {
            "$ref": "#/components/schemas/lldp_policy"
          },
          "guest-voice": {
            "$ref": "#/components/schemas/lldp_policy"
          },
          "guest-voice-signaling": {
            "$ref": "#/components/schemas/lldp_policy"
          },
          "softphone-voice": {
            "$ref": "#/components/schemas/lldp_policy"
          },
          "video-conferencing": {
            "$ref": "#/components/schemas/lldp_policy"
          },
          "streaming-video": {
            "$ref": "#/components/schemas/lldp_policy"
          },
          "video-signaling": {
            "$ref": "#/components/schemas/lldp_policy"
          }
        }
      },
      "lldp_power_pd": {
        "type": "object",
        "required": [
          "power",
          "source",
          "priority",
          "value"
        ],
        "description": "LLDP power over ethernet profile for power destination",
        "additionalProperties": false,
        "properties": {
          "power": {
            "type": "string",
            "const": "pd"
          },
          "source": {
            "type": "string",
            "enum": [
              "unknown",
              "pse",
              "local",
              "both"
            ],
            "description": "power source for the device"
          },
          "priority": {
            "type": "string",
            "enum": [
              "unknown",
              "critical",
              "high",
              "low"
            ],
            "description": "power source priority"
          },
          "value": {
            "$ref": "#/components/schemas/UINT_0_100000",
            "description": "power, mWatts"
          }
        }
      },
      "lldp_power_pse": {
        "type": "object",
        "required": [
          "power",
          "source",
          "priority",
          "value"
        ],
        "description": "LLDP power over ethernet profile for power source equipment",
        "additionalProperties": false,
        "properties": {
          "power": {
            "type": "string",
            "const": "pse"
          },
          "source": {
            "type": "string",
            "enum": [
              "unknown",
              "primary",
              "backup"
            ],
            "description": "power source for the device"
          },
          "priority": {
            "type": "string",
            "enum": [
              "unknown",
              "critical",
              "high",
              "low"
            ],
            "description": "power source priority"
          },
          "value": {
            "$ref": "#/components/schemas/UINT_0_100000",
            "description": "power, mWatts"
          }
        }
      },
      "lldp_poe": {
        "description": "LLDP power over ethernet profile for power source equipment",
        "oneOf": [
          {
            "$ref": "#/components/schemas/lldp_power_pd",
            "title": "PD settings"
          },
          {
            "$ref": "#/components/schemas/lldp_power_pse",
            "title": "PSE settings"
          }
        ]
      },
      "lldp_custom_tlv_item": {
        "type": "object",
        "description": "custom TLV packet",
        "additionalProperties": false,
        "required": [
          "oui",
          "subtype"
        ],
        "properties": {
          "oui": {
            "$ref": "#/components/schemas/OUI",
            "description": "24-bit organizationally unique identifier (OUI, 3 hex octets separated by commas)"
          },
          "subtype": {
            "$ref": "#/components/schemas/UINT8",
            "description": "8-bit Subtype in decimal format"
          },
          "oui-info": {
            "$ref": "#/components/schemas/OUI_INFO",
            "description": "Payload (hex octets separated by commas)"
          }
        }
      },
      "lldp_custom_tlv": {
        "description": "set of custom TLV to be send",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/lldp_custom_tlv_item"
        }
      },
      "lldp_system_capabilities": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tlv-select": {
            "type": "boolean",
            "description": "Transmit system capabilities info"
          },
          "router": {
            "type": "boolean",
            "description": "Router capability"
          },
          "bridge": {
            "type": "boolean",
            "description": "Bridge capability"
          },
          "wlan": {
            "type": "boolean",
            "description": "WLAN capability"
          },
          "station": {
            "type": "boolean",
            "description": "Station capability"
          }
        }
      },
      "lldp_chassisid": {
        "type": "object",
        "description": "LLDP Chassis-ID",
        "oneOf": [
          {
            "title": "macaddress",
            "additionalProperties": false,
            "required": [
              "macaddress"
            ],
            "properties": {
              "macaddress": {
                "$ref": "#/components/schemas/IFNAME",
                "description": "Use MAC-address of specific interface"
              }
            }
          },
          {
            "title": "local",
            "additionalProperties": false,
            "required": [
              "local"
            ],
            "properties": {
              "local": {
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "Use local string"
              }
            }
          }
        ]
      },
      "lldp_management_address": {
        "type": "object",
        "description": "LLDP management address",
        "additionalProperties": false,
        "properties": {
          "tlv-select": {
            "type": "boolean",
            "description": "Transmit management address info"
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "Management IP address"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR",
                "description": "Management IPv6 address"
              },
              {
                "$ref": "#/components/schemas/IFNAME",
                "description": "Interface name"
              }
            ]
          }
        }
      },
      "lldp_class": {
        "oneOf": [
          {
            "type": "string",
            "const": "generic-endpoint",
            "title": "generic-endpoint",
            "description": "Generic Endpoint (Class I)"
          },
          {
            "type": "string",
            "const": "media-endpoint",
            "title": "media-endpoint",
            "description": "Media Endpoint (Class II)"
          },
          {
            "type": "string",
            "const": "communication-endpoint",
            "title": "communication-endpoint",
            "description": "Communication Device Endpoint (Class III)"
          },
          {
            "type": "string",
            "const": "network-connectivity",
            "title": "network-connectivity",
            "description": "Network Connectivity Device"
          }
        ]
      },
      "lldp_med_inventory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "class": {
            "$ref": "#/components/schemas/lldp_class",
            "description": "devices class"
          },
          "disable": {
            "type": "boolean",
            "description": "Disable LLDP-MED inventory transmission"
          }
        }
      },
      "lldp_med_fast_start": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "enable LLDP med fast-start"
          },
          "tx-interval": {
            "$ref": "#/components/schemas/UINT_1_10",
            "description": "LLDP med fast-start tx-interval in seconds"
          }
        }
      },
      "out_lldp_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read lldp config/settings",
        "description": "Result of reading lldp config/settings",
        "properties": {
          "result": {
            "required": [
              "on",
              "snmp",
              "vlan"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "on": {
                "type": "boolean",
                "description": "enable/disable LLDP on all available physical interfaces"
              },
              "snmp": {
                "type": "boolean",
                "description": "enable/disable SNMP agent for LLDP"
              },
              "vlan": {
                "type": "boolean",
                "description": "enable/disable LLDP on eth VLAN interfaces"
              },
              "mode": {
                "$ref": "#/components/schemas/lldp_mode",
                "description": "default LLDP mode (can be overriden for specific interface)"
              },
              "agent-type": {
                "$ref": "#/components/schemas/lldp_agent_type",
                "description": "default LLDP agent type (can be overriden for specific interface)"
              },
              "custom-tlv": {
                "$ref": "#/components/schemas/lldp_custom_tlv",
                "description": "Custom TLV to send (can be overriden for specific interface)"
              },
              "dot3power": {
                "$ref": "#/components/schemas/lldp_dot3power",
                "description": "802.3at power parameters (can be overriden for specific interface)"
              },
              "portidsubtype": {
                "$ref": "#/components/schemas/lldp_portidsubtype",
                "description": "port ID subtype (can be overriden for specific interface)"
              },
              "system-capabilities": {
                "$ref": "#/components/schemas/lldp_system_capabilities"
              },
              "management-address": {
                "$ref": "#/components/schemas/lldp_management_address",
                "description": "default management address"
              },
              "description": {
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "system description"
              },
              "hostname": {
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "LLDP hostname"
              },
              "chassisid": {
                "$ref": "#/components/schemas/lldp_chassisid"
              },
              "timer": {
                "$ref": "#/components/schemas/UINT_2_300",
                "description": "timer for LLDP advertisements, seconds"
              },
              "holdtime": {
                "$ref": "#/components/schemas/UINT_10_1200",
                "description": "LLDP hold time, seconds"
              },
              "med-inventory": {
                "$ref": "#/components/schemas/lldp_med_inventory"
              },
              "med-fast-start": {
                "$ref": "#/components/schemas/lldp_med_fast_start"
              }
            }
          }
        }
      },
      "in_lldp_config_write": {
        "description": "Modify lldp config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "on": {
            "type": "boolean",
            "description": "enable/disable LLDP on all available physical interfaces"
          },
          "snmp": {
            "type": "boolean",
            "description": "enable/disable SNMP agent for LLDP"
          },
          "vlan": {
            "type": "boolean",
            "description": "enable/disable LLDP on eth VLAN interfaces"
          },
          "mode": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_mode"
              },
              {
                "type": "null",
                "title": "unset to default",
                "description": "Unset LLDP mode to default value (can be overriden for specific interface)"
              }
            ]
          },
          "agent-type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_agent_type"
              },
              {
                "type": "null",
                "title": "unset to default",
                "description": "Unset LLDP agent type to default value  (can be overriden for specific interface)"
              }
            ]
          },
          "custom-tlv": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_custom_tlv",
                "description": "Custom TLV to send ((can be overriden for specific interface)"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset custom tlv set (can be overriden for specific interface)"
              }
            ]
          },
          "dot3power": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_dot3power",
                "description": "802.3at power parameters (can be overriden for specific interface)"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset 802.3at power parameters (can be overriden for specific interface)"
              }
            ]
          },
          "portidsubtype": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_portidsubtype",
                "description": "port ID subtype (can be overriden for specific interface)"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset port IP subtype (can be overriden for specific interface)"
              }
            ]
          },
          "system-capabilities": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_system_capabilities"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP system capabilities info"
              }
            ]
          },
          "management-address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_management_address"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP management address"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "system description"
              },
              {
                "type": "null",
                "title": "delete description",
                "description": "delete description"
              }
            ]
          },
          "hostname": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/STRING_NO_QUOTES",
                "description": "LLDP hostname"
              },
              {
                "type": "null",
                "title": "clear",
                "description": "clear LLDP hostname"
              }
            ]
          },
          "chassisid": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_chassisid"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset Chassis-ID"
              }
            ]
          },
          "timer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_2_300",
                "description": "timer for LLDP advertisements, seconds"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP timer value to default"
              }
            ]
          },
          "holdtime": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_10_1200",
                "description": "LLDP hold time, seconds"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP hold time value to default"
              }
            ]
          },
          "med-inventory": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_med_inventory"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP-MED inventory options"
              }
            ]
          },
          "med-fast-start": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_med_fast_start"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP-MED fast start options"
              }
            ]
          }
        }
      },
      "out_lldp_config_iface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read lldp config/settings overrides for specific interface",
        "description": "Result of reading lldp config/settings overrides for specific interface",
        "properties": {
          "result": {
            "required": [
              "enable",
              "override-custom-tlv"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Enable/disable on this interface"
              },
              "override-custom-tlv": {
                "type": "boolean",
                "description": "True to override custom-tlv, false to append to ones defined in the global settings"
              },
              "mode": {
                "$ref": "#/components/schemas/lldp_mode",
                "description": "default LLDP mode (override for this interface)"
              },
              "agent-type": {
                "$ref": "#/components/schemas/lldp_agent_type",
                "description": "default LLDP agent type (override for this interface)"
              },
              "custom-tlv": {
                "$ref": "#/components/schemas/lldp_custom_tlv",
                "description": "Custom TLV to send (override for this interface)"
              },
              "dot3power": {
                "$ref": "#/components/schemas/lldp_dot3power",
                "description": "802.3at power parameters (override for this interface)"
              },
              "portidsubtype": {
                "$ref": "#/components/schemas/lldp_portidsubtype_iface",
                "description": "port ID subtype (override for this interface)"
              }
            }
          }
        }
      },
      "in_lldp_config_iface_write": {
        "description": "Modify lldp config/settings overrides for specific interface, use null to reset to defaults",
        "type": "object",
        "required": [
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/interfaces_common_ifname",
            "description": "interface name"
          },
          "enable": {
            "type": "boolean",
            "description": "Enable/disable on this interface"
          },
          "override-custom-tlv": {
            "type": "boolean",
            "description": "True to override custom-tlv, false to append to ones defined in the global settings"
          },
          "mode": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_mode"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP mode to default value (override for this interface)"
              }
            ]
          },
          "agent-type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_agent_type"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset LLDP agent type to default value (override for this interface)"
              }
            ]
          },
          "custom-tlv": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_custom_tlv",
                "description": "Custom TLV to send (override for this interface)"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset custom tlv set for this interface"
              }
            ]
          },
          "dot3power": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_dot3power",
                "description": "802.3at power parameters (override for this interface)"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset 802.3at power parameters for this interface"
              }
            ]
          },
          "portidsubtype": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_portidsubtype_iface",
                "description": "port ID subtype (override for this interface)"
              },
              {
                "type": "null",
                "title": "unset",
                "description": "Unset port IP subtype for this interface"
              }
            ]
          }
        }
      },
      "out_lldp_med_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read lldp MED settings",
        "description": "Result of reading lldp MED settings",
        "properties": {
          "result": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "address": {
                "$ref": "#/components/schemas/lldp_location_address",
                "description": "MED info for device address"
              },
              "elin": {
                "$ref": "#/components/schemas/lldp_location_elin",
                "description": "Emergency call number (e.g. 112)"
              },
              "coordinate": {
                "$ref": "#/components/schemas/lldp_location_coordinate"
              },
              "policies": {
                "$ref": "#/components/schemas/lldp_policies"
              },
              "poe": {
                "$ref": "#/components/schemas/lldp_poe"
              }
            }
          }
        }
      },
      "in_lldp_med_write": {
        "description": "Modify lldp MED/settings, use null to reset (disable sending)",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_location_address",
                "description": "MED info for device address"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED address info"
              }
            ]
          },
          "elin": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_location_elin",
                "description": "Emergency call number (e.g. 112)"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED emegency line info"
              }
            ]
          },
          "coordinate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_location_coordinate"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED coordinate info"
              }
            ]
          },
          "policies": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_policies"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED policy info"
              }
            ]
          },
          "poe": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_poe"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED power info"
              }
            ]
          }
        }
      },
      "in_lldp_med_iface_write": {
        "description": "Modify lldp MED/settings for specific interface, use null to reset (disable sending)",
        "type": "object",
        "required": [
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/interfaces_common_ifname",
            "description": "interface name"
          },
          "address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_location_address",
                "description": "MED info for device address"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED address info"
              }
            ]
          },
          "elin": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_location_elin",
                "description": "Emergency call number (e.g. 112)"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED emegency line info"
              }
            ]
          },
          "coordinate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_location_coordinate"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED coordinate info"
              }
            ]
          },
          "policies": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_policies"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED policy info"
              }
            ]
          },
          "poe": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lldp_poe"
              },
              {
                "type": "null",
                "title": "unset (remove)",
                "description": "unset (remove) MED power info"
              }
            ]
          }
        }
      },
      "out_lldp_interfaces_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read the list of LLDP capable interfaces",
        "description": "Result of reading of list of LLDP capable interfaces",
        "properties": {
          "result": {
            "description": "list of LLDP capable interfaces",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interfaces_common_ifname",
              "description": "interface name"
            }
          }
        }
      },
      "out_lldp_info_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read configuration, neighbor, statistics, chassis",
        "description": "Result of reading configuration, neighbor, statistics, chassis",
        "properties": {
          "result": {
            "description": "information represented as multiline string",
            "type": "string"
          }
        }
      },
      "ldp_show_type": {
        "type": "string",
        "enum": [
          "statistics",
          "statistics advertise-labels",
          "statistics receive-labels",
          "adjacency",
          "graceful-restart",
          "advertise-labels",
          "receive-labels",
          "inter-area-fecs",
          "fec prefix",
          "fec",
          "fec-ipv4 count",
          "upstream",
          "downstream",
          "debugging",
          "igp sync",
          "routes",
          "targeted-peers",
          "targeted-peer count",
          "lsp",
          "lsp detail",
          "lsp host",
          "lsp prefix",
          "lsp prefix detail"
        ]
      },
      "ldp_count": {
        "type": "string",
        "enum": [
          "count"
        ]
      },
      "ldp_count_detail": {
        "type": "string",
        "enum": [
          "count",
          "detail"
        ]
      },
      "ldp_count_detail_novc": {
        "type": "string",
        "enum": [
          "count",
          "detail",
          "no-vc"
        ]
      },
      "IPV4_IPV6": {
        "type": "string",
        "oneOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR"
          },
          {
            "$ref": "#/components/schemas/IPV6_ADDR"
          }
        ]
      },
      "ldp_enable_family": {
        "type": "string",
        "enum": [
          "ipv4",
          "ipv6",
          "both"
        ]
      },
      "ldp_merge_capability": {
        "type": "string",
        "enum": [
          "merge-capable",
          "non-merge-capable",
          "disabled"
        ]
      },
      "ldp_control_mode": {
        "type": "string",
        "enum": [
          "independent",
          "ordered"
        ]
      },
      "ldp_retention_mode": {
        "type": "string",
        "enum": [
          "conservative",
          "liberal",
          "auto"
        ]
      },
      "ldp_advertisement_mode": {
        "type": "string",
        "enum": [
          "downstream-on-demand",
          "downstream-unsolicited",
          "auto"
        ]
      },
      "ldp_graceful_restart_mode": {
        "type": "string",
        "enum": [
          "enabled",
          "helper-mode",
          "disabled"
        ]
      },
      "ldp_inter_area_lsp": {
        "type": "string",
        "enum": [
          "enabled",
          "config-only",
          "disabled"
        ]
      },
      "ldp_loop_detection_r": {
        "oneOf": [
          {
            "title": "loop detection is ON",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "status",
              "path_vec_limit",
              "hop_count_limit"
            ],
            "properties": {
              "status": {
                "type": "boolean",
                "const": true,
                "description": "loop detection is turned on"
              },
              "path_vec_limit": {
                "$ref": "#/components/schemas/UINT_1_255",
                "description": "loop detection path vector count, optional"
              },
              "hop_count_limit": {
                "$ref": "#/components/schemas/UINT_1_255",
                "description": "loop detection max hop count, optional"
              }
            }
          },
          {
            "title": "loop detection is OFF",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "boolean",
                "const": false,
                "description": "loop detection is turned off"
              }
            }
          }
        ]
      },
      "ldp_loop_detection_w": {
        "oneOf": [
          {
            "title": "switch ON",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "boolean",
                "const": true,
                "description": "turn on"
              },
              "path_vec_limit": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT_1_255",
                    "description": "loop detection path vector count, optional"
                  },
                  {
                    "type": "null",
                    "description": "set to default value"
                  }
                ]
              },
              "hop_count_limit": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT_1_255",
                    "description": "loop detection max hop count, optional"
                  },
                  {
                    "type": "null",
                    "description": "set to default value"
                  }
                ]
              }
            }
          },
          {
            "title": "switch OFF",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "boolean",
                "const": false,
                "description": "turn off"
              }
            }
          }
        ]
      },
      "out_ldp_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ldp status",
        "description": "Result of reading LDP status",
        "properties": {
          "result": {
            "required": [
              "status"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "status": {
                "type": "boolean",
                "description": "status: running or stopping"
              }
            }
          }
        }
      },
      "in_ldp_write": {
        "description": "change the LDP status",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "boolean",
            "description": "status: run or stop"
          }
        }
      },
      "out_ldp_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ldp config/settings",
        "description": "Result of reading LDP config/settings",
        "properties": {
          "result": {
            "required": [
              "version",
              "router_id",
              "hello_interval",
              "hold_time",
              "keepalive_timeout",
              "keepalive_interval",
              "label_withdraw_delay",
              "targeted_hello_interval",
              "targeted_hold_time",
              "loop_detection",
              "global_merge_capability",
              "control_mode",
              "request_retry",
              "request_retry_timeout",
              "propagate_release",
              "retention_mode",
              "adv_mode",
              "graceful_restart",
              "graceful_restart_liveness_period",
              "graceful_restart_max_recovery_period",
              "ldp_optimization",
              "inter_area_lsp",
              "explicit_null",
              "no_multicast_hellos",
              "pw_status_tlv"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "version": {
                "$ref": "#/components/schemas/UINT",
                "description": "protocol version"
              },
              "router_id": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Router ID in form of IP address, optional"
                  },
                  {
                    "type": "null",
                    "description": "not set"
                  }
                ]
              },
              "hello_interval": {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "interval for sending multicast `HELLO` packets, optional"
              },
              "hold_time": {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency, optional"
              },
              "keepalive_timeout": {
                "$ref": "#/components/schemas/UINT_30_65535",
                "description": "time to wait for a PDU (or keepalive message), optional"
              },
              "keepalive_interval": {
                "$ref": "#/components/schemas/UINT_10_21845",
                "description": "interval for sending periodic keepalive messages, optional"
              },
              "label_withdraw_delay": {
                "$ref": "#/components/schemas/UINT_0_60",
                "description": "delay to floating interface/short-term deletion/addition of routes, optional"
              },
              "targeted_hello_interval": {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "`HELLO` interval` for targeted peers, optional"
              },
              "targeted_hold_time": {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency for targeted peers, optional"
              },
              "loop_detection": {
                "$ref": "#/components/schemas/ldp_loop_detection_r",
                "description": "loop detection status and parameters"
              },
              "global_merge_capability": {
                "$ref": "#/components/schemas/ldp_merge_capability",
                "description": "merge capability of all interfaces, optional"
              },
              "control_mode": {
                "$ref": "#/components/schemas/ldp_control_mode",
                "description": "control mode for label processing, optional"
              },
              "request_retry": {
                "type": "boolean",
                "description": "Enable/disable request retry, optional"
              },
              "request_retry_timeout": {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "time to wait before sending a deferred label request, optional"
              },
              "propagate_release": {
                "type": "boolean",
                "description": "enable/disable propagate release of labels to downstream LSRs"
              },
              "retention_mode": {
                "$ref": "#/components/schemas/ldp_retention_mode",
                "description": "label retention mode, optional"
              },
              "adv_mode": {
                "$ref": "#/components/schemas/ldp_advertisement_mode",
                "description": "label advertisement mode, optional"
              },
              "graceful_restart": {
                "$ref": "#/components/schemas/ldp_graceful_restart_mode",
                "description": "graceful restart mode"
              },
              "graceful_restart_liveness_period": {
                "$ref": "#/components/schemas/UINT_5_300",
                "description": "neighbor liveliness timer, optional"
              },
              "graceful_restart_max_recovery_period": {
                "$ref": "#/components/schemas/UINT_15_600",
                "description": "maximum Recovery Time, optional"
              },
              "ldp_optimization": {
                "type": "boolean",
                "description": "enable/disable the optimization the LDP session reset"
              },
              "inter_area_lsp": {
                "$ref": "#/components/schemas/ldp_inter_area_lsp",
                "description": "enable/disable creation of inter-area LSPs. With option config-only existing LDP sessions are not turned off"
              },
              "explicit_null": {
                "type": "boolean",
                "description": "enable/disable Explicit NULL Label"
              },
              "no_multicast_hellos": {
                "type": "boolean",
                "description": "Disable the transmission of LDP `HELLO` messages"
              },
              "pw_status_tlv": {
                "type": "boolean",
                "description": "enable/disable PW Status TLV"
              }
            }
          }
        }
      },
      "in_ldp_config_write": {
        "description": "Modify ldp config/settings, use null to reset to defaults",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "router_id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "Router ID in form of IP address"
              },
              {
                "type": "null",
                "description": "unset Router ID"
              }
            ]
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "interval for sending multicast `HELLO` packets, optional"
              },
              {
                "type": "null",
                "description": "unset `HELLO` interval"
              }
            ]
          },
          "hold_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency, optional"
              },
              {
                "type": "null",
                "description": "unset hold time"
              }
            ]
          },
          "keepalive_timeout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_30_65535",
                "description": "time to wait for a PDU (or keepalive message), optional"
              },
              {
                "type": "null",
                "description": "unset keepalive timeout"
              }
            ]
          },
          "keepalive_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_10_21845",
                "description": "interval for sending periodic keepalive messages, optional"
              },
              {
                "type": "null",
                "description": "unset keepalive interval"
              }
            ]
          },
          "label_withdraw_delay": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_60",
                "description": "delay to floating interface/short-term deletion/addition of routes, optional"
              },
              {
                "type": "null",
                "description": "unset label withdraw delay"
              }
            ]
          },
          "targeted_hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "`HELLO` interval` for targeted peers, optional"
              },
              {
                "type": "null",
                "description": "unset targeted `HELLO` interval"
              }
            ]
          },
          "targeted_hold_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency for targeted peers, optional"
              },
              {
                "type": "null",
                "description": "unset targeted hold time"
              }
            ]
          },
          "loop_detection": {
            "$ref": "#/components/schemas/ldp_loop_detection_w",
            "description": "loop detection status and parameters, optional"
          },
          "global_merge_capability": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ldp_merge_capability",
                "description": "merge capability of all interfaces, optional"
              },
              {
                "type": "null",
                "description": "unset global merge capability"
              }
            ]
          },
          "control_mode": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ldp_control_mode",
                "description": "control mode for label processing, optional"
              },
              {
                "type": "null",
                "description": "unset label control mode"
              }
            ]
          },
          "request_retry": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "Enable/disable request retry, optional"
              },
              {
                "type": "null",
                "description": "unconfigure parameter"
              }
            ]
          },
          "request_retry_timeout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "time to wait before sending a deferred label request, optional"
              },
              {
                "type": "null",
                "description": "unset retry timeout"
              }
            ]
          },
          "propagate_release": {
            "type": "boolean",
            "description": "enable/disable propagate release of labels to downstream LSRs"
          },
          "retention_mode": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ldp_retention_mode",
                "description": "label retention mode, optional"
              },
              {
                "type": "null",
                "description": "unset retention mode"
              }
            ]
          },
          "adv_mode": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ldp_advertisement_mode",
                "description": "label advertisement mode, optional"
              },
              {
                "type": "null",
                "description": "unset advertisement mode"
              }
            ]
          },
          "graceful_restart": {
            "$ref": "#/components/schemas/ldp_graceful_restart_mode",
            "description": "graceful restart mode"
          },
          "graceful_restart_liveness_period": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_5_300",
                "description": "neighbor liveliness timer, optional"
              },
              {
                "type": "null",
                "description": "unset restart liveness period"
              }
            ]
          },
          "graceful_restart_max_recovery_period": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_15_600",
                "description": "maximum Recovery Time, optional"
              },
              {
                "type": "null",
                "description": "unset restart max recovery period"
              }
            ]
          },
          "ldp_optimization": {
            "type": "boolean",
            "description": "enable/disable the optimization the LDP session reset,optional"
          },
          "inter_area_lsp": {
            "$ref": "#/components/schemas/ldp_inter_area_lsp",
            "description": "enable/disable creation of inter-area LSPs. With option config-only existing LDP sessions are not turned off,optional"
          },
          "explicit_null": {
            "type": "boolean",
            "description": "enable/disable Explicit NULL Label,optional"
          },
          "no_multicast_hellos": {
            "type": "boolean",
            "description": "Disable the transmission of LDP `HELLO` messages,optional"
          },
          "pw_status_tlv": {
            "type": "boolean",
            "description": "enable/disable PW Status TLV, optional"
          }
        }
      },
      "ldp_rcv_any_none": {
        "type": "object",
        "required": [
          "for",
          "from"
        ],
        "additionalProperties": false,
        "properties": {
          "for": {
            "type": "string",
            "const": "any"
          },
          "from": {
            "type": "string",
            "const": "none"
          }
        }
      },
      "ldp_adv_any_none": {
        "type": "object",
        "required": [
          "for",
          "to"
        ],
        "additionalProperties": false,
        "properties": {
          "for": {
            "type": "string",
            "const": "any"
          },
          "to": {
            "type": "string",
            "const": "none"
          }
        }
      },
      "ldp_rcv_prefix_ip": {
        "type": "object",
        "required": [
          "for",
          "from"
        ],
        "additionalProperties": false,
        "properties": {
          "for": {
            "$ref": "#/components/schemas/WORD",
            "description": "prefix list name"
          },
          "from": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR"
              },
              {
                "type": "string",
                "const": "any"
              }
            ]
          }
        }
      },
      "ldp_adv_prefix_ip": {
        "type": "object",
        "required": [
          "for",
          "to"
        ],
        "additionalProperties": false,
        "properties": {
          "for": {
            "$ref": "#/components/schemas/WORD",
            "description": "prefix list name"
          },
          "to": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR"
              },
              {
                "type": "string",
                "const": "any"
              }
            ]
          }
        }
      },
      "ldp_rcv_label": {
        "description": "receive label configuration",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ldp_rcv_any_none",
            "title": "any-none"
          },
          {
            "$ref": "#/components/schemas/ldp_rcv_prefix_ip",
            "title": "prefix-ip/any"
          }
        ]
      },
      "ldp_adv_label": {
        "description": "advertise label configuration",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ldp_adv_any_none",
            "title": "any-none"
          },
          {
            "$ref": "#/components/schemas/ldp_adv_prefix_ip",
            "title": "prefix-ip/any"
          }
        ]
      },
      "out_ldp_labels_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ldp labels config",
        "description": "Result of reading LDP labels config",
        "properties": {
          "result": {
            "required": [
              "receive",
              "advertise"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "receive": {
                "type": "array",
                "description": "receive labels",
                "items": {
                  "$ref": "#/components/schemas/ldp_rcv_label"
                }
              },
              "advertise": {
                "type": "array",
                "description": "advertise labels",
                "items": {
                  "$ref": "#/components/schemas/ldp_adv_label"
                }
              }
            }
          }
        }
      },
      "in_ldp_labels_write": {
        "description": "Add/delete labels config",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add label config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "receive": {
                        "$ref": "#/components/schemas/ldp_rcv_label"
                      },
                      "advertise": {
                        "$ref": "#/components/schemas/ldp_adv_label"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete label config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "receive": {
                        "$ref": "#/components/schemas/ldp_rcv_label"
                      },
                      "advertise": {
                        "$ref": "#/components/schemas/ldp_adv_label"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "ldp_neighbor": {
        "type": "object",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR_MAY_HAVE_BIT_MASK",
                "title": "IPv4 prefix"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR_MAY_HAVE_BIT_MASK",
                "title": "IPv6 prefix"
              }
            ]
          },
          "password_type": {
            "$ref": "#/components/schemas/UINT3",
            "description": "password type"
          },
          "password": {
            "$ref": "#/components/schemas/WORD",
            "description": "password"
          }
        }
      },
      "out_ldp_neighbors_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ldp neighbors config",
        "description": "Result of reading LDP neighbors config",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "neighbors"
            ],
            "additionalProperties": false,
            "properties": {
              "neighbors": {
                "type": "array",
                "description": "neighbors",
                "items": {
                  "$ref": "#/components/schemas/ldp_neighbor"
                }
              }
            }
          }
        }
      },
      "in_ldp_neighbors_write": {
        "description": "Add/delete neighbors config",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add neighbor config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/ldp_neighbor"
                  }
                }
              },
              {
                "type": "object",
                "title": "modify neighbor config (password type and password)",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/ldp_neighbor"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete neighbor config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/ldp_neighbor"
                  }
                }
              }
            ]
          }
        }
      },
      "ldp_transport_ipv4": {
        "type": "object",
        "required": [
          "address",
          "label"
        ],
        "additionalProperties": false,
        "properties": {
          "label": {
            "$ref": "#/components/schemas/UINT_0_60000",
            "title": "label space"
          },
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "title": "IPv4 address"
          }
        }
      },
      "ldp_transport_ipv6": {
        "type": "object",
        "required": [
          "address",
          "label"
        ],
        "additionalProperties": false,
        "properties": {
          "label": {
            "$ref": "#/components/schemas/UINT_0_60000",
            "title": "label space"
          },
          "address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "title": "IPv6 address"
          }
        }
      },
      "out_ldp_transport_addresses_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ldp transport address config",
        "description": "Result of reading LDP transport address config",
        "properties": {
          "result": {
            "required": [
              "ipv4",
              "ipv6"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "ipv4": {
                "type": "array",
                "description": "list of transport addresses (map between label space and IP) ",
                "items": {
                  "$ref": "#/components/schemas/ldp_transport_ipv4"
                }
              },
              "ipv6": {
                "type": "array",
                "description": "list of transport addresses (map between label space and IP)",
                "items": {
                  "$ref": "#/components/schemas/ldp_transport_ipv6"
                }
              }
            }
          }
        }
      },
      "in_ldp_transport_addresses_write": {
        "description": "Add/delete transport address config",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add transport config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ipv4": {
                        "$ref": "#/components/schemas/ldp_transport_ipv4"
                      },
                      "ipv6": {
                        "$ref": "#/components/schemas/ldp_transport_ipv6"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify transport config (changes IP for given label space)",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ipv4": {
                        "$ref": "#/components/schemas/ldp_transport_ipv4"
                      },
                      "ipv6": {
                        "$ref": "#/components/schemas/ldp_transport_ipv6"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete transport config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ipv4": {
                        "$ref": "#/components/schemas/ldp_transport_ipv4"
                      },
                      "ipv6": {
                        "$ref": "#/components/schemas/ldp_transport_ipv6"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "ldp_targeted_peer_ipv4_r": {
        "description": "targeted peer parameter for reading",
        "type": "object",
        "required": [
          "address",
          "hello_interval",
          "hold_time"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "title": "IPv4 address"
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "interval for sending multicast `HELLO` packets, optional"
              },
              {
                "type": "null",
                "description": "inherited from `targeted_hello_interval` parameter from LDP config"
              }
            ]
          },
          "hold_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency, optional"
              },
              {
                "type": "null",
                "description": "inherited from `targeted_hold_time` parameter from LDP config"
              }
            ]
          }
        }
      },
      "ldp_targeted_peer_ipv6_r": {
        "description": "targeted peer parameter for reading",
        "type": "object",
        "required": [
          "address",
          "hello_interval",
          "hold_time"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "title": "IPv6 address"
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "interval for sending multicast `HELLO` packets, optional"
              },
              {
                "type": "null",
                "description": "inherited from `targeted_hello_interval` parameter from LDP config"
              }
            ]
          },
          "hold_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency, optional"
              },
              {
                "type": "null",
                "description": "inherited from `targeted_hold_time` parameter from LDP config"
              }
            ]
          }
        }
      },
      "ldp_targeted_peer_ipv4_m": {
        "description": "targeted peer parameter for adding/modification",
        "type": "object",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "title": "IPv4 address"
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "interval for sending multicast `HELLO` packets, optional"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          },
          "hold_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency, optional"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          }
        }
      },
      "ldp_targeted_peer_ipv6_m": {
        "description": "targeted peer parameter for adding/modification",
        "type": "object",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "title": "IPv6 address"
          },
          "hello_interval": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "interval for sending multicast `HELLO` packets, optional"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          },
          "hold_time": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency, optional"
              },
              {
                "type": "null",
                "description": "reset to default"
              }
            ]
          }
        }
      },
      "ldp_targeted_peer_ipv4_d": {
        "description": "targeted peer parameter for deletion",
        "type": "object",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "title": "IPv4 address"
          }
        }
      },
      "ldp_targeted_peer_ipv6_d": {
        "description": "targeted peer parameter for deletion",
        "type": "object",
        "required": [
          "address"
        ],
        "additionalProperties": false,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "title": "IPv6 address"
          }
        }
      },
      "out_ldp_targeted_peers_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ldp targeted peers config",
        "description": "Result of reading LDP targeted peers config",
        "properties": {
          "result": {
            "required": [
              "ipv4",
              "ipv6"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "ipv4": {
                "type": "array",
                "description": "list of targeted peers (map IP:hello-interval,hold-time) ",
                "items": {
                  "$ref": "#/components/schemas/ldp_targeted_peer_ipv4_r"
                }
              },
              "ipv6": {
                "type": "array",
                "description": "list of targeted peers (map IPv6:hello-interval,hold-time)",
                "items": {
                  "$ref": "#/components/schemas/ldp_targeted_peer_ipv6_r"
                }
              }
            }
          }
        }
      },
      "in_ldp_targeted_peers_write": {
        "description": "Add/delete targeted peers config",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add targeted peer config",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ipv4": {
                        "$ref": "#/components/schemas/ldp_targeted_peer_ipv4_m"
                      },
                      "ipv6": {
                        "$ref": "#/components/schemas/ldp_targeted_peer_ipv6_m"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify targeted peer config (changes hold-time/hello-interval for given targeted peer address",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ipv4": {
                        "$ref": "#/components/schemas/ldp_targeted_peer_ipv4_m"
                      },
                      "ipv6": {
                        "$ref": "#/components/schemas/ldp_targeted_peer_ipv6_m"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete targeted peer config",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ipv4": {
                        "$ref": "#/components/schemas/ldp_targeted_peer_ipv4_d"
                      },
                      "ipv6": {
                        "$ref": "#/components/schemas/ldp_targeted_peer_ipv6_d"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_ldp_iface_list": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading the list of  LDP-capable interfaces",
        "description": "Result of reading the list of  LDP-capable interfaces",
        "properties": {
          "result": {
            "required": [
              "interfaces"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "interfaces": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IFNAME"
                }
              }
            }
          }
        }
      },
      "out_ldp_show_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to all ldp show commands",
        "description": "Result of all ldp show commands",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "clear_ldp_session": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "session"
          },
          "ip": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR"
              }
            ]
          }
        }
      },
      "clear_ldp_adjacency": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "adjacency"
          },
          "ip": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR"
              }
            ]
          }
        }
      },
      "clear_ldp_statistics": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "statistics"
          }
        }
      },
      "clear_ldp_statistics_adv_labels": {
        "type": "object",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "action",
              "prefix",
              "ip"
            ]
          },
          {
            "required": [
              "action"
            ],
            "not": {
              "required": [
                "ip"
              ]
            }
          }
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "statistics advertise-labels"
          },
          "prefix": {
            "$ref": "#/components/schemas/WORD",
            "description": "prefix list"
          },
          "ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "neighbor address"
          }
        }
      },
      "clear_ldp_statistics_rcv_labels": {
        "type": "object",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "action",
              "prefix",
              "ip"
            ]
          },
          {
            "required": [
              "action"
            ],
            "not": {
              "required": [
                "ip"
              ]
            }
          }
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "statistics receive-labels"
          },
          "prefix": {
            "$ref": "#/components/schemas/WORD",
            "description": "prefix list"
          },
          "ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "neighbor address"
          }
        }
      },
      "in_ldp_clear_write": {
        "description": "clear LDP sessions, statistics, adjacency",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/clear_ldp_session"
              },
              {
                "$ref": "#/components/schemas/clear_ldp_adjacency"
              },
              {
                "$ref": "#/components/schemas/clear_ldp_statistics"
              },
              {
                "$ref": "#/components/schemas/clear_ldp_statistics_adv_labels"
              },
              {
                "$ref": "#/components/schemas/clear_ldp_statistics_rcv_labels"
              }
            ]
          }
        }
      },
      "out_ldp_debug_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ldp debugging feature",
        "description": "Result of reading LDP debugging features",
        "properties": {
          "result": {
            "required": [
              "qos",
              "usm",
              "dsm",
              "vc usm",
              "vc dsm",
              "events",
              "graceful-restart",
              "nsm",
              "cspf",
              "rib",
              "hexdump",
              "fsm",
              "advertise-labels",
              "tsm",
              "packet notification",
              "packet hello",
              "packet initialization",
              "packet keepalive",
              "packet address",
              "packet label"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "qos": {
                "type": "boolean",
                "description": "LDP QoS (quality of service) events"
              },
              "usm": {
                "type": "boolean",
                "description": "LDP USM events"
              },
              "dsm": {
                "type": "boolean",
                "description": "LDP Downstream SM"
              },
              "vc usm": {
                "type": "boolean",
                "description": "LDP VC Upstream SM events"
              },
              "vc dsm": {
                "type": "boolean",
                "description": "LDP VC Downstream SM events"
              },
              "events": {
                "type": "boolean",
                "description": "all LDP events"
              },
              "graceful-restart": {
                "type": "boolean",
                "description": "LDP graceful-restart events"
              },
              "nsm": {
                "type": "boolean",
                "description": "LDP NSM events"
              },
              "cspf": {
                "type": "boolean",
                "description": "constrained shortest path first (CSPF) events"
              },
              "rib": {
                "type": "boolean",
                "description": "LDP RIB (router information base)"
              },
              "hexdump": {
                "type": "boolean",
                "description": "LDP hexdump events"
              },
              "fsm": {
                "type": "boolean",
                "description": "LDP FSM events"
              },
              "advertise-labels": {
                "type": "boolean",
                "description": "LDP advertise-label events"
              },
              "tsm": {
                "type": "boolean",
                "description": "LDP TSM events"
              },
              "packet notification": {
                "type": "boolean",
                "description": "LDP notification packets"
              },
              "packet hello": {
                "type": "boolean",
                "description": "LDP `HELLO` packets"
              },
              "packet initialization": {
                "type": "boolean",
                "description": "LDP initialization packets"
              },
              "packet keepalive": {
                "type": "boolean",
                "description": "LDP keepalive packets"
              },
              "packet address": {
                "type": "boolean",
                "description": "LDP address (withdraw) packets"
              },
              "packet label": {
                "type": "boolean",
                "description": "LDP address label packets"
              }
            }
          }
        }
      },
      "in_ldp_restart_write": {
        "type": "null"
      },
      "in_ldp_debug_write": {
        "description": "Modify LDP debugging features",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "qos": {
            "type": "boolean",
            "description": "LDP QoS (quality of service) events"
          },
          "usm": {
            "type": "boolean",
            "description": "LDP USM events"
          },
          "dsm": {
            "type": "boolean",
            "description": "LDP Downstream SM"
          },
          "vc usm": {
            "type": "boolean",
            "description": "LDP VC Upstream SM events"
          },
          "vc dsm": {
            "type": "boolean",
            "description": "LDP VC Downstream SM events"
          },
          "events": {
            "type": "boolean",
            "description": "all LDP events"
          },
          "graceful-restart": {
            "type": "boolean",
            "description": "LDP graceful-restart events"
          },
          "nsm": {
            "type": "boolean",
            "description": "LDP NSM events"
          },
          "cspf": {
            "type": "boolean",
            "description": "constrained shortest path first (CSPF) events"
          },
          "rib": {
            "type": "boolean",
            "description": "LDP RIB (router information base)"
          },
          "hexdump": {
            "type": "boolean",
            "description": "LDP hexdump events"
          },
          "fsm": {
            "type": "boolean",
            "description": "LDP FSM events"
          },
          "advertise-labels": {
            "type": "boolean",
            "description": "LDP advertise-label events"
          },
          "tsm": {
            "type": "boolean",
            "description": "LDP TSM events"
          },
          "packet notification": {
            "type": "boolean",
            "description": "LDP notification packets"
          },
          "packet hello": {
            "type": "boolean",
            "description": "LDP `HELLO` packets"
          },
          "packet initialization": {
            "type": "boolean",
            "description": "LDP initialization packets"
          },
          "packet keepalive": {
            "type": "boolean",
            "description": "LDP keepalive packets"
          },
          "packet address": {
            "type": "boolean",
            "description": "LDP address (withdraw) packets"
          },
          "packet label": {
            "type": "boolean",
            "description": "LDP address label packets"
          }
        }
      },
      "out_ldp_config_iface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read LDP config/settings overrides for specific interface",
        "description": "Result of reading LDP config/settings overrides for specific interface",
        "properties": {
          "result": {
            "required": [
              "enable",
              "hello_interval",
              "hold_time",
              "keepalive_timeout",
              "keepalive_interval",
              "retention_mode",
              "adv_mode",
              "no_multicast_hellos",
              "max_pdu_length"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "enable": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ldp_enable_family"
                  },
                  {
                    "type": "string",
                    "const": "disabled"
                  }
                ],
                "description": "enable on specific IP family"
              },
              "hello_interval": {
                "$ref": "#/components/schemas/UINT_1_21845",
                "description": "interval for sending multicast `HELLO` packets, optional"
              },
              "hold_time": {
                "$ref": "#/components/schemas/UINT_3_65535",
                "description": "timeout for discarding Hello adjacency, optional"
              },
              "keepalive_timeout": {
                "$ref": "#/components/schemas/UINT_30_65535",
                "description": "time to wait for a PDU (or keepalive message), optional"
              },
              "keepalive_interval": {
                "$ref": "#/components/schemas/UINT_10_21845",
                "description": "interval for sending periodic keepalive messages, optional"
              },
              "retention_mode": {
                "$ref": "#/components/schemas/ldp_retention_mode",
                "description": "label retention mode, optional"
              },
              "adv_mode": {
                "$ref": "#/components/schemas/ldp_advertisement_mode",
                "description": "label advertisement mode, optional"
              },
              "no_multicast_hellos": {
                "type": "boolean",
                "description": "Disable the transmission of LDP `HELLO` messages"
              },
              "max_pdu_length": {
                "$ref": "#/components/schemas/UINT_256_65535",
                "description": "max PDU length in octets"
              }
            }
          }
        }
      },
      "in_ldp_config_iface_write": {
        "description": "Modify LDP config/settings overrides for specific interface, use null to reset to defaults",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "enable/disable on interface",
                "required": [
                  "manage"
                ],
                "additionalProperties": false,
                "properties": {
                  "manage": {
                    "type": "object",
                    "oneOf": [
                      {
                        "required": [
                          "interface_name",
                          "enable"
                        ]
                      },
                      {
                        "required": [
                          "interface_name",
                          "disable"
                        ]
                      }
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "interface_name": {
                        "$ref": "#/components/schemas/IFNAME",
                        "description": "interface name"
                      },
                      "enable": {
                        "$ref": "#/components/schemas/ldp_enable_family"
                      },
                      "disable": {
                        "$ref": "#/components/schemas/ldp_enable_family"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify interface config (override global settings)",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "interface_name"
                    ],
                    "properties": {
                      "interface_name": {
                        "$ref": "#/components/schemas/IFNAME",
                        "description": "interface name"
                      },
                      "hello_interval": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/UINT_1_21845",
                            "description": "interval for sending multicast `HELLO` packets, optional"
                          },
                          {
                            "type": "null",
                            "description": "set to default"
                          }
                        ]
                      },
                      "hold_time": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/UINT_3_65535",
                            "description": "timeout for discarding Hello adjacency, optional"
                          },
                          {
                            "type": "null",
                            "description": "set to default"
                          }
                        ]
                      },
                      "keepalive_timeout": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/UINT_30_65535",
                            "description": "time to wait for a PDU (or keepalive message), optional"
                          },
                          {
                            "type": "null",
                            "description": "set to default"
                          }
                        ]
                      },
                      "keepalive_interval": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/UINT_10_21845",
                            "description": "interval for sending periodic keepalive messages, optional"
                          },
                          {
                            "type": "null",
                            "description": "set to default"
                          }
                        ]
                      },
                      "retention_mode": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ldp_retention_mode",
                            "description": "label retention mode, optional"
                          },
                          {
                            "type": "null",
                            "description": "set to default"
                          }
                        ]
                      },
                      "adv_mode": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ldp_advertisement_mode",
                            "description": "label advertisement mode, optional"
                          },
                          {
                            "type": "null",
                            "description": "set to default"
                          }
                        ]
                      },
                      "no_multicast_hellos": {
                        "type": "boolean",
                        "description": "Disable the transmission of LDP `HELLO` messages"
                      },
                      "max_pdu_length": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/UINT_256_65535",
                            "description": "max PDU length in octets"
                          },
                          {
                            "type": "null",
                            "description": "set to default"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "l2_mangle_vlan_id": {
        "type": "object",
        "title": "set VLAN ID",
        "required": [
          "action",
          "vlan_id"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-vlan-id"
          },
          "vlan_id": {
            "$ref": "#/components/schemas/VLAN_ID",
            "description": "new VLAN ID value"
          }
        }
      },
      "l2_mangle_vlan_prio": {
        "type": "object",
        "title": "set VLAN PRIO",
        "required": [
          "action",
          "vlan_prio"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-vlan-prio"
          },
          "vlan_prio": {
            "$ref": "#/components/schemas/UINT3",
            "description": "new VLAN PRIO value"
          }
        }
      },
      "l2_mangle_skb_prio": {
        "type": "object",
        "title": "set SKB PRIO",
        "required": [
          "action",
          "skb_prio"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-skb-prio"
          },
          "skb_prio": {
            "$ref": "#/components/schemas/UINT6",
            "description": "new SKB PRIO value"
          }
        }
      },
      "l2_acl_mangle_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/l2_mangle_vlan_id",
            "title": "set VLAN ID"
          },
          {
            "$ref": "#/components/schemas/l2_mangle_vlan_prio",
            "title": "set VLAN PRIO"
          },
          {
            "$ref": "#/components/schemas/l2_mangle_skb_prio",
            "title": "set SKB priority"
          }
        ]
      },
      "out_l2_mangle_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading L2 ACL mangle lists",
        "description": "Result of reading L2 ACL mangle lists",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "prerouting": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/l2_acl_mangle_chain"
                },
                "description": "prerouting chains"
              },
              "output": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/l2_acl_mangle_chain"
                },
                "description": "output chains"
              },
              "postrouting": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/l2_acl_mangle_chain"
                },
                "description": "postrouting chains"
              }
            }
          }
        }
      },
      "in_l2_mangle_write": {
        "description": "Modify L2 ACL mangle list",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add mangle list",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain",
                      "mangle"
                    ],
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/NAT_CHAIN",
                        "description": "chain name"
                      },
                      "mangle": {
                        "$ref": "#/components/schemas/l2_acl_mangle_chain",
                        "description": "mangle list"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete mangle list or whole chain",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/NAT_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "l2_acl_filter_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name",
          "action"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          },
          "action": {
            "$ref": "#/components/schemas/PERMIT_DENY",
            "description": "permit or deny"
          }
        }
      },
      "out_l2_filter_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading L2 ACL filters",
        "description": "Result of reading L2 ACL filters",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "input": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/l2_acl_filter_chain"
                },
                "description": "input chains"
              },
              "forward": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/l2_acl_filter_chain"
                },
                "description": "forward chains"
              },
              "output": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/l2_acl_filter_chain"
                },
                "description": "output chains"
              }
            }
          }
        }
      },
      "in_l2_filter_write": {
        "description": "Modify L2 ACL filter",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add filter",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain",
                      "filter"
                    ],
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/BASIC_CHAIN",
                        "description": "chain name"
                      },
                      "filter": {
                        "$ref": "#/components/schemas/l2_acl_filter_chain",
                        "description": "filter"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete filter or whole chain",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/BASIC_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_l2_acl_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the list of L2 ACLs",
        "description": "Result of reading the list of L2 ACLs",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "l2": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ACL_NAME"
                },
                "description": "L2 ACLs"
              }
            }
          }
        }
      },
      "VLAN_ENCAP": {
        "oneOf": [
          {
            "type": "string",
            "const": "0x88a8",
            "title": "`QinQ` type for inner tag"
          },
          {
            "type": "string",
            "const": "0x8100",
            "title": "`VLAN` type for inner tag"
          }
        ]
      },
      "l2_acl_macsource": {
        "type": "object",
        "title": "MAC source rule",
        "additionalProperties": false,
        "required": [
          "mac_address"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert MAC source rule"
          },
          "mac_address": {
            "$ref": "#/components/schemas/MAC_ADDR",
            "description": "MAC address"
          }
        }
      },
      "l2_acl_macdest": {
        "type": "object",
        "title": "MAC destination rule",
        "additionalProperties": false,
        "required": [
          "mac_address"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert MAC destination rule"
          },
          "mac_address": {
            "$ref": "#/components/schemas/MAC_ADDR",
            "description": "MAC address"
          }
        }
      },
      "l2_acl_vlan_id": {
        "type": "object",
        "title": "VLAN ID rule",
        "additionalProperties": false,
        "required": [
          "vlan_id"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert VLAN ID rule"
          },
          "vlan_id": {
            "$ref": "#/components/schemas/VLAN_ID",
            "description": "VLAN ID"
          }
        }
      },
      "l2_acl_vlan_prio": {
        "type": "object",
        "title": "VLAN PRIO rule",
        "additionalProperties": false,
        "required": [
          "vlan_prio"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert VLAN PRIO rule"
          },
          "vlan_prio": {
            "$ref": "#/components/schemas/UINT3",
            "description": "VLAN PRIO value"
          }
        }
      },
      "l2_acl_vlan_encap": {
        "type": "object",
        "title": "VLAN encapsulation rule",
        "additionalProperties": false,
        "required": [
          "vlan_encap"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert VLAN encapsulation rule"
          },
          "vlan_encap": {
            "$ref": "#/components/schemas/VLAN_ENCAP",
            "description": "VLAN encapsulation value"
          }
        }
      },
      "l2_acl_protocol": {
        "type": "object",
        "title": "Protocol rule",
        "additionalProperties": false,
        "required": [
          "protocol"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert protocol rule"
          },
          "protocol": {
            "$ref": "#/components/schemas/HEX",
            "description": "protocol value"
          }
        }
      },
      "l2_acl_ininterface": {
        "type": "object",
        "title": "input interface rule",
        "additionalProperties": false,
        "required": [
          "ininterface"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert input interface rule"
          },
          "ininterface": {
            "$ref": "#/components/schemas/STRING",
            "description": "input interface system name"
          }
        }
      },
      "l2_acl_outinterface": {
        "type": "object",
        "title": "output interface rule",
        "additionalProperties": false,
        "required": [
          "outinterface"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert output interface rule"
          },
          "outinterface": {
            "$ref": "#/components/schemas/STRING",
            "description": "output interface system name"
          }
        }
      },
      "l2_acl_rule": {
        "type": "object",
        "title": "L2 access control list rule",
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "macsource"
            ],
            "title": "MAC source rule"
          },
          {
            "required": [
              "macdest"
            ],
            "title": "MAC destination rule"
          },
          {
            "required": [
              "vlan_id",
              "protocol"
            ],
            "title": "VLAN ID rule"
          },
          {
            "required": [
              "vlan_prio",
              "protocol"
            ],
            "title": "VLAN PRIO rule"
          },
          {
            "required": [
              "vlan_encap",
              "protocol"
            ],
            "title": "VLAN encapsulation rule"
          },
          {
            "required": [
              "protocol"
            ],
            "title": "Protocol rule"
          },
          {
            "required": [
              "ininterface"
            ],
            "title": "input interface rule"
          },
          {
            "required": [
              "outinterface"
            ],
            "title": "output interface rule"
          },
          {
            "required": [
              "limit_rate"
            ],
            "title": "limiting rule"
          },
          {
            "required": [
              "limit_burst"
            ],
            "title": "limit burst rule"
          }
        ],
        "properties": {
          "macsource": {
            "$ref": "#/components/schemas/l2_acl_macsource"
          },
          "macdest": {
            "$ref": "#/components/schemas/l2_acl_macdest"
          },
          "vlan_id": {
            "$ref": "#/components/schemas/l2_acl_vlan_id"
          },
          "vlan_prio": {
            "$ref": "#/components/schemas/l2_acl_vlan_prio"
          },
          "vlan_encap": {
            "$ref": "#/components/schemas/l2_acl_vlan_encap"
          },
          "protocol": {
            "$ref": "#/components/schemas/l2_acl_protocol"
          },
          "ininterface": {
            "$ref": "#/components/schemas/l2_acl_ininterface"
          },
          "outinterface": {
            "$ref": "#/components/schemas/l2_acl_outinterface"
          },
          "limit_rate": {
            "$ref": "#/components/schemas/FILTER_UNTIL_RATE",
            "description": "R/{second|minute|hour|day}, *R* is a positive integer"
          },
          "limit_burst": {
            "$ref": "#/components/schemas/UINT",
            "description": "Maximum initial number of packets to match (default: 5)"
          }
        }
      },
      "out_l2_acl_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading L2 ACL rules",
        "description": "Result of reading L2 ACL rules",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "list_name": {
                  "$ref": "#/components/schemas/ACL_NAME",
                  "description": "ACL name"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/l2_acl_rule"
                  },
                  "description": "list of rules"
                }
              }
            }
          }
        }
      },
      "in_l2_acl_write": {
        "description": "Modify L2 ACL rule",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name",
                      "rule"
                    ],
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/l2_acl_rule",
                        "description": "rule to add"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name"
                    ],
                    "comment": "rule and index are mutually exclusive. If none of them give while ACL is deleted",
                    "not": {
                      "required": [
                        "rule",
                        "index"
                      ]
                    },
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/l2_acl_rule",
                        "description": "rule to delete"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to delete"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_l2_show_ebtables_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response display ebtables",
        "description": "Result of reading ebtables",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "strings to display"
          }
        }
      },
      "in_keychain_write": {
        "title": "request write key chain",
        "description": "Enable/Disable `key chain`",
        "type": "object",
        "required": [
          "action",
          "key_chain"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "enum": [
              "add",
              "delete"
            ],
            "description": "Add/Delete Key-chain"
          },
          "key_chain": {
            "description": "Key-chain name",
            "$ref": "#/components/schemas/WORD"
          }
        }
      },
      "in_key_write": {
        "title": "request write key",
        "description": "Configure key",
        "type": "object",
        "required": [
          "key",
          "key_chain"
        ],
        "additionalProperties": false,
        "properties": {
          "key_chain": {
            "description": "Key-chain name",
            "$ref": "#/components/schemas/WORD"
          },
          "key": {
            "description": "Configure Key",
            "oneOf": [
              {
                "title": "set",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "action",
                  "key_id"
                ],
                "properties": {
                  "action": {
                    "const": "set",
                    "description": "Set key settings"
                  },
                  "key_id": {
                    "description": "Key identifier number",
                    "$ref": "#/components/schemas/UINT_0_2147483647"
                  },
                  "key_string": {
                    "description": "Set password",
                    "oneOf": [
                      {
                        "title": "set",
                        "description": "String of characters to be used as a password by the key",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                      },
                      {
                        "title": "unset",
                        "description": "Remove password",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  },
                  "send_lifetime": {
                    "description": "Configure send lifetime of the key",
                    "oneOf": [
                      {
                        "title": "set",
                        "description": "Configure send lifetime of the key",
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "start_time",
                          "start_day",
                          "start_month",
                          "start_year",
                          "end_lifetime"
                        ],
                        "properties": {
                          "start_time": {
                            "description": "Start time of `accept-lifetime` in hours, minutes and seconds",
                            "$ref": "#/components/schemas/TIME_FULL"
                          },
                          "start_day": {
                            "description": "Day of the month to start",
                            "$ref": "#/components/schemas/UINT_1_31"
                          },
                          "start_month": {
                            "description": "Month of the year to start",
                            "$ref": "#/components/schemas/MONTH_STRING"
                          },
                          "start_year": {
                            "description": "Year to start",
                            "$ref": "#/components/schemas/UINT_1993_2035"
                          },
                          "end_lifetime": {
                            "description": "Set the end of lifetime",
                            "oneOf": [
                              {
                                "title": "date",
                                "description": "Date when the key lifetime ends",
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                  "end_type",
                                  "stop_time",
                                  "stop_day",
                                  "stop_month",
                                  "stop_year"
                                ],
                                "properties": {
                                  "end_type": {
                                    "const": "date",
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "stop_time": {
                                    "description": "End time of `accept-lifetime` in hours, minutes and seconds",
                                    "$ref": "#/components/schemas/TIME_FULL"
                                  },
                                  "stop_day": {
                                    "description": "Day of the month to end",
                                    "$ref": "#/components/schemas/UINT_1_31"
                                  },
                                  "stop_month": {
                                    "description": "Month of the year to end",
                                    "$ref": "#/components/schemas/MONTH_STRING"
                                  },
                                  "stop_year": {
                                    "description": "Year to end",
                                    "$ref": "#/components/schemas/UINT_1993_2035"
                                  }
                                }
                              },
                              {
                                "title": "duration",
                                "description": "Set lifetime duration",
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                  "end_type",
                                  "duration"
                                ],
                                "properties": {
                                  "end_type": {
                                    "const": "duration",
                                    "type": "string",
                                    "description": "Duration"
                                  },
                                  "duration": {
                                    "description": "Actual duration of a key in seconds",
                                    "$ref": "#/components/schemas/UINT_1_2147483646"
                                  }
                                }
                              },
                              {
                                "title": "infinite",
                                "description": "Infinite lifetime",
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                  "end_type"
                                ],
                                "properties": {
                                  "end_type": {
                                    "const": "infinite",
                                    "type": "string",
                                    "description": "Never expire"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "title": "unset",
                        "description": "Disable `send-lifetime` function",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              },
              {
                "title": "delete",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "action",
                  "key_id"
                ],
                "properties": {
                  "action": {
                    "const": "delete",
                    "description": "Remove key"
                  },
                  "key_id": {
                    "description": "Key identifier number",
                    "$ref": "#/components/schemas/UINT_0_2147483647"
                  }
                }
              }
            ]
          }
        }
      },
      "out_keychain_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read keychains",
        "description": "Result of reading keychain list",
        "properties": {
          "result": {
            "type": "array",
            "description": "List of keychains",
            "items": {
              "description": "Keychain settings",
              "type": "object",
              "required": [
                "key_chain",
                "key_list"
              ],
              "additionalProperties": false,
              "properties": {
                "key_chain": {
                  "description": "Key-chain name",
                  "$ref": "#/components/schemas/WORD"
                },
                "key_list": {
                  "description": "List of keys",
                  "type": "array",
                  "items": {
                    "description": "Key settings",
                    "type": "object",
                    "required": [
                      "key_id",
                      "key_string",
                      "send_lifetime"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "key_id": {
                        "description": "Key identifier number",
                        "$ref": "#/components/schemas/UINT_0_2147483647"
                      },
                      "key_string": {
                        "description": "Key password",
                        "oneOf": [
                          {
                            "title": "set",
                            "description": "String of characters to be used as a password by the key",
                            "$ref": "#/components/schemas/STRING_ALL_SYMBOLS"
                          },
                          {
                            "title": "unset",
                            "description": "Remove password",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      },
                      "send_lifetime": {
                        "description": "Send lifetime of the key",
                        "oneOf": [
                          {
                            "title": "set",
                            "description": "Send lifetime of the key",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "start_time",
                              "start_day",
                              "start_month",
                              "start_year",
                              "end_lifetime"
                            ],
                            "properties": {
                              "start_time": {
                                "description": "Start time of `accept-lifetime` in hours, minutes and seconds",
                                "$ref": "#/components/schemas/TIME_FULL"
                              },
                              "start_day": {
                                "description": "Day of the month to start",
                                "$ref": "#/components/schemas/UINT_1_31"
                              },
                              "start_month": {
                                "description": "Month of the year to start",
                                "$ref": "#/components/schemas/MONTH_STRING"
                              },
                              "start_year": {
                                "description": "Year to start",
                                "$ref": "#/components/schemas/UINT_1993_2035"
                              },
                              "end_lifetime": {
                                "description": "Set the end of lifetime",
                                "oneOf": [
                                  {
                                    "title": "date",
                                    "description": "Date when the key lifetime ends",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "end_type",
                                      "stop_time",
                                      "stop_day",
                                      "stop_month",
                                      "stop_year"
                                    ],
                                    "properties": {
                                      "end_type": {
                                        "const": "date",
                                        "type": "string",
                                        "description": "Date"
                                      },
                                      "stop_time": {
                                        "description": "End time of `accept-lifetime` in hours, minutes and seconds",
                                        "$ref": "#/components/schemas/TIME_FULL"
                                      },
                                      "stop_day": {
                                        "description": "Day of the month to end",
                                        "$ref": "#/components/schemas/UINT_1_31"
                                      },
                                      "stop_month": {
                                        "description": "Month of the year to end",
                                        "$ref": "#/components/schemas/MONTH_STRING"
                                      },
                                      "stop_year": {
                                        "description": "Year to end",
                                        "$ref": "#/components/schemas/UINT_1993_2035"
                                      }
                                    }
                                  },
                                  {
                                    "title": "duration",
                                    "description": "Lifetime duration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "end_type",
                                      "duration"
                                    ],
                                    "properties": {
                                      "end_type": {
                                        "const": "duration",
                                        "type": "string",
                                        "description": "Duration"
                                      },
                                      "duration": {
                                        "description": "Actual duration of a key in seconds",
                                        "$ref": "#/components/schemas/UINT_1_2147483646"
                                      }
                                    }
                                  },
                                  {
                                    "title": "infinite",
                                    "description": "Infinite lifetime",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "end_type"
                                    ],
                                    "properties": {
                                      "end_type": {
                                        "const": "infinite",
                                        "type": "string",
                                        "description": "Never expire"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "title": "unset",
                            "description": "Disable `send-lifetime` function",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "isis_router": {
        "oneOf": [
          {
            "title": "default instance",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "isis_tag"
            ],
            "properties": {
              "isis_tag": {
                "$ref": "#/components/schemas/null",
                "description": "default instance - should be run in default VRF"
              }
            }
          },
          {
            "title": "non-default instance",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "isis_tag"
            ],
            "properties": {
              "isis_tag": {
                "$ref": "#/components/schemas/STRING",
                "description": "IS-IS router instance name"
              },
              "vrf": {
                "$ref": "#/components/schemas/VRF",
                "description": "VRF name - missing if running on default VRF"
              }
            }
          }
        ]
      },
      "out_isis_show_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to all isis show commands",
        "description": "Result of all isis show commands",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "isis_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isis_tag": {
            "description": "IS-IS router instance name",
            "oneOf": [
              {
                "title": "tag",
                "description": "IS-IS tag",
                "$ref": "#/components/schemas/STRING"
              },
              {
                "title": "default",
                "description": "default instance",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "authentication": {
            "description": "Authentication control",
            "type": "object",
            "properties": {
              "level_settings": {
                "description": "Set settings for level",
                "type": "object",
                "required": [
                  "level",
                  "settings"
                ],
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "settings": {
                    "oneOf": [
                      {
                        "title": "disable",
                        "$ref": "#/components/schemas/null"
                      },
                      {
                        "title": "enable",
                        "description": "Authentication settings",
                        "type": "object",
                        "required": [
                          "mode",
                          "key_chane"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "mode": {
                            "oneOf": [
                              {
                                "type": "string",
                                "const": "md5",
                                "description": "MD5 digest"
                              },
                              {
                                "type": "string",
                                "const": "text",
                                "description": "Clear text authentication"
                              }
                            ]
                          },
                          "key_chain": {
                            "oneOf": [
                              {
                                "title": "set",
                                "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                                "description": "Name of the key chain"
                              },
                              {
                                "title": "unset",
                                "$ref": "#/components/schemas/null",
                                "description": "Clear text authentication"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "send_only": {
                "description": "Authentication send-only option",
                "type": "object",
                "required": [
                  "level",
                  "enable"
                ],
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Set/Revert authentication send-only option"
                  }
                }
              }
            }
          },
          "bfd": {
            "description": "Manage Bidirectional Forwarding Detection (BFD)",
            "type": "boolean"
          },
          "area_password": {
            "description": "Configure the authentication password for an area",
            "oneOf": [
              {
                "title": "unset",
                "$ref": "#/components/schemas/null",
                "description": "Clear the authentication password for an area"
              },
              {
                "title": "set",
                "type": "object",
                "description": "Set the authentication password",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Password string"
                  },
                  "snp": {
                    "description": "Insert the password into Level-1 SNP PDUs",
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "send-only",
                        "description": "Only insert the password into the Level-1 SNP PDUs, but not check the password in SNP PDUs that it receives. Use this keyword during a software upgrade to ease the transition"
                      },
                      {
                        "type": "string",
                        "const": "validate",
                        "description": "Insert the password into the Level-1 SNP PDUs and check the password in SNPs that it receives"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "domain_password": {
            "description": "Set the authentication password for a routing domain",
            "oneOf": [
              {
                "title": "unset",
                "$ref": "#/components/schemas/null",
                "description": "Clear the authentication password for a routing domain"
              },
              {
                "title": "set",
                "type": "object",
                "description": "Set the authentication password",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Password string"
                  },
                  "snp": {
                    "description": "Insert the password into Level-1 SNP PDUs",
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "send-only",
                        "description": "Only insert the password into the Level-1 SNP PDUs, but not check the password in SNP PDUs that it receives. Use this keyword during a software upgrade to ease the transition"
                      },
                      {
                        "type": "string",
                        "const": "validate",
                        "description": "Insert the password into the Level-1 SNP PDUs and check the password in SNPs that it receives"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "default_information_originate": {
            "type": "object",
            "description": "Distribute a default route",
            "additionalProperties": false,
            "required": [
              "state"
            ],
            "properties": {
              "state": {
                "description": "Advertise default route",
                "type": "string",
                "enum": [
                  "enable",
                  "disable",
                  "always"
                ]
              },
              "route_map": {
                "description": "Route map reference",
                "$ref": "#/components/schemas/STRING"
              }
            }
          },
          "dynamic_hostname": {
            "description": "Configure the hostname to be advertised for an ISIS instance",
            "oneOf": [
              {
                "const": "enable",
                "type": "string",
                "description": "Enable dynamic hostname"
              },
              {
                "const": "area-tag",
                "type": "string",
                "description": "Enable dynamic hostname and use routing area tag as a hostname"
              },
              {
                "const": "disable",
                "type": "string",
                "description": "Disable dynamic hostname"
              }
            ]
          },
          "lsp": {
            "description": "LSP settings",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "mtu": {
                "description": "LSP MTU",
                "required": [
                  "level",
                  "settings"
                ],
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "settings": {
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Restore LSP MTU to default of 1492 bytes"
                      },
                      {
                        "title": "mtu",
                        "description": "MTU",
                        "$ref": "#/components/schemas/UINT_512_1492"
                      }
                    ]
                  }
                }
              },
              "gen_interval": {
                "description": "Minimum interval between regenerating same LSP",
                "type": "object",
                "required": [
                  "level",
                  "settings"
                ],
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "settings": {
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Unset minimum interval between regenerating same LSP"
                      },
                      {
                        "title": "interval",
                        "description": "Interval in seconds",
                        "$ref": "#/components/schemas/UINT_1_120"
                      }
                    ]
                  }
                }
              },
              "refresh_interval": {
                "description": "LSP refresh interval",
                "oneOf": [
                  {
                    "title": "default",
                    "$ref": "#/components/schemas/null",
                    "description": "Revert LSP refresh interval"
                  },
                  {
                    "title": "interval",
                    "description": "LSP refresh interval in seconds",
                    "$ref": "#/components/schemas/UINT_1_65535"
                  }
                ]
              },
              "max_lifetime": {
                "description": "Maximum LSP lifetime",
                "oneOf": [
                  {
                    "title": "default",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset maximum LSP lifetime"
                  },
                  {
                    "title": "lifetime",
                    "description": "Maximum LSP lifetime in seconds",
                    "$ref": "#/components/schemas/UINT_350_65535"
                  }
                ]
              },
              "ignore_errors": {
                "description": "Ignore bad checksums in LSPs/Drop LSPs with bad checksums",
                "type": "boolean"
              },
              "high_priority_tag": {
                "description": "Sets the Tag value on IS-IS LSP",
                "oneOf": [
                  {
                    "title": "default",
                    "description": "Disable Tag value on IS-IS LSP",
                    "$ref": "#/components/schemas/null"
                  },
                  {
                    "title": "tag",
                    "description": "Tag value",
                    "$ref": "#/components/schemas/UINT_1_4294967295"
                  }
                ]
              },
              "set_overload_bit": {
                "description": "Set `overload-bit` in LSP",
                "oneOf": [
                  {
                    "title": "unset",
                    "$ref": "#/components/schemas/null",
                    "description": "Clear `overload-bit` in LSP"
                  },
                  {
                    "title": "set",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "set"
                    ],
                    "properties": {
                      "set": {
                        "type": "boolean",
                        "const": true,
                        "description": "`overload-bit` in LSP"
                      },
                      "supress": {
                        "description": "Suppress specific types of IP prefixes",
                        "oneOf": [
                          {
                            "const": "external",
                            "description": "Redistribute external reachability (to prevent the IP prefixes learned from other protocols from being advertised)"
                          },
                          {
                            "const": "interlevel",
                            "description": "Redistribute interlevel reachability"
                          },
                          {
                            "const": "external_and_interlevel",
                            "description": "Redistribute external and interlevel reachability"
                          }
                        ]
                      },
                      "on_startup": {
                        "description": "Action on startup",
                        "oneOf": [
                          {
                            "title": "time",
                            "$ref": "#/components/schemas/UINT_5_86400",
                            "description": "Time in seconds to advertise one self as overloaded after reboot"
                          },
                          {
                            "const": "wait_for_bgp",
                            "description": "BGP determines when to unset the `overload-bit`"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "is_type": {
            "description": "IS Level for this routing process",
            "oneOf": [
              {
                "title": "set",
                "description": "IS level",
                "enum": [
                  "level-1",
                  "level-2-only",
                  "level-1-2"
                ]
              },
              {
                "title": "not set",
                "description": "default instance",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "timers": {
            "description": "Set timers settings",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "wait_timer": {
                "description": "Sets the `waiting-timer` for a level",
                "type": "object",
                "required": [
                  "level",
                  "settings"
                ],
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "settings": {
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Revert the `waiting-timer`"
                      },
                      {
                        "title": "timer",
                        "description": "Waiting Time in seconds",
                        "$ref": "#/components/schemas/UINT_1_65535"
                      }
                    ]
                  }
                }
              },
              "restart_timer": {
                "description": "Set restart timer",
                "type": "object",
                "required": [
                  "level",
                  "settings"
                ],
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "settings": {
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Disable restart timer"
                      },
                      {
                        "title": "timer",
                        "description": "Restart timer in seconds",
                        "$ref": "#/components/schemas/UINT_5_65535"
                      }
                    ]
                  }
                }
              }
            }
          },
          "ispf": {
            "description": "Set incremental SPF for this routing process",
            "oneOf": [
              {
                "const": "level-1",
                "type": "string",
                "description": "Enable for level-1 only"
              },
              {
                "const": "level-2-only",
                "type": "string",
                "description": "Enable for level-2 only"
              },
              {
                "const": "level-1-2",
                "type": "string",
                "description": "Enable for level-1 and level-2"
              },
              {
                "title": "disable",
                "$ref": "#/components/schemas/null",
                "description": "Disable incremental SPF for this routing process"
              }
            ]
          },
          "max_area_address": {
            "description": "Configure IS-IS maximum area address",
            "oneOf": [
              {
                "title": "default",
                "$ref": "#/components/schemas/null",
                "description": "Unconfigure IS-IS maximum area address"
              },
              {
                "title": "maximum",
                "description": "The maximum number of areas in the network",
                "$ref": "#/components/schemas/UINT_3_254"
              }
            ]
          },
          "spf_interval_exp": {
            "description": "Set exponential backoff delays between SPF calculations",
            "oneOf": [
              {
                "title": "unset",
                "$ref": "#/components/schemas/null",
                "description": "Unset exponential backoff delays between SPF calculations"
              },
              {
                "title": "set",
                "type": "object",
                "required": [
                  "level",
                  "min_delay",
                  "max_delay"
                ],
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "min_delay": {
                    "$ref": "#/components/schemas/UINT_0_2147483647",
                    "description": "Minimum delay between receiving a change to the SPF calculation in milliseconds. The default SPF minimum hold-time interval value is 500 milliseconds"
                  },
                  "max_delay": {
                    "$ref": "#/components/schemas/UINT_0_2147483647",
                    "description": "Maximum delay between receiving a change to the SPF calculation in milliseconds. The default SPF maximum hold-time interval value is 50 seconds"
                  }
                }
              }
            ]
          },
          "prc_interval_exp": {
            "description": "Set exponential backoff delays between PRC calculations",
            "oneOf": [
              {
                "title": "unset",
                "$ref": "#/components/schemas/null",
                "description": "Disable exponential backoff delays between PRC calculations"
              },
              {
                "title": "set",
                "type": "object",
                "description": "Set exponential backoff delays",
                "required": [
                  "delay"
                ],
                "additionalProperties": false,
                "properties": {
                  "delay": {
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Use default values: Minimum delay - 500, Maximum delay - 50000"
                      },
                      {
                        "title": "set",
                        "type": "object",
                        "description": "Use non-default values",
                        "required": [
                          "min_delay",
                          "max_delay"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "min_delay": {
                            "$ref": "#/components/schemas/UINT_0_2147483647",
                            "description": "Minimum delay between receiving a change to PRC calculation in milliseconds"
                          },
                          "max_delay": {
                            "$ref": "#/components/schemas/UINT_0_2147483647",
                            "description": "Maximum delay between receiving a change to PRC calculation in milliseconds"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "metric_style": {
            "description": "Use old-style (ISO 10589) or new-style packet formats",
            "type": "object",
            "required": [
              "level",
              "settings"
            ],
            "additionalProperties": false,
            "properties": {
              "level": {
                "type": "string",
                "enum": [
                  "level-1",
                  "level-2",
                  "level-1-2"
                ]
              },
              "settings": {
                "description": "Enable/Disable incremental SPF",
                "oneOf": [
                  {
                    "title": "unset",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset packet formats"
                  },
                  {
                    "const": "narrow",
                    "description": "Old style of TLVs with narrow metric"
                  },
                  {
                    "const": "narrow transition",
                    "description": "Old style of TLVs with narrow metric. Accept both styles of TLVs during transition"
                  },
                  {
                    "const": "wide",
                    "description": "Use new style of TLVs to carry wider metric"
                  },
                  {
                    "const": "wide transition",
                    "description": "Use new style of TLVs to carry wider metric. Accept both styles of TLVs during transition"
                  },
                  {
                    "const": "transition",
                    "description": "Send and accept both styles of TLVs during transition"
                  }
                ]
              }
            }
          },
          "mpls_traffic_eng": {
            "description": "MPLS Traffic Engineering (MPLS TE)",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "level_1": {
                "type": "boolean",
                "description": "For level-1"
              },
              "level_2": {
                "type": "boolean",
                "description": "For level-2"
              },
              "router_id": {
                "description": "Configure traffic engineering IP address for system",
                "oneOf": [
                  {
                    "title": "unset",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset traffic engineering IP address for system"
                  },
                  {
                    "title": "set",
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "IS-IS router-ID in an IP address format"
                  }
                ]
              }
            }
          },
          "protocol_topology": {
            "description": "Enable/Disable IS-IS Protocol Topology Support",
            "type": "boolean"
          },
          "capability_cspf": {
            "description": "Enable/Disable Constrained Shortest Path First",
            "type": "boolean"
          }
        }
      },
      "isis_settings_r": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vrf",
          "isis_tag",
          "area_password",
          "domain_password",
          "authentication",
          "bfd",
          "capability_cspf",
          "default_information_originate",
          "lsp",
          "dynamic_hostname",
          "timers",
          "max_area_address",
          "spf_interval_exp",
          "prc_interval_exp",
          "metric_style",
          "mpls_traffic_eng",
          "protocol_topology"
        ],
        "properties": {
          "isis_tag": {
            "description": "IS-IS router instance name",
            "oneOf": [
              {
                "title": "tag",
                "description": "IS-IS tag",
                "$ref": "#/components/schemas/STRING"
              },
              {
                "title": "default",
                "description": "default instance",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "vrf": {
            "description": "VRF name",
            "$ref": "#/components/schemas/VRF"
          },
          "authentication": {
            "description": "Authentication control",
            "type": "object",
            "required": [
              "level_1",
              "level_2",
              "send_only"
            ],
            "level_1": {
              "oneOf": [
                {
                  "title": "disable",
                  "$ref": "#/components/schemas/null"
                },
                {
                  "title": "enable",
                  "description": "Authentication settings",
                  "type": "object",
                  "required": [
                    "mode",
                    "key_chane"
                  ],
                  "mode": {
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "md5",
                        "description": "MD5 digest"
                      },
                      {
                        "type": "string",
                        "const": "text",
                        "description": "Clear text authentication"
                      }
                    ]
                  },
                  "key_chain": {
                    "oneOf": [
                      {
                        "title": "set",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                        "description": "Name of the key chain"
                      },
                      {
                        "title": "unset",
                        "$ref": "#/components/schemas/null",
                        "description": "Clear text authentication"
                      }
                    ]
                  }
                }
              ]
            },
            "level_2": {
              "oneOf": [
                {
                  "title": "disable",
                  "$ref": "#/components/schemas/null"
                },
                {
                  "title": "enable",
                  "description": "Authentication settings",
                  "type": "object",
                  "required": [
                    "mode",
                    "key_chane"
                  ],
                  "mode": {
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "md5",
                        "description": "MD5 digest"
                      },
                      {
                        "type": "string",
                        "const": "text",
                        "description": "Clear text authentication"
                      }
                    ]
                  },
                  "key_chain": {
                    "oneOf": [
                      {
                        "title": "set",
                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                        "description": "Name of the key chain"
                      },
                      {
                        "title": "unset",
                        "$ref": "#/components/schemas/null",
                        "description": "Clear text authentication"
                      }
                    ]
                  }
                }
              ]
            },
            "send_only": {
              "description": "Authentication send-only option",
              "oneOf": [
                {
                  "type": "string",
                  "const": "disable",
                  "description": "Revert authentication send-only option"
                },
                {
                  "type": "string",
                  "const": "level-1",
                  "description": "For level-1 PDUs"
                },
                {
                  "type": "string",
                  "const": "level-2",
                  "description": "For level-2 PDUs"
                },
                {
                  "type": "string",
                  "const": "level-1-2",
                  "description": "For level-1 and level-2 PDUs"
                }
              ]
            }
          },
          "bfd": {
            "description": "Enable/Disable BFD on all interfaces",
            "type": "boolean"
          },
          "area_password": {
            "description": "The authentication password for an area",
            "oneOf": [
              {
                "title": "set",
                "description": "The authentication password for an area",
                "type": "object",
                "required": [
                  "password",
                  "snp"
                ],
                "properties": {
                  "password": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Password string"
                  },
                  "snp": {
                    "description": "Insert the password into Level-1 SNP PDUs",
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "send-only",
                        "description": "Only insert the password into the Level-1 SNP PDUs, but not check the password in SNP PDUs that it receives. Use this keyword during a software upgrade to ease the transition"
                      },
                      {
                        "type": "string",
                        "const": "validate",
                        "description": "Insert the password into the Level-1 SNP PDUs and check the password in SNPs that it receives"
                      },
                      {
                        "title": "not set",
                        "description": "Not configured",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              },
              {
                "title": "not set",
                "description": "Not configured",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "domain_password": {
            "description": "The authentication password for a routing domain",
            "oneOf": [
              {
                "title": "set",
                "description": "The authentication password for a routing domain",
                "type": "object",
                "required": [
                  "password",
                  "snp"
                ],
                "properties": {
                  "password": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Password string"
                  },
                  "snp": {
                    "description": "Insert the password into Level-1 SNP PDUs",
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "send-only",
                        "description": "Only insert the password into the Level-1 SNP PDUs, but not check the password in SNP PDUs that it receives. Use this keyword during a software upgrade to ease the transition"
                      },
                      {
                        "type": "string",
                        "const": "validate",
                        "description": "Insert the password into the Level-1 SNP PDUs and check the password in SNPs that it receives"
                      },
                      {
                        "title": "not set",
                        "description": "Not configured",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              },
              {
                "title": "not set",
                "description": "Not configured",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "default_information_originate": {
            "type": "object",
            "description": "Distribute a default route",
            "additionalProperties": false,
            "required": [
              "route_map",
              "state"
            ],
            "properties": {
              "state": {
                "description": "Advertise default route",
                "type": "string",
                "enum": [
                  "enable",
                  "disable",
                  "always"
                ]
              },
              "route_map": {
                "description": "Route map reference",
                "oneOf": [
                  {
                    "title": "route-map",
                    "description": "Pointer to route-map entries",
                    "$ref": "#/components/schemas/STRING"
                  },
                  {
                    "title": "not set",
                    "description": "No route-map",
                    "$ref": "#/components/schemas/null"
                  }
                ]
              }
            }
          },
          "dynamic_hostname": {
            "description": "Configure the hostname to be advertised for an ISIS instance",
            "oneOf": [
              {
                "const": "enable",
                "type": "string",
                "description": "Enable dynamic hostname"
              },
              {
                "const": "area-tag",
                "type": "string",
                "description": "Enable dynamic hostname and use routing area tag as a hostname"
              },
              {
                "const": "disable",
                "type": "string",
                "description": "Disable dynamic hostname"
              }
            ]
          },
          "is_type": {
            "description": "IS Level for this routing process",
            "oneOf": [
              {
                "title": "set",
                "description": "IS level",
                "enum": [
                  "level-1",
                  "level-2-only",
                  "level-1-2"
                ]
              },
              {
                "title": "not set",
                "description": "default instance",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "lsp": {
            "description": "LSP settings",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "high_priority_tag",
              "set_overload_bit",
              "gen_interval",
              "mtu",
              "refresh_interval",
              "max_lifetime",
              "ignore_errors"
            ],
            "properties": {
              "mtu": {
                "description": "LSP MTU",
                "required": [
                  "level_1",
                  "level_2"
                ],
                "additionalProperties": false,
                "properties": {
                  "level_1": {
                    "description": "MTU for level-1",
                    "$ref": "#/components/schemas/UINT_512_1492"
                  },
                  "level_2": {
                    "description": "MTU for level-2",
                    "$ref": "#/components/schemas/UINT_512_1492"
                  }
                }
              },
              "gen_interval": {
                "description": "Minimum interval between regenerating same LSP",
                "type": "object",
                "required": [
                  "level_1",
                  "level_2"
                ],
                "additionalProperties": false,
                "properties": {
                  "level_1": {
                    "description": "Interval for level-1",
                    "$ref": "#/components/schemas/UINT_1_120"
                  },
                  "level_2": {
                    "description": "Interval for level-2",
                    "$ref": "#/components/schemas/UINT_1_120"
                  }
                }
              },
              "refresh_interval": {
                "description": "LSP refresh interval",
                "$ref": "#/components/schemas/UINT_350_65535"
              },
              "max_lifetime": {
                "description": "Maximum LSP lifetime",
                "$ref": "#/components/schemas/UINT_350_65535"
              },
              "ignore_errors": {
                "description": "Ignore bad checksums in LSPs/Drop LSPs with bad checksums",
                "type": "boolean"
              },
              "high_priority_tag": {
                "description": "Tag value on IS-IS LSP",
                "oneOf": [
                  {
                    "title": "default",
                    "description": "Disable Tag value on IS-IS LSP",
                    "$ref": "#/components/schemas/null"
                  },
                  {
                    "title": "tag",
                    "description": "Tag value",
                    "$ref": "#/components/schemas/UINT_1_4294967295"
                  }
                ]
              },
              "set_overload_bit": {
                "description": "`overload-bit` in LSP",
                "oneOf": [
                  {
                    "title": "not set",
                    "$ref": "#/components/schemas/null",
                    "description": "Cleared `overload-bit` in LSP"
                  },
                  {
                    "title": "set",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "set",
                      "supress",
                      "on_startup"
                    ],
                    "properties": {
                      "set": {
                        "type": "boolean",
                        "const": true,
                        "description": "`overload-bit` in LSP"
                      },
                      "supress": {
                        "description": "Suppress specific types of IP prefixes",
                        "oneOf": [
                          {
                            "const": "external",
                            "description": "Redistribute external reachability (to prevent the IP prefixes learned from other protocols from being advertised)"
                          },
                          {
                            "const": "interlevel",
                            "description": "Redistribute interlevel reachability"
                          },
                          {
                            "const": "external_and_interlevel",
                            "description": "Redistribute external and interlevel reachability"
                          },
                          {
                            "title": "not set",
                            "description": "Not configured",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      },
                      "on_startup": {
                        "description": "Action on startup",
                        "oneOf": [
                          {
                            "title": "time",
                            "$ref": "#/components/schemas/UINT_5_86400",
                            "description": "Time in seconds to advertise one self as overloaded after reboot"
                          },
                          {
                            "const": "wait_for_bgp",
                            "description": "BGP determines when to unset the `overload-bit`"
                          },
                          {
                            "title": "not set",
                            "description": "Not configured",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "timers": {
            "description": "Set timers settings",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "wait_timer",
              "restart_timer"
            ],
            "properties": {
              "wait_timer": {
                "description": "Sets the `waiting-timer` for a level",
                "type": "object",
                "required": [
                  "level_1",
                  "level_2"
                ],
                "additionalProperties": false,
                "properties": {
                  "level_1": {
                    "description": "For level-1",
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Revert the `waiting-timer`"
                      },
                      {
                        "title": "timer",
                        "description": "Waiting Time in seconds",
                        "$ref": "#/components/schemas/UINT_1_65535"
                      }
                    ]
                  },
                  "level_2": {
                    "description": "For level-2",
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Revert the `waiting-timer`"
                      },
                      {
                        "title": "timer",
                        "description": "Waiting Time in seconds",
                        "$ref": "#/components/schemas/UINT_1_65535"
                      }
                    ]
                  }
                }
              },
              "restart_timer": {
                "description": "Set restart timer",
                "type": "object",
                "required": [
                  "level_1",
                  "level_2"
                ],
                "additionalProperties": false,
                "properties": {
                  "level_1": {
                    "description": "For level-1",
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Disable restart timer"
                      },
                      {
                        "title": "timer",
                        "description": "Restart timer in seconds",
                        "$ref": "#/components/schemas/UINT_5_65535"
                      }
                    ]
                  },
                  "level_2": {
                    "description": "For level-2",
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Disable restart timer"
                      },
                      {
                        "title": "timer",
                        "description": "Restart timer in seconds",
                        "$ref": "#/components/schemas/UINT_5_65535"
                      }
                    ]
                  }
                }
              }
            }
          },
          "ispf": {
            "description": "Incremental SPF for this routing process",
            "oneOf": [
              {
                "const": "level-1",
                "type": "string",
                "description": "Enable for level-1 only"
              },
              {
                "const": "level-2",
                "type": "string",
                "description": "Enable for level-2 only"
              },
              {
                "const": "level-1-2",
                "type": "string",
                "description": "Enable for level-1 and level-2"
              },
              {
                "title": "disable",
                "$ref": "#/components/schemas/null",
                "description": "Disable incremental SPF for this routing process"
              }
            ]
          },
          "max_area_address": {
            "description": "IS-IS maximum area address",
            "$ref": "#/components/schemas/UINT_3_254"
          },
          "spf_interval_exp": {
            "description": "Set exponential backoff delays between SPF calculations",
            "type": "object",
            "required": [
              "level_1",
              "level_2"
            ],
            "additionalProperties": false,
            "properties": {
              "level_1": {
                "description": "For level-1",
                "oneOf": [
                  {
                    "title": "not set",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset exponential backoff delays between SPF calculations"
                  },
                  {
                    "title": "set",
                    "type": "object",
                    "required": [
                      "min_delay",
                      "max_delay"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "min_delay": {
                        "$ref": "#/components/schemas/UINT_0_2147483647",
                        "description": "Minimum delay between receiving a change to the SPF calculation in milliseconds. The default SPF minimum hold-time interval value is 500 milliseconds"
                      },
                      "max_delay": {
                        "$ref": "#/components/schemas/UINT_0_2147483647",
                        "description": "Maximum delay between receiving a change to the SPF calculation in milliseconds. The default SPF maximum hold-time interval value is 50 seconds"
                      }
                    }
                  }
                ]
              },
              "level_2": {
                "description": "For level-2",
                "oneOf": [
                  {
                    "title": "not set",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset exponential backoff delays between SPF calculations"
                  },
                  {
                    "title": "set",
                    "type": "object",
                    "required": [
                      "min_delay",
                      "max_delay"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "min_delay": {
                        "$ref": "#/components/schemas/UINT_0_2147483647",
                        "description": "Minimum delay between receiving a change to the SPF calculation in milliseconds. The default SPF minimum hold-time interval value is 500 milliseconds"
                      },
                      "max_delay": {
                        "$ref": "#/components/schemas/UINT_0_2147483647",
                        "description": "Maximum delay between receiving a change to the SPF calculation in milliseconds. The default SPF maximum hold-time interval value is 50 seconds"
                      }
                    }
                  }
                ]
              }
            }
          },
          "prc_interval_exp": {
            "description": "Set exponential backoff delays between PRC calculations",
            "oneOf": [
              {
                "title": "not set",
                "$ref": "#/components/schemas/null",
                "description": "Disable exponential backoff delays between PRC calculations"
              },
              {
                "title": "set",
                "type": "object",
                "description": "Exponential backoff delays",
                "required": [
                  "min_delay",
                  "max_delay"
                ],
                "additionalProperties": false,
                "properties": {
                  "min_delay": {
                    "$ref": "#/components/schemas/UINT_0_2147483647",
                    "description": "Minimum delay between receiving a change to PRC calculation in milliseconds"
                  },
                  "max_delay": {
                    "$ref": "#/components/schemas/UINT_0_2147483647",
                    "description": "Maximum delay between receiving a change to PRC calculation in milliseconds"
                  }
                }
              }
            ]
          },
          "metric_style": {
            "description": "Use old-style (ISO 10589) or new-style packet formats",
            "type": "object",
            "required": [
              "level_1",
              "level_2"
            ],
            "additionalProperties": false,
            "properties": {
              "level_1": {
                "description": "Packet formats for level-1",
                "oneOf": [
                  {
                    "const": "narrow",
                    "description": "Old style of TLVs with narrow metric"
                  },
                  {
                    "const": "narrow transition",
                    "description": "Old style of TLVs with narrow metric. Accept both styles of TLVs during transition"
                  },
                  {
                    "const": "wide",
                    "description": "Use new style of TLVs to carry wider metric"
                  },
                  {
                    "const": "wide transition",
                    "description": "Use new style of TLVs to carry wider metric. Accept both styles of TLVs during transition"
                  },
                  {
                    "const": "transition",
                    "description": "Send and accept both styles of TLVs during transition"
                  }
                ]
              },
              "level_2": {
                "description": "Packet formats for level-2",
                "oneOf": [
                  {
                    "const": "narrow",
                    "description": "Old style of TLVs with narrow metric"
                  },
                  {
                    "const": "narrow transition",
                    "description": "Old style of TLVs with narrow metric. Accept both styles of TLVs during transition"
                  },
                  {
                    "const": "wide",
                    "description": "Use new style of TLVs to carry wider metric"
                  },
                  {
                    "const": "wide transition",
                    "description": "Use new style of TLVs to carry wider metric. Accept both styles of TLVs during transition"
                  },
                  {
                    "const": "transition",
                    "description": "Send and accept both styles of TLVs during transition"
                  }
                ]
              }
            }
          },
          "mpls_traffic_eng": {
            "description": "MPLS Traffic Engineering (MPLS TE)",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "level_1",
              "level_2",
              "router_id"
            ],
            "properties": {
              "level_1": {
                "type": "boolean",
                "description": "For level-1"
              },
              "level_2": {
                "type": "boolean",
                "description": "For level-2"
              },
              "router_id": {
                "description": "Configure traffic engineering IP address for system",
                "oneOf": [
                  {
                    "title": "unset",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset traffic engineering IP address for system"
                  },
                  {
                    "title": "set",
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "IS-IS router-ID in an IP address format"
                  }
                ]
              }
            }
          },
          "protocol_topology": {
            "description": "Enable/Disable IS-IS Protocol Topology Support",
            "type": "boolean"
          },
          "capability_cspf": {
            "description": "Enable/Disable Constrained Shortest Path First",
            "type": "boolean"
          }
        }
      },
      "in_isis_status_write": {
        "title": "request write ISIS status",
        "description": "Enable/Disable `ISIS`",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add IS-IS router",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/isis_router",
                    "description": "IS-IS router instance name and optional VRF to add"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete IS-IS router",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "isis_tag"
                    ],
                    "properties": {
                      "isis_tag": {
                        "oneOf": [
                          {
                            "title": "non-default instance",
                            "description": "IS-IS router instance name to delete",
                            "$ref": "#/components/schemas/STRING"
                          },
                          {
                            "title": "default instance",
                            "description": "Delete default IS-IS instance",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_isis_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ISIS status",
        "description": "Result of reading ISIS status",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "isis_list"
            ],
            "properties": {
              "isis_list": {
                "type": "array",
                "description": "List of VRF",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "vrf",
                    "isis_tag"
                  ],
                  "properties": {
                    "vrf": {
                      "description": "VRF name",
                      "$ref": "#/components/schemas/VRF"
                    },
                    "isis_tag": {
                      "description": "IS-IS router instance name",
                      "oneOf": [
                        {
                          "title": "tag",
                          "description": "IS-IS router instance name",
                          "$ref": "#/components/schemas/STRING"
                        },
                        {
                          "title": "default",
                          "description": "Default `ISIS` instance ",
                          "$ref": "#/components/schemas/null"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_isis_config_write": {
        "title": "request write ISIS config",
        "description": "Set `ISIS` settings",
        "type": "object",
        "required": [
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "settings": {
            "description": "Set `ISIS` settings",
            "$ref": "#/components/schemas/isis_settings_w"
          }
        }
      },
      "out_isis_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ISIS configuration",
        "description": "Result of reading ISIS settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "type": "array",
                "description": "List of ISIS settings",
                "items": {
                  "$ref": "#/components/schemas/isis_settings_r"
                }
              }
            }
          }
        }
      },
      "in_isis_iface_config_write": {
        "title": "request write `IS-IS` interface config",
        "description": "Set `IS-IS` interface settings",
        "type": "object",
        "required": [
          "ifname",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "description": "Interface name",
            "$ref": "#/components/schemas/IFNAME"
          },
          "settings": {
            "description": "Set `IS-IS` interface settings",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "status": {
                "description": "Enable/Disable IS-IS",
                "type": "object",
                "required": [
                  "isis_tag",
                  "enable",
                  "ip_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/Disable IS-IS"
                  },
                  "ip_type": {
                    "description": "ipv4 or ipv6",
                    "type": "string",
                    "enum": [
                      "ipv4",
                      "ipv6"
                    ]
                  },
                  "isis_tag": {
                    "oneOf": [
                      {
                        "title": "tag",
                        "description": "IS-IS router instance name",
                        "$ref": "#/components/schemas/STRING"
                      },
                      {
                        "title": "default",
                        "description": "Default `ISIS` instance ",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              },
              "authentication": {
                "description": "Authentication control",
                "type": "object",
                "properties": {
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "oneOf": [
                          {
                            "title": "disable",
                            "$ref": "#/components/schemas/null"
                          },
                          {
                            "title": "enable",
                            "description": "Authentication settings",
                            "type": "object",
                            "required": [
                              "mode",
                              "key_chane"
                            ],
                            "properties": {
                              "mode": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "const": "md5",
                                    "description": "MD5 digest"
                                  },
                                  {
                                    "type": "string",
                                    "const": "text",
                                    "description": "Clear text authentication"
                                  }
                                ]
                              },
                              "key_chain": {
                                "oneOf": [
                                  {
                                    "title": "set",
                                    "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                                    "description": "Name of the key chain"
                                  },
                                  {
                                    "title": "unset",
                                    "$ref": "#/components/schemas/null",
                                    "description": "Clear text authentication"
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "send_only": {
                    "description": "Authentication send-only option",
                    "oneOf": [
                      {
                        "title": "disable",
                        "$ref": "#/components/schemas/null",
                        "description": "Revert authentication send-only option"
                      },
                      {
                        "type": "string",
                        "const": "level-1",
                        "description": "For level-1 PDUs"
                      },
                      {
                        "type": "string",
                        "const": "level-2",
                        "description": "For level-2 PDUs"
                      },
                      {
                        "type": "string",
                        "const": "level-1-2",
                        "description": "For level-1 and level-2 PDUs"
                      }
                    ]
                  }
                }
              },
              "bfd": {
                "description": "Manage Bidirectional Forwarding Detection (BFD)",
                "oneOf": [
                  {
                    "title": "unset",
                    "$ref": "#/components/schemas/null",
                    "description": "BFD feature is not configured"
                  },
                  {
                    "title": "set",
                    "type": "boolean",
                    "description": "BFD feature is configured"
                  }
                ]
              },
              "circuit_type": {
                "description": "Set circuit type for interface",
                "oneOf": [
                  {
                    "title": "default",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset circuit type for interface"
                  },
                  {
                    "const": "level-1",
                    "type": "string",
                    "description": "Specify that only Level-1 adjacencies are formed"
                  },
                  {
                    "const": "level-2-only",
                    "type": "string",
                    "description": "Specify that only Level-2 adjacencies are formed"
                  },
                  {
                    "const": "level-1-2",
                    "type": "string",
                    "description": "Specify that Level-1-2 adjacencies are formed"
                  }
                ]
              },
              "csnp_interval": {
                "description": "Set CSNP interval",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "oneOf": [
                          {
                            "title": "default",
                            "$ref": "#/components/schemas/null",
                            "description": "Revert CSNP interval"
                          },
                          {
                            "title": "CSNP interval",
                            "$ref": "#/components/schemas/UINT_1_65535",
                            "description": "CSNP interval"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "hello_packets": {
                "description": "`HELLO` packets settings",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "hello_padding": {
                    "description": "Enable/Disable padding `HELLO` packets",
                    "type": "boolean"
                  },
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "description": "Setting for level IIHs",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "hello_interval": {
                            "description": "Set `HELLO` interval",
                            "oneOf": [
                              {
                                "title": "default",
                                "$ref": "#/components/schemas/null",
                                "description": "Revert `HELLO` interval"
                              },
                              {
                                "const": "minimal",
                                "type": "string",
                                "description": "Holdtime 1 second"
                              },
                              {
                                "title": "interval",
                                "$ref": "#/components/schemas/UINT_1_65535",
                                "description": "`HELLO` interval value"
                              }
                            ]
                          },
                          "restart_hello_interval": {
                            "description": "Set restart `HELLO` interval in seconds",
                            "oneOf": [
                              {
                                "title": "default",
                                "$ref": "#/components/schemas/null",
                                "description": "Revert restart `HELLO` interval"
                              },
                              {
                                "title": "interval",
                                "$ref": "#/components/schemas/UINT_1_65535",
                                "description": "Restart `HELLO` interval value"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "lsp_interval": {
                "description": "Set LSP transmission interval",
                "oneOf": [
                  {
                    "title": "default",
                    "$ref": "#/components/schemas/null",
                    "description": "Revert LSP transmission interval"
                  },
                  {
                    "title": "interval",
                    "$ref": "#/components/schemas/UINT_1_4294967295",
                    "description": "LSP transmission interval in milliseconds"
                  }
                ]
              },
              "mesh_group": {
                "description": "Set IS-IS Mesh Group ID",
                "oneOf": [
                  {
                    "title": "default",
                    "$ref": "#/components/schemas/null",
                    "description": "Unset IS-IS Mesh Group ID"
                  },
                  {
                    "const": "blocked",
                    "type": "string",
                    "description": "Block LSPs on this interface"
                  },
                  {
                    "title": "group ID",
                    "$ref": "#/components/schemas/UINT_1_4294967295",
                    "description": "Mesh group ID"
                  }
                ]
              },
              "metric": {
                "description": "Configure the metric for interface",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "oneOf": [
                          {
                            "title": "default",
                            "$ref": "#/components/schemas/null",
                            "description": "Unset the metric for interface"
                          },
                          {
                            "title": "metric",
                            "$ref": "#/components/schemas/UINT_1_63",
                            "description": "Metric value"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "network": {
                "description": "Change IS-IS network type",
                "oneOf": [
                  {
                    "title": "default",
                    "$ref": "#/components/schemas/null",
                    "description": "Revert IS-IS network type"
                  },
                  {
                    "const": "broadcast",
                    "type": "string",
                    "description": "IS-IS broadcast multi-access network"
                  },
                  {
                    "const": "point-to-point",
                    "type": "string",
                    "description": "IS-IS point-to-point network"
                  }
                ]
              },
              "password": {
                "description": "Configure the authentication password for interface",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "oneOf": [
                          {
                            "title": "default",
                            "$ref": "#/components/schemas/null",
                            "description": "Disable the authentication password for interface"
                          },
                          {
                            "title": "password",
                            "$ref": "#/components/schemas/STRING",
                            "description": "Password string"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "priority": {
                "description": "Set priority for Designated Router election",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "oneOf": [
                          {
                            "title": "default",
                            "$ref": "#/components/schemas/null",
                            "description": "Clear priority for Designated Router election"
                          },
                          {
                            "title": "priority",
                            "$ref": "#/components/schemas/UINT_0_127",
                            "description": "Priority value"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "retransmit_interval": {
                "description": "Set per-LSP retransmission interval",
                "oneOf": [
                  {
                    "title": "set",
                    "$ref": "#/components/schemas/UINT_1_65535",
                    "description": "Interval for retransmission of the same LSP in seconds"
                  },
                  {
                    "title": "unset",
                    "$ref": "#/components/schemas/null",
                    "description": "Revert per-LSP retransmission interval"
                  }
                ]
              },
              "priority_tag": {
                "description": "Set the Tag value on IS-IS LSP",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "oneOf": [
                          {
                            "title": "default",
                            "$ref": "#/components/schemas/null",
                            "description": "Unset the Tag value on IS-IS LSP"
                          },
                          {
                            "title": "tag",
                            "$ref": "#/components/schemas/UINT_1_4294967295",
                            "description": "Tag value"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "wide_metric": {
                "description": "Configure the wide metric for interface",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "level_settings": {
                    "description": "Set settings for level",
                    "type": "object",
                    "required": [
                      "level",
                      "settings"
                    ],
                    "properties": {
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "settings": {
                        "oneOf": [
                          {
                            "title": "default",
                            "$ref": "#/components/schemas/null",
                            "description": "Unset the wide-metric for interface"
                          },
                          {
                            "title": "metric",
                            "$ref": "#/components/schemas/UINT_1_16777214",
                            "description": "`wide` metric"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_isis_iface_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `IS-IS` interface configuration",
        "description": "Result of reading `IS-IS` interface settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ifname",
              "settings"
            ],
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "description": "Interface name",
                "$ref": "#/components/schemas/IFNAME"
              },
              "settings": {
                "description": "`IS-IS` interface settings",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "status",
                  "authentication",
                  "bfd",
                  "circuit_type",
                  "csnp_interval",
                  "hello_packets",
                  "lsp_interval",
                  "mesh_group",
                  "metric",
                  "network",
                  "password",
                  "priority",
                  "retransmit_interval",
                  "priority_tag",
                  "wide_metric"
                ],
                "properties": {
                  "status": {
                    "oneOf": [
                      {
                        "title": "disable",
                        "$ref": "#/components/schemas/null"
                      },
                      {
                        "title": "enable",
                        "description": "Enabled IS-IS",
                        "type": "object",
                        "required": [
                          "isis_tag",
                          "ip_type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "ip_type": {
                            "description": "ipv4 or ipv6",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6",
                              "ipv4/ipv6"
                            ]
                          },
                          "isis_tag": {
                            "oneOf": [
                              {
                                "title": "tag",
                                "description": "IS-IS router instance name",
                                "$ref": "#/components/schemas/STRING"
                              },
                              {
                                "title": "default",
                                "description": "Default `ISIS` instance ",
                                "$ref": "#/components/schemas/null"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "authentication": {
                    "description": "Authentication control",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "level_settings": {
                        "description": "Set settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "level_1": {
                            "oneOf": [
                              {
                                "title": "disable",
                                "$ref": "#/components/schemas/null"
                              },
                              {
                                "title": "enable",
                                "description": "Authentication settings",
                                "type": "object",
                                "required": [
                                  "mode",
                                  "key_chane"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "mode": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "const": "md5",
                                        "description": "MD5 digest"
                                      },
                                      {
                                        "type": "string",
                                        "const": "text",
                                        "description": "Clear text authentication"
                                      }
                                    ]
                                  },
                                  "key_chain": {
                                    "oneOf": [
                                      {
                                        "title": "set",
                                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                                        "description": "Name of the key chain"
                                      },
                                      {
                                        "title": "unset",
                                        "$ref": "#/components/schemas/null",
                                        "description": "Clear text authentication"
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "level_2": {
                            "oneOf": [
                              {
                                "title": "disable",
                                "$ref": "#/components/schemas/null"
                              },
                              {
                                "title": "enable",
                                "description": "Authentication settings",
                                "type": "object",
                                "required": [
                                  "mode",
                                  "key_chane"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "mode": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "const": "md5",
                                        "description": "MD5 digest"
                                      },
                                      {
                                        "type": "string",
                                        "const": "text",
                                        "description": "Clear text authentication"
                                      }
                                    ]
                                  },
                                  "key_chain": {
                                    "oneOf": [
                                      {
                                        "title": "set",
                                        "$ref": "#/components/schemas/STRING_ALL_SYMBOLS",
                                        "description": "Name of the key chain"
                                      },
                                      {
                                        "title": "unset",
                                        "$ref": "#/components/schemas/null",
                                        "description": "Clear text authentication"
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "send_only": {
                        "description": "Authentication send-only option",
                        "oneOf": [
                          {
                            "title": "disable",
                            "$ref": "#/components/schemas/null",
                            "description": "Revert authentication send-only option"
                          },
                          {
                            "type": "string",
                            "const": "level-1",
                            "description": "For level-1 PDUs"
                          },
                          {
                            "type": "string",
                            "const": "level-2",
                            "description": "For level-2 PDUs"
                          },
                          {
                            "type": "string",
                            "const": "level-1-2",
                            "description": "For level-1 and level-2 PDUs"
                          }
                        ]
                      }
                    }
                  },
                  "bfd": {
                    "description": "Manage Bidirectional Forwarding Detection (BFD)",
                    "oneOf": [
                      {
                        "title": "unset",
                        "$ref": "#/components/schemas/null",
                        "description": "BFD feature is not configured"
                      },
                      {
                        "title": "set",
                        "type": "boolean",
                        "description": "BFD feature is configured"
                      }
                    ]
                  },
                  "circuit_type": {
                    "description": "Circuit type for interface",
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Unset circuit type for interface"
                      },
                      {
                        "const": "level-1",
                        "type": "string",
                        "description": "Specify that only Level-1 adjacencies are formed"
                      },
                      {
                        "const": "level-2-only",
                        "type": "string",
                        "description": "Specify that only Level-2 adjacencies are formed"
                      },
                      {
                        "const": "level-1-2",
                        "type": "string",
                        "description": "Specify that Level-1-2 adjacencies are formed"
                      }
                    ]
                  },
                  "csnp_interval": {
                    "description": "CSNP interval",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "level_settings": {
                        "description": "Settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "properties": {
                          "level_1": {
                            "$ref": "#/components/schemas/UINT_1_65535",
                            "description": "CSNP interval"
                          },
                          "level_2": {
                            "$ref": "#/components/schemas/UINT_1_65535",
                            "description": "CSNP interval"
                          }
                        }
                      }
                    }
                  },
                  "hello_packets": {
                    "description": "`HELLO` packets settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "hello_padding": {
                        "description": "Enable/Disable padding `HELLO` packets",
                        "type": "boolean"
                      },
                      "level_settings": {
                        "description": "Settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "properties": {
                          "level_1": {
                            "description": "Setting for level IIHs",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "hello_interval",
                              "restart_hello_interval"
                            ],
                            "properties": {
                              "hello_interval": {
                                "description": "`HELLO` interval",
                                "oneOf": [
                                  {
                                    "const": "minimal",
                                    "type": "string",
                                    "description": "Holdtime 1 second"
                                  },
                                  {
                                    "title": "interval",
                                    "$ref": "#/components/schemas/UINT_1_65535",
                                    "description": "`HELLO` interval value"
                                  }
                                ]
                              },
                              "restart_hello_interval": {
                                "description": "Restart `HELLO` interval in seconds",
                                "$ref": "#/components/schemas/UINT_1_65535"
                              }
                            }
                          },
                          "level_2": {
                            "description": "Setting for level IIHs",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "hello_interval",
                              "restart_hello_interval"
                            ],
                            "properties": {
                              "hello_interval": {
                                "description": "`HELLO` interval",
                                "oneOf": [
                                  {
                                    "const": "minimal",
                                    "type": "string",
                                    "description": "Holdtime 1 second"
                                  },
                                  {
                                    "title": "interval",
                                    "$ref": "#/components/schemas/UINT_1_65535",
                                    "description": "`HELLO` interval value"
                                  }
                                ]
                              },
                              "restart_hello_interval": {
                                "description": "Restart `HELLO` interval in seconds",
                                "$ref": "#/components/schemas/UINT_1_65535"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "lsp_interval": {
                    "description": "LSP transmission interval",
                    "$ref": "#/components/schemas/UINT_1_4294967295"
                  },
                  "mesh_group": {
                    "description": "Set IS-IS Mesh Group ID",
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Unset IS-IS Mesh Group ID"
                      },
                      {
                        "const": "blocked",
                        "type": "string",
                        "description": "Block LSPs on this interface"
                      },
                      {
                        "title": "group ID",
                        "$ref": "#/components/schemas/UINT_1_4294967295",
                        "description": "Mesh group ID"
                      }
                    ]
                  },
                  "metric": {
                    "description": "Configure the metric for interface",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "level_settings": {
                        "description": "Set settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "properties": {
                          "level_1": {
                            "$ref": "#/components/schemas/UINT_1_63",
                            "description": "Metric value"
                          },
                          "level_2": {
                            "$ref": "#/components/schemas/UINT_1_63",
                            "description": "Metric value"
                          }
                        }
                      }
                    }
                  },
                  "network": {
                    "description": "IS-IS network type",
                    "oneOf": [
                      {
                        "title": "default",
                        "$ref": "#/components/schemas/null",
                        "description": "Revert IS-IS network type"
                      },
                      {
                        "const": "broadcast",
                        "type": "string",
                        "description": "IS-IS broadcast multi-access network"
                      },
                      {
                        "const": "point-to-point",
                        "type": "string",
                        "description": "IS-IS point-to-point network"
                      }
                    ]
                  },
                  "password": {
                    "description": "Configure the authentication password for interface",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "level_settings": {
                        "description": "Settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "properties": {
                          "level_1": {
                            "oneOf": [
                              {
                                "title": "default",
                                "$ref": "#/components/schemas/null",
                                "description": "Disable the authentication password for interface"
                              },
                              {
                                "title": "password",
                                "$ref": "#/components/schemas/STRING",
                                "description": "Password string"
                              }
                            ]
                          },
                          "level_2": {
                            "oneOf": [
                              {
                                "title": "default",
                                "$ref": "#/components/schemas/null",
                                "description": "Disable the authentication password for interface"
                              },
                              {
                                "title": "password",
                                "$ref": "#/components/schemas/STRING",
                                "description": "Password string"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "priority": {
                    "description": "Set priority for Designated Router election",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "level_settings": {
                        "description": "Set settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "properties": {
                          "level_1": {
                            "$ref": "#/components/schemas/UINT_0_127",
                            "description": "Priority value"
                          },
                          "level_2": {
                            "$ref": "#/components/schemas/UINT_0_127",
                            "description": "Priority value"
                          }
                        }
                      }
                    }
                  },
                  "retransmit_interval": {
                    "description": "Per-LSP retransmission interval",
                    "oneOf": [
                      {
                        "title": "set",
                        "$ref": "#/components/schemas/UINT_1_65535",
                        "description": "Interval for retransmission of the same LSP in seconds"
                      },
                      {
                        "title": "unset",
                        "$ref": "#/components/schemas/null",
                        "description": "Revert per-LSP retransmission interval"
                      }
                    ]
                  },
                  "priority_tag": {
                    "description": "Set the Tag value on IS-IS LSP",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "level_settings": {
                        "description": "Set settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "properties": {
                          "level_1": {
                            "oneOf": [
                              {
                                "title": "set",
                                "$ref": "#/components/schemas/UINT_1_4294967295",
                                "description": "Priority tag value"
                              },
                              {
                                "title": "unset",
                                "$ref": "#/components/schemas/null",
                                "description": "No priority tag"
                              }
                            ]
                          },
                          "level_2": {
                            "oneOf": [
                              {
                                "title": "set",
                                "$ref": "#/components/schemas/UINT_1_4294967295",
                                "description": "Priority tag value"
                              },
                              {
                                "title": "unset",
                                "$ref": "#/components/schemas/null",
                                "description": "No priority tag"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "wide_metric": {
                    "description": "Configure the wide metric for interface",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "level_settings": {
                        "description": "Settings for level",
                        "type": "object",
                        "required": [
                          "level_1",
                          "level_2"
                        ],
                        "properties": {
                          "level_1": {
                            "$ref": "#/components/schemas/UINT_1_16777214",
                            "description": "`wide` metric"
                          },
                          "level_2": {
                            "$ref": "#/components/schemas/UINT_1_16777214",
                            "description": "`wide` metric"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_isis_af_reset_write": {
        "title": "request write Address family IPv6 status",
        "description": "Remove Address Family configuration for IPv6",
        "type": "object",
        "required": [
          "isis_tag"
        ],
        "additionalProperties": false,
        "properties": {
          "isis_tag": {
            "oneOf": [
              {
                "title": "non-default instance",
                "description": "IS-IS router instance name to delete",
                "$ref": "#/components/schemas/STRING"
              },
              {
                "title": "default instance",
                "description": "Delete default IS-IS instance",
                "$ref": "#/components/schemas/null"
              }
            ]
          }
        }
      },
      "in_isis_af_config_write": {
        "title": "request write `IPv6 Address Family` config",
        "description": "Set `IPv6 Address Family` settings",
        "type": "object",
        "required": [
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "settings": {
            "type": "object",
            "description": "Set `IPv6 Address Family` settings",
            "required": [
              "isis_tag"
            ],
            "properties": {
              "isis_tag": {
                "description": "IS-IS router instance name",
                "oneOf": [
                  {
                    "title": "tag",
                    "description": "IS-IS tag",
                    "$ref": "#/components/schemas/STRING"
                  },
                  {
                    "title": "default",
                    "description": "default instance",
                    "$ref": "#/components/schemas/null"
                  }
                ]
              },
              "adjacency_check": {
                "type": "boolean",
                "descrption": "Enable/Disable checking the IS-IS neighbor protocol support"
              },
              "default_information_originate": {
                "type": "boolean",
                "description": "Distribute/Disable a default route"
              },
              "distance": {
                "description": "Set/Remove IS-IS Administrative Distance",
                "oneOf": [
                  {
                    "title": "set",
                    "description": "Distance",
                    "$ref": "#/components/schemas/UINT_1_255"
                  },
                  {
                    "title": "remove",
                    "description": "Remove IS-IS Administrative distance",
                    "$ref": "#/components/schemas/null"
                  }
                ]
              },
              "summary_prefix": {
                "description": "Configure IPv6 summary prefix",
                "oneOf": [
                  {
                    "title": "set",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "action",
                      "ipv6_with_bit_prefix",
                      "level",
                      "metric"
                    ],
                    "properties": {
                      "action": {
                        "const": "add",
                        "description": "Set prefix"
                      },
                      "ipv6_with_bit_prefix": {
                        "description": "IPv6 prefix",
                        "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
                      },
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "metric": {
                        "description": "Metric for the summarized address",
                        "oneOf": [
                          {
                            "title": "set",
                            "description": "Metric value",
                            "$ref": "#/components/schemas/UINT_1_63"
                          },
                          {
                            "title": "default",
                            "description": "The default is 0",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "title": "delete",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "action",
                      "ipv6_with_bit_prefix"
                    ],
                    "properties": {
                      "action": {
                        "const": "delete",
                        "description": "Remove prefix"
                      },
                      "ipv6_with_bit_prefix": {
                        "description": "IPv6 prefix",
                        "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
                      }
                    }
                  }
                ]
              },
              "multi_topology": {
                "description": "Enable/Disable multi-topology mode",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "enable",
                  "level"
                ],
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/Disable multi-topology"
                  },
                  "level": {
                    "type": "string",
                    "enum": [
                      "level-1",
                      "level-2",
                      "level-1-2"
                    ]
                  },
                  "transition": {
                    "type": "boolean",
                    "const": true,
                    "description": "Allow to use single-topology mode while upgrading to multitopology mode"
                  }
                }
              },
              "redistribute": {
                "type": "object",
                "description": "Redistribute information between IS-IS levels",
                "additionalProperties": false,
                "properties": {
                  "l1_into_l2": {
                    "type": "boolean",
                    "description": "Enable/Disable redistribution form level-1 into level-2"
                  },
                  "l2_into_l1": {
                    "type": "boolean",
                    "description": "Enable/Disable redistribution form level-2 into level-1"
                  }
                }
              }
            }
          }
        }
      },
      "out_isis_af_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read `IPv6 Address Family` configuration",
        "description": "Result of reading `IPv6 Address Family` settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "type": "object",
                "description": "Get `IPv6 Address Family` settings",
                "required": [
                  "isis_tag",
                  "adjacency_check",
                  "default_information_originate",
                  "distance",
                  "summary_prefix",
                  "multi_topology",
                  "redistribute"
                ],
                "properties": {
                  "isis_tag": {
                    "description": "IS-IS router instance name",
                    "oneOf": [
                      {
                        "title": "tag",
                        "description": "IS-IS tag",
                        "$ref": "#/components/schemas/STRING"
                      },
                      {
                        "title": "default",
                        "description": "default instance",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  },
                  "adjacency_check": {
                    "type": "boolean",
                    "descrption": "Enable/Disable checking the IS-IS neighbor protocol support"
                  },
                  "default_information_originate": {
                    "type": "boolean",
                    "description": "Distribute/Disable a default route"
                  },
                  "distance": {
                    "description": "IS-IS Administrative Distance",
                    "$ref": "#/components/schemas/UINT_1_255"
                  },
                  "summary_prefix": {
                    "description": "Configure IPv6 summary prefix",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "ipv6_with_bit_prefix",
                        "level",
                        "metric"
                      ],
                      "properties": {
                        "ipv6_with_bit_prefix": {
                          "description": "IPv6 prefix",
                          "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
                        },
                        "level": {
                          "type": "string",
                          "enum": [
                            "level-1",
                            "level-2",
                            "level-1-2"
                          ]
                        },
                        "metric": {
                          "description": "Metric for the summarized address",
                          "$ref": "#/components/schemas/UINT6"
                        }
                      }
                    }
                  },
                  "multi_topology": {
                    "description": "Enable/Disable multi-topology mode",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "level_1",
                      "level_2"
                    ],
                    "properties": {
                      "level_1": {
                        "type": "object",
                        "description": "For level-1",
                        "additionalProperties": false,
                        "required": [
                          "enable",
                          "transition"
                        ],
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable/Disable multi-topology for level-1"
                          },
                          "transition": {
                            "type": "boolean",
                            "description": "Allow to use single-topology mode while upgrading to multitopology mode"
                          }
                        }
                      },
                      "level_2": {
                        "type": "object",
                        "description": "For level-2",
                        "additionalProperties": false,
                        "required": [
                          "enable",
                          "transition"
                        ],
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable/Disable multi-topology for level-2"
                          },
                          "transition": {
                            "type": "boolean",
                            "description": "Allow to use single-topology mode while upgrading to multitopology mode"
                          }
                        }
                      }
                    }
                  },
                  "redistribute": {
                    "type": "object",
                    "description": "Redistribute information between IS-IS levels",
                    "additionalProperties": false,
                    "required": [
                      "l1_into_l2",
                      "l2_into_l1"
                    ],
                    "properties": {
                      "l1_into_l2": {
                        "type": "boolean",
                        "description": "Enable/Disable redistribution form level-1 into level-2"
                      },
                      "l2_into_l1": {
                        "type": "boolean",
                        "description": "Enable/Disable redistribution form level-2 into level-1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_isis_distance_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read IS-IS Administrative Distance",
        "description": "Result of reading S-IS Administrative Distance",
        "properties": {
          "result": {
            "description": "List of IS-IS Administrative Distance",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "distance_value",
                "system_id"
              ],
              "properties": {
                "distance_value": {
                  "description": "Administrative distance value",
                  "$ref": "#/components/schemas/UINT_1_255"
                },
                "system_id": {
                  "description": "System ID",
                  "oneOf": [
                    {
                      "title": "system_id",
                      "description": "System ID in XXXX.XXXX.XXXX format",
                      "$ref": "#/components/schemas/STRING"
                    },
                    {
                      "title": "not set",
                      "description": "No system_id",
                      "$ref": "#/components/schemas/null"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "in_isis_distance_write": {
        "title": "Administrative Distance",
        "description": "Set IS-IS Administrative Distance",
        "additionalProperties": false,
        "required": [
          "action"
        ],
        "properties": {
          "isis_tag": {
            "description": "IS-IS router instance name.  If missing - default instance",
            "$ref": "#/components/schemas/STRING"
          },
          "action": {
            "description": "Set/Unset IS-IS Administrative Distance",
            "oneOf": [
              {
                "title": "add",
                "type": "object",
                "required": [
                  "add"
                ],
                "properties": {
                  "add": {
                    "description": "Set IS-IS Administrative Distance",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "distance"
                    ],
                    "properties": {
                      "distance": {
                        "description": "Distance",
                        "$ref": "#/components/schemas/UINT_1_255"
                      },
                      "system_id": {
                        "description": "System ID in XXXX.XXXX.XXXX format",
                        "$ref": "#/components/schemas/STRING"
                      }
                    }
                  }
                }
              },
              {
                "title": "delete",
                "type": "object",
                "required": [
                  "delete"
                ],
                "properties": {
                  "delete": {
                    "description": "Remove IS-IS Administrative Distance",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "system_id": {
                        "description": "System ID in XXXX.XXXX.XXXX format",
                        "$ref": "#/components/schemas/STRING"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_isis_summary_addr_write": {
        "title": "IP address summaries",
        "description": "Configure IP address summaries",
        "additionalProperties": false,
        "required": [
          "action"
        ],
        "properties": {
          "isis_tag": {
            "description": "IS-IS router instance name.  If missing - default instance",
            "$ref": "#/components/schemas/STRING"
          },
          "action": {
            "oneOf": [
              {
                "title": "add",
                "type": "object",
                "description": "Add IP address summaries",
                "additionalProperties": false,
                "required": [
                  "add"
                ],
                "properties": {
                  "add": {
                    "type": "object",
                    "description": "Add IP address summaries",
                    "additionalProperties": false,
                    "required": [
                      "ipv4_prefix",
                      "level",
                      "metric"
                    ],
                    "properties": {
                      "ipv4_prefix": {
                        "description": "IPv4 prefix to be announced",
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                      },
                      "level": {
                        "type": "string",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-1-2"
                        ]
                      },
                      "metric": {
                        "description": "Metric for the summarized address",
                        "$ref": "#/components/schemas/UINT_1_63"
                      }
                    }
                  }
                }
              },
              {
                "title": "delete",
                "type": "object",
                "description": "Remove IP address summaries",
                "additionalProperties": false,
                "required": [
                  "delete"
                ],
                "properties": {
                  "delete": {
                    "type": "object",
                    "description": "Remove IP address summaries",
                    "additionalProperties": false,
                    "required": [
                      "ipv4_prefix"
                    ],
                    "properties": {
                      "ipv4_prefix": {
                        "description": "IPv4 prefix to be announced",
                        "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_isis_summary_addr_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ISIS summary-address",
        "description": "Result of reading ISIS summary-address list",
        "properties": {
          "result": {
            "type": "array",
            "description": "List of ISIS summary-addresses",
            "items": {
              "description": "P address summaries",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "ipv4_prefix",
                "level",
                "metric"
              ],
              "properties": {
                "ipv4_prefix": {
                  "description": "IPv4 prefix to be announced",
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                },
                "level": {
                  "type": "string",
                  "enum": [
                    "level-1",
                    "level-2",
                    "level-1-2"
                  ]
                },
                "metric": {
                  "description": "Metric for the summarized address",
                  "$ref": "#/components/schemas/UINT_1_63"
                }
              }
            }
          }
        }
      },
      "in_isis_redistribute_write": {
        "title": "Redistribute",
        "description": "Redistribute information from another routing protocol",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "redistribute_type"
        ],
        "properties": {
          "isis_tag": {
            "description": "IS-IS router instance name",
            "oneOf": [
              {
                "title": "tag",
                "description": "IS-IS tag",
                "$ref": "#/components/schemas/STRING"
              },
              {
                "title": "default",
                "description": "default instance",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "redistribute_type": {
            "oneOf": [
              {
                "title": "isis",
                "description": "Redistribute information between IS-IS levels",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "l1_into_l2": {
                    "type": "boolean",
                    "description": "Enable/Disable redistribution form level-1 into level-2"
                  },
                  "l2_into_l1": {
                    "type": "boolean",
                    "description": "Enable/Disable redistribution form level-2 into level-1"
                  }
                }
              },
              {
                "title": "another protocol",
                "description": "Redistribute information from another routing protocol",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "action"
                ],
                "properties": {
                  "action": {
                    "oneOf": [
                      {
                        "title": "add",
                        "type": "object",
                        "description": "Redistribute information from another routing protocol",
                        "additionalProperties": false,
                        "required": [
                          "add"
                        ],
                        "properties": {
                          "add": {
                            "type": "object",
                            "description": "Redistribute information from another routing protocol",
                            "additionalProperties": false,
                            "required": [
                              "protocol"
                            ],
                            "properties": {
                              "protocol": {
                                "description": "Specify where the information is redistributed from",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "const": "kernel",
                                    "description": "Redistribute connected kernel routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "connected",
                                    "description": "Redistribute from connected routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "static",
                                    "description": "Redistribute connected static routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "ospf",
                                    "description": "Redistribute connected OSPFv3 routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "rip",
                                    "description": "Redistribute RIP routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "bgp",
                                    "description": "Redistribute connected BGP routes"
                                  }
                                ]
                              },
                              "level": {
                                "type": "string",
                                "enum": [
                                  "level-1",
                                  "level-2",
                                  "level-1-2"
                                ]
                              },
                              "route_map": {
                                "description": "Route map reference",
                                "$ref": "#/components/schemas/STRING"
                              },
                              "metric": {
                                "description": "Specify the metric for redistributed routes",
                                "$ref": "#/components/schemas/UINT_0_4261412864"
                              },
                              "metric_type": {
                                "description": "Specify the IS-IS exterior metric type for redistributed routes",
                                "enum": [
                                  "internal",
                                  "external"
                                ]
                              }
                            }
                          }
                        }
                      },
                      {
                        "title": "delete",
                        "type": "object",
                        "description": "Cancel redistribution the information from another routing protocol",
                        "additionalProperties": false,
                        "required": [
                          "delete"
                        ],
                        "properties": {
                          "delete": {
                            "type": "object",
                            "description": "Cancel redistribution the information from another routing protocol",
                            "additionalProperties": false,
                            "required": [
                              "protocol"
                            ],
                            "properties": {
                              "protocol": {
                                "description": "Specify where the information is redistributed from",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "const": "kernel",
                                    "description": "Redistribute connected kernel routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "connected",
                                    "description": "Redistribute from connected routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "static",
                                    "description": "Redistribute connected static routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "ospf",
                                    "description": "Redistribute connected OSPFv3 routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "rip",
                                    "description": "Redistribute RIP routes"
                                  },
                                  {
                                    "type": "string",
                                    "const": "bgp",
                                    "description": "Redistribute connected BGP routes"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "out_isis_redistribute_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ISIS redistribute information",
        "description": "Result of reading ISIS redistribute information",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "redistribute_isis",
              "redistribute_protocols"
            ],
            "description": "ISIS redistribute information",
            "additionalProperties": false,
            "properties": {
              "redistribute_isis": {
                "type": "object",
                "description": "Redistribute information between IS-IS levels",
                "additionalProperties": false,
                "required": [
                  "l1_into_l2",
                  "l2_into_l1"
                ],
                "properties": {
                  "l1_into_l2": {
                    "type": "boolean",
                    "description": "Enable/Disable redistribution form level-1 into level-2"
                  },
                  "l2_into_l1": {
                    "type": "boolean",
                    "description": "Enable/Disable redistribution form level-2 into level-1"
                  }
                }
              },
              "redistribute_protocols": {
                "type": "array",
                "description": "Redistribute information from another routing protocol",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "protocol",
                    "level",
                    "metric",
                    "metric_type",
                    "route_map"
                  ],
                  "properties": {
                    "protocol": {
                      "description": "Specify where the information is redistributed from",
                      "oneOf": [
                        {
                          "type": "string",
                          "const": "kernel",
                          "description": "Redistribute connected kernel routes"
                        },
                        {
                          "type": "string",
                          "const": "connected",
                          "description": "Redistribute from connected routes"
                        },
                        {
                          "type": "string",
                          "const": "static",
                          "description": "Redistribute connected static routes"
                        },
                        {
                          "type": "string",
                          "const": "ospf",
                          "description": "Redistribute connected OSPFv3 routes"
                        },
                        {
                          "type": "string",
                          "const": "rip",
                          "description": "Redistribute RIP routes"
                        },
                        {
                          "type": "string",
                          "const": "bgp",
                          "description": "Redistribute connected BGP routes"
                        }
                      ]
                    },
                    "level": {
                      "type": "string",
                      "enum": [
                        "level-1",
                        "level-2",
                        "level-1-2"
                      ]
                    },
                    "route_map": {
                      "description": "Route map reference",
                      "oneOf": [
                        {
                          "title": "route-map",
                          "description": "Pointer to route-map entries",
                          "$ref": "#/components/schemas/STRING"
                        },
                        {
                          "title": "not set",
                          "description": "No route-map",
                          "$ref": "#/components/schemas/null"
                        }
                      ]
                    },
                    "metric": {
                      "description": "Specify the metric for redistributed routes",
                      "$ref": "#/components/schemas/UINT_0_4261412864"
                    },
                    "metric_type": {
                      "description": "Specify the IS-IS exterior metric type for redistributed routes",
                      "enum": [
                        "internal",
                        "external"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_isis_clear_write": {
        "title": "Clear IS-IS",
        "description": "Clear IS-IS IPv4 routes, adjacency and processes",
        "oneOf": [
          {
            "title": "routes",
            "description": "Clear IS-IS routes",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "routes"
            ],
            "properties": {
              "routes": {
                "type": "object",
                "description": "Clear IS-IS routes",
                "required": [
                  "isis_tag",
                  "ip_type",
                  "route"
                ],
                "properties": {
                  "isis_tag": {
                    "description": "IS-IS router instance name",
                    "oneOf": [
                      {
                        "title": "tag",
                        "description": "IS-IS tag",
                        "$ref": "#/components/schemas/STRING"
                      },
                      {
                        "title": "default",
                        "description": "default instance",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  },
                  "ip_type": {
                    "description": "ipv4 or ipv6",
                    "type": "string",
                    "enum": [
                      "ipv4",
                      "ipv6"
                    ]
                  },
                  "route": {
                    "description": "Routing Table",
                    "oneOf": [
                      {
                        "const": "redistribution",
                        "description": "Clear IS-IS IP local redistribution routes"
                      },
                      {
                        "const": "all",
                        "description": "Clear all of the IS-IS routing table"
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "title": "adjacency",
            "description": "Reset `ISIS adjacency`",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "adjacency"
            ],
            "properties": {
              "adjacency": {
                "oneOf": [
                  {
                    "title": "interface",
                    "description": "Clear interface IS-IS counters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "isis_tag"
                    ],
                    "properties": {
                      "type": {
                        "const": "interface",
                        "type": "string",
                        "description": "Clear interface IS-IS counters"
                      },
                      "isis_tag": {
                        "description": "IS-IS router instance name",
                        "oneOf": [
                          {
                            "title": "tag",
                            "description": "IS-IS tag",
                            "$ref": "#/components/schemas/STRING"
                          },
                          {
                            "title": "default",
                            "description": "default instance",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      },
                      "ifname": {
                        "description": "Interface name",
                        "$ref": "#/components/schemas/IFNAME"
                      }
                    }
                  },
                  {
                    "title": "neighbors",
                    "description": "Clear ISIS adjacency for the System-ID",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "isis_tag"
                    ],
                    "properties": {
                      "type": {
                        "const": "neighbors",
                        "type": "string",
                        "description": "Clear ISIS adjacency for the System-ID"
                      },
                      "isis_tag": {
                        "description": "IS-IS router instance name",
                        "oneOf": [
                          {
                            "title": "tag",
                            "description": "IS-IS tag",
                            "$ref": "#/components/schemas/STRING"
                          },
                          {
                            "title": "default",
                            "description": "default instance",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      },
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name - missing if running on default VRF"
                      }
                    }
                  },
                  {
                    "title": "is-neighbors",
                    "description": "Clear IS neighbor adjacencies",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "isis_tag",
                      "system_id"
                    ],
                    "properties": {
                      "type": {
                        "const": "is_neighbors",
                        "type": "string",
                        "description": "Clear IS neighbor adjacencies"
                      },
                      "isis_tag": {
                        "description": "IS-IS router instance name",
                        "oneOf": [
                          {
                            "title": "tag",
                            "description": "IS-IS tag",
                            "$ref": "#/components/schemas/STRING"
                          },
                          {
                            "title": "default",
                            "description": "default instance",
                            "$ref": "#/components/schemas/null"
                          }
                        ]
                      },
                      "system_id": {
                        "description": "Neighbor System-ID in XXXX.XXXX.XXXX format",
                        "$ref": "#/components/schemas/SYSTEM_ID"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "title": "counter",
            "description": "Clear IS-IS counters",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "counter"
            ],
            "properties": {
              "counter": {
                "oneOf": [
                  {
                    "title": "system",
                    "description": "Clear system-wide IS-IS counters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "const": "system",
                        "type": "string",
                        "description": "Clear system-wide IS-IS counters"
                      }
                    }
                  },
                  {
                    "title": "interface",
                    "description": "Clear interface IS-IS counters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "const": "interface",
                        "type": "string",
                        "description": "Clear interface IS-IS counters"
                      },
                      "ifname": {
                        "description": "Interface name",
                        "$ref": "#/components/schemas/IFNAME"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "title": "process",
            "description": "Reset IS-IS process",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "process"
            ],
            "properties": {
              "process": {
                "description": "Reset IS-IS process",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "isis_tag"
                ],
                "properties": {
                  "isis_tag": {
                    "description": "IS-IS router instance name",
                    "oneOf": [
                      {
                        "title": "tag",
                        "description": "IS-IS tag",
                        "$ref": "#/components/schemas/STRING"
                      },
                      {
                        "title": "default",
                        "description": "default instance",
                        "$ref": "#/components/schemas/null"
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "in_isis_debug_write": {
        "title": "Debug IS-IS",
        "description": "Modify ISIS debugging features",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "features"
        ],
        "properties": {
          "features": {
            "type": "object",
            "description": "All or separate features",
            "oneOf": [
              {
                "title": "all features",
                "additionalProperties": false,
                "required": [
                  "all"
                ],
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Enable/Disable all debugging"
                  }
                }
              },
              {
                "title": "separate features",
                "required": [
                  "events",
                  "hello",
                  "authentication",
                  "nsm",
                  "rib",
                  "pdu",
                  "spf",
                  "nfsm",
                  "checksum",
                  "protocol_errors",
                  "bfd",
                  "mpls",
                  "local_updates",
                  "ifsm",
                  "lsp"
                ],
                "additionalProperties": false,
                "properties": {
                  "hello": {
                    "type": "object",
                    "description": "Debug IS-IS `HELLO`",
                    "oneOf": [
                      {
                        "title": "Interface",
                        "description": "Debug the `HELLO` on configured Interface",
                        "type": "object",
                        "required": [
                          "enable",
                          "ifname"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable/Disable debugging"
                          },
                          "ifname": {
                            "description": "Debug the `HELLO` on configured Interface or System-ID",
                            "$ref": "#/components/schemas/IFNAME"
                          }
                        }
                      },
                      {
                        "title": "system-id",
                        "description": "Debug the `HELLO` on configured Interface",
                        "type": "object",
                        "required": [
                          "enable",
                          "system_id"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable/Disable debugging"
                          },
                          "ifname": {
                            "description": "Debug the `HELLO` on System-ID",
                            "$ref": "#/components/schemas/SYSTEM_ID"
                          }
                        }
                      },
                      {
                        "title": "general",
                        "description": "Enable/Disable `HELLO` debugging ",
                        "type": "object",
                        "required": [
                          "enable"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Enable/Disable debugging"
                          }
                        }
                      }
                    ]
                  },
                  "authentication": {
                    "type": "boolean",
                    "description": "Debug IS-IS Authentication"
                  },
                  "nsm": {
                    "type": "boolean",
                    "description": "Debug IS-IS NSM messages"
                  },
                  "rib": {
                    "type": "boolean",
                    "description": "Debug IS-IS RIB information"
                  },
                  "events": {
                    "type": "boolean",
                    "description": "Debug IS-IS events"
                  },
                  "pdu": {
                    "type": "boolean",
                    "description": "Debug IS-IS Protocol Data Units (PDUs)"
                  },
                  "spf": {
                    "type": "boolean",
                    "description": "Debug IS-IS SPF Calculation"
                  },
                  "nfsm": {
                    "type": "boolean",
                    "description": "IS-IS Neighbor Finite State Machine"
                  },
                  "checksum": {
                    "type": "boolean",
                    "description": "Enable/Disable debugging for IS-IS checksums"
                  },
                  "protocol_errors": {
                    "type": "boolean",
                    "description": "Enable/Disable debugging for IS-IS Protocol Errors"
                  },
                  "bfd": {
                    "type": "boolean",
                    "description": "Enable/Disable debugging the Bidirectional Forwarding Detection (BFD)"
                  },
                  "mpls": {
                    "type": "boolean",
                    "description": "Enable/Disable debugging for Multi-Protocol Label Switching (MPLS)"
                  },
                  "local_updates": {
                    "type": "boolean",
                    "description": "Enable/Disable debugging for IS-IS Local Updates"
                  },
                  "ifsm": {
                    "type": "boolean",
                    "description": "Enable/Disable debugging for IS-IS Interface Finite State Machine"
                  },
                  "lsp": {
                    "type": "boolean",
                    "description": "Enable/Disable debugging for IS-IS Link State PDU"
                  }
                }
              }
            ]
          }
        }
      },
      "out_isis_debug_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read isis debugging feature",
        "description": "Result of reading ISIS debugging features",
        "properties": {
          "result": {
            "required": [
              "events",
              "hello",
              "authentication",
              "nsm",
              "rib",
              "pdu",
              "spf",
              "nfsm",
              "checksum",
              "protocol_errors",
              "bfd",
              "mpls",
              "local_updates",
              "ifsm",
              "lsp"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "hello": {
                "type": "boolean",
                "description": "Debug IS-IS `HELLO`"
              },
              "authentication": {
                "type": "boolean",
                "description": "Debug IS-IS Authentication"
              },
              "nsm": {
                "type": "boolean",
                "description": "Debug IS-IS NSM messages"
              },
              "rib": {
                "type": "boolean",
                "description": "Debug IS-IS RIB information"
              },
              "events": {
                "type": "boolean",
                "description": "Debug IS-IS events"
              },
              "pdu": {
                "type": "boolean",
                "description": "Debug IS-IS Protocol Data Units (PDUs)"
              },
              "spf": {
                "type": "boolean",
                "description": "Debug IS-IS SPF Calculation"
              },
              "nfsm": {
                "type": "boolean",
                "description": "IS-IS Neighbor Finite State Machine"
              },
              "checksum": {
                "type": "boolean",
                "description": "Enable/Disable debugging for IS-IS checksums"
              },
              "protocol_errors": {
                "type": "boolean",
                "description": "Enable/Disable debugging for IS-IS Protocol Errors"
              },
              "bfd": {
                "type": "boolean",
                "description": "Enable/Disable debugging the Bidirectional Forwarding Detection (BFD)"
              },
              "mpls": {
                "type": "boolean",
                "description": "Enable/Disable debugging for Multi-Protocol Label Switching (MPLS)"
              },
              "local_updates": {
                "type": "boolean",
                "description": "Enable/Disable debugging for IS-IS Local Updates"
              },
              "ifsm": {
                "type": "boolean",
                "description": "Enable/Disable debugging for IS-IS Interface Finite State Machine"
              },
              "lsp": {
                "type": "boolean",
                "description": "Enable/Disable debugging for IS-IS Link State PDU"
              }
            }
          }
        }
      },
      "in_isis_graceful_restart_write": {
        "title": "Graceful Restart of IS-IS router",
        "description": "Graceful Restart of IS-IS router",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "grace_period": {
            "description": "Specify a grace period in seconds",
            "$ref": "#/components/schemas/UINT_1_65535"
          }
        }
      },
      "in_isis_passive_interface_write": {
        "title": "request write ISIS passive interfaces",
        "description": "Suppress/Allow routing updates on an interface or on all interfaces",
        "type": "object",
        "required": [
          "action",
          "ifname"
        ],
        "additionalProperties": false,
        "properties": {
          "isis_tag": {
            "description": "IS-IS router instance name.  If missing - default instance",
            "$ref": "#/components/schemas/STRING"
          },
          "action": {
            "type": "string",
            "oneOf": [
              {
                "title": "passive",
                "description": "Add interfaces to passive mode",
                "const": "passive"
              },
              {
                "title": "non-passive",
                "description": "Remove interfaces from passive mode",
                "const": "non-passive"
              }
            ]
          },
          "ifname": {
            "description": "Interface name",
            "oneOf": [
              {
                "title": "interface",
                "description": "On an interface",
                "$ref": "#/components/schemas/IFNAME"
              },
              {
                "const": "all",
                "type": "string",
                "description": "On all interfaces"
              }
            ]
          }
        }
      },
      "out_isis_passive_interface_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read isis passive-interfaces",
        "description": "Result of reading ISIS passive-interfaces list",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "default_state",
              "interface_list"
            ],
            "additionalProperties": false,
            "properties": {
              "default_state": {
                "description": "Default mode for all interfaces (except for interfaces from the `interface_list`)",
                "enum": [
                  "passive",
                  "non-passive"
                ]
              },
              "interface_list": {
                "type": "array",
                "description": "List of ISIS passive/non-passive interfaces",
                "items": {
                  "description": "Interface name",
                  "$ref": "#/components/schemas/IFNAME"
                }
              }
            }
          }
        }
      },
      "out_isis_net_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ISIS NET",
        "description": "Result of reading ISIS NET list",
        "properties": {
          "result": {
            "type": "array",
            "description": "List of ISIS NETs",
            "items": {
              "description": "Network entity title (NET) in 1 to 13 octets (that is, XX.XXXX. ... .XXXX.XX)",
              "$ref": "#/components/schemas/WORD"
            }
          }
        }
      },
      "in_isis_net_write": {
        "title": "request write ISIS passive interfaces",
        "description": "Set/Remove Network Entity Title",
        "type": "object",
        "required": [
          "action",
          "net"
        ],
        "additionalProperties": false,
        "properties": {
          "isis_tag": {
            "description": "IS-IS router instance name.  If missing - default instance",
            "$ref": "#/components/schemas/STRING"
          },
          "action": {
            "type": "string",
            "oneOf": [
              {
                "title": "add",
                "description": "Set Network Entity Title",
                "const": "add"
              },
              {
                "title": "delete",
                "description": "Remove Network Entity Title for this process",
                "const": "delete"
              }
            ]
          },
          "net": {
            "description": "Network entity title (NET) in 1 to 13 octets (that is, XX.XXXX. ... .XXXX.XX)",
            "$ref": "#/components/schemas/WORD"
          }
        }
      },
      "out_isis_restart_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ISIS restart settings",
        "description": "Result of reading ISIS restart settings",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "grace_period",
              "helper",
              "suppress_adjacency"
            ],
            "additionalProperties": false,
            "properties": {
              "grace_period": {
                "description": "grace period",
                "oneOf": [
                  {
                    "title": "set",
                    "description": "Grace period",
                    "$ref": "#/components/schemas/UINT_1_65535"
                  },
                  {
                    "title": "unset",
                    "description": "Unset grace period",
                    "$ref": "#/components/schemas/null"
                  }
                ]
              },
              "helper": {
                "type": "boolean",
                "description": "Enable/Disable IS-IS Helper mode"
              },
              "suppress_adjacency": {
                "type": "boolean",
                "description": "Enable/Disable Suppress Adjacency on restart"
              }
            }
          }
        }
      },
      "in_isis_restart_write": {
        "title": "request write ISIS restart settings",
        "description": "Set ISIS restart settings",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "grace_period": {
            "description": "grace period",
            "oneOf": [
              {
                "title": "set",
                "description": "Set restart grace period",
                "$ref": "#/components/schemas/UINT_1_65535"
              },
              {
                "title": "unset",
                "description": "Unset grace period",
                "$ref": "#/components/schemas/null"
              }
            ]
          },
          "helper": {
            "type": "boolean",
            "description": "Enable/Disable IS-IS Helper mode"
          },
          "suppress_adjacency": {
            "type": "boolean",
            "description": "Enable/Disable Suppress Adjacency on restart"
          }
        }
      },
      "in_dns_client_write": {
        "title": "request write name server address",
        "description": "Add or delete name server address",
        "type": "object",
        "required": [
          "action",
          "ip_addr"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "add first",
              "add last",
              "delete"
            ],
            "description": "Action to be taken: add to the beginning or the end of list or deleting."
          },
          "ip_addr": {
            "oneOf": [
              {
                "title": "ipv4",
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "IPv4 address"
              },
              {
                "title": "ipv6",
                "$ref": "#/components/schemas/IPV6_ADDR",
                "description": "IPv6 address"
              }
            ]
          }
        }
      },
      "out_dns_client_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DNS client",
        "description": "Result of reading name server addresses",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of name server addresses",
            "items": {
              "type": "string",
              "description": "name server address"
            }
          }
        }
      },
      "common_dns_server_entry": {
        "type": "object",
        "description": "Entry for master zone",
        "unevaluatedProperties": false,
        "required": [
          "entry_name",
          "entry_params"
        ],
        "properties": {
          "entry_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Name of record"
          },
          "entry_params": {
            "oneOf": [
              {
                "type": "object",
                "title": "A",
                "description": "A-record",
                "unevaluatedProperties": false,
                "required": [
                  "entry_type",
                  "ip_address"
                ],
                "properties": {
                  "entry_type": {
                    "const": "a",
                    "description": "A-record"
                  },
                  "ip_address": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "IP address"
                  }
                }
              },
              {
                "type": "object",
                "title": "AAAA",
                "description": "AAAA-record",
                "unevaluatedProperties": false,
                "required": [
                  "entry_type",
                  "ip_address"
                ],
                "properties": {
                  "entry_type": {
                    "const": "aaaa",
                    "description": "AAAAA-record"
                  },
                  "ip_address": {
                    "$ref": "#/components/schemas/IPV6_ADDR",
                    "description": "IP address"
                  }
                }
              },
              {
                "type": "object",
                "title": "NS",
                "description": "NS-record",
                "unevaluatedProperties": false,
                "required": [
                  "entry_type"
                ],
                "properties": {
                  "entry_type": {
                    "const": "ns",
                    "description": "NS-record"
                  }
                }
              },
              {
                "type": "object",
                "title": "MX",
                "description": "MX-record",
                "unevaluatedProperties": false,
                "required": [
                  "entry_type",
                  "priority"
                ],
                "properties": {
                  "entry_type": {
                    "const": "mx",
                    "description": "MX-record"
                  },
                  "priority": {
                    "$ref": "#/components/schemas/UINT",
                    "description": "Priority value"
                  }
                }
              }
            ]
          }
        }
      },
      "in_dns_server_write": {
        "title": "request write DNS server",
        "description": "Configure DNS server",
        "type": "object",
        "required": [
          "allow_query",
          "allow_transfer",
          "listen_addresses",
          "listen_port",
          "recursion"
        ],
        "additionalProperties": false,
        "properties": {
          "allow_query": {
            "oneOf": [
              {
                "title": "any",
                "const": "any",
                "description": "Any IP networks"
              },
              {
                "title": "list",
                "type": "array",
                "description": "Array of network from which queries are permitted to DNS server",
                "items": {
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                  "description": "Network address"
                }
              }
            ]
          },
          "allow_transfer": {
            "oneOf": [
              {
                "title": "any",
                "const": "any",
                "description": "Any IP networks"
              },
              {
                "title": "list",
                "type": "array",
                "description": "Array of network which transfer are permitted",
                "items": {
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                  "description": "Network address"
                }
              }
            ]
          },
          "listen_addresses": {
            "oneOf": [
              {
                "title": "any",
                "const": "any",
                "description": "Any ip addresses"
              },
              {
                "title": "list",
                "type": "array",
                "description": "Array of listen addresses of DNS server",
                "items": {
                  "$ref": "#/components/schemas/IP_ADDR",
                  "description": "IP address"
                }
              }
            ]
          },
          "listen_port": {
            "$ref": "#/components/schemas/UINT_0_65535",
            "description": "Listen port for IPv4"
          },
          "recursion": {
            "type": "boolean",
            "description": "Recursion DNS queries"
          }
        }
      },
      "out_dns_server_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DNS server",
        "description": "Result of reading DNS server settings",
        "properties": {
          "result": {
            "type": "object",
            "description": "DNS server settings",
            "additionalProperties": false,
            "required": [
              "admin_status",
              "real_status",
              "allow_query",
              "allow_transfer",
              "listen_addresses",
              "listen_port",
              "recursion",
              "zone_slave",
              "zone_master"
            ],
            "properties": {
              "admin_status": {
                "type": "boolean",
                "description": "Administrative status"
              },
              "real_status": {
                "type": "boolean",
                "description": "Real status"
              },
              "allow_query": {
                "oneOf": [
                  {
                    "title": "any",
                    "const": "any",
                    "description": "Any IP networks"
                  },
                  {
                    "title": "list",
                    "type": "array",
                    "description": "Array of network from which queries are permitted to DNS server",
                    "items": {
                      "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                      "description": "Network address"
                    }
                  }
                ]
              },
              "allow_transfer": {
                "oneOf": [
                  {
                    "title": "any",
                    "const": "any",
                    "description": "Any IP networks"
                  },
                  {
                    "title": "list",
                    "type": "array",
                    "description": "Array of network which transfer are permitted",
                    "items": {
                      "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                      "description": "Network address"
                    }
                  }
                ]
              },
              "listen_addresses": {
                "oneOf": [
                  {
                    "title": "any",
                    "const": "any",
                    "description": "Any ip addresses"
                  },
                  {
                    "title": "list",
                    "type": "array",
                    "description": "Array of listen addresses of DNS server",
                    "items": {
                      "$ref": "#/components/schemas/IP_ADDR",
                      "description": "IP address"
                    }
                  }
                ]
              },
              "listen_port": {
                "$ref": "#/components/schemas/UINT_0_65535",
                "description": "Listen port for IPv4"
              },
              "recursion": {
                "type": "boolean",
                "description": "Recursion DNS queries"
              },
              "zone_slave": {
                "type": "array",
                "description": "Array of slave DNS zones",
                "items": {
                  "type": "object",
                  "description": "DNS slave zone",
                  "additionalProperties": false,
                  "required": [
                    "zone_name",
                    "master_ip"
                  ],
                  "properties": {
                    "zone_name": {
                      "$ref": "#/components/schemas/STRING",
                      "description": "Slave zone name"
                    },
                    "master_ip": {
                      "$ref": "#/components/schemas/IP_ADDR",
                      "description": "IP address"
                    }
                  }
                }
              },
              "zone_master": {
                "type": "array",
                "description": "List of master zone names",
                "items": {
                  "$ref": "#/components/schemas/STRING",
                  "description": "Domain"
                }
              }
            }
          }
        }
      },
      "out_dns_server_zone_slave_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DNS server zone slave list",
        "description": "Result of reading a list of DNS slave zones",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of slave DNS zones",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "Slave zone name"
            }
          }
        }
      },
      "out_dns_server_zone_master_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DNS server zone master list",
        "description": "Result of reading a list of DNS master zones",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of master DNS zones",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "Master zone name"
            }
          }
        }
      },
      "in_dns_server_zone_slave_add_write": {
        "title": "request write DNS server zone slave add",
        "description": "Add DNS server slave zone",
        "type": "object",
        "required": [
          "zone_name",
          "master_ip"
        ],
        "additionalProperties": false,
        "properties": {
          "zone_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Slave zone name"
          },
          "master_ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IP address"
          }
        }
      },
      "in_dns_server_zone_slave_delete_write": {
        "title": "request write DNS server zone slave delete",
        "description": "Delete DNS server slave zone",
        "type": "object",
        "required": [
          "zone_name"
        ],
        "additionalProperties": false,
        "properties": {
          "zone_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Slave zone name"
          }
        }
      },
      "in_dns_server_zone_master_add_write": {
        "title": "request write DNS server zone master add",
        "description": "Add DNS server master zone",
        "type": "object",
        "required": [
          "zone_name"
        ],
        "additionalProperties": false,
        "properties": {
          "zone_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Master zone name"
          }
        }
      },
      "in_dns_server_zone_master_delete_write": {
        "title": "request write DNS server zone master delete",
        "description": "Delete DNS server master zone",
        "type": "object",
        "required": [
          "zone_name"
        ],
        "additionalProperties": false,
        "properties": {
          "zone_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Master zone name"
          }
        }
      },
      "out_dns_server_zone_master_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DNS server master zone",
        "description": "Result of reading DNS server's masster zone settings",
        "properties": {
          "result": {
            "type": "object",
            "description": "Master zone settings",
            "additionalProperties": false,
            "required": [
              "email",
              "ns",
              "expiry",
              "retry",
              "refresh",
              "ttl",
              "serial",
              "records"
            ],
            "properties": {
              "email": {
                "$ref": "#/components/schemas/STRING",
                "description": "Hostmaster email"
              },
              "ns": {
                "$ref": "#/components/schemas/STRING",
                "description": "Primary name server"
              },
              "expiry": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time to expire in seconds"
              },
              "retry": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time to retry in seconds"
              },
              "refresh": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time to refresh in seconds"
              },
              "ttl": {
                "$ref": "#/components/schemas/UINT",
                "description": "Minimum TTL in seconds"
              },
              "serial": {
                "$ref": "#/components/schemas/UINT",
                "description": "Serial number"
              },
              "records": {
                "description": "Array of records",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common_dns_server_entry"
                }
              }
            }
          }
        }
      },
      "in_dns_server_zone_master_write": {
        "title": "request write DNS server zone master",
        "description": "Edit DNS server master zone",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "zone_name",
          "email",
          "ns",
          "expiry",
          "retry",
          "refresh",
          "ttl"
        ],
        "properties": {
          "zone_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Master zone name"
          },
          "email": {
            "$ref": "#/components/schemas/STRING",
            "description": "Hostmaster email"
          },
          "ns": {
            "$ref": "#/components/schemas/STRING",
            "description": "Primary name server"
          },
          "expiry": {
            "type": "integer",
            "minimum": 120,
            "maximum": 2147483647,
            "description": "Time to expire in seconds"
          },
          "retry": {
            "type": "integer",
            "minimum": 120,
            "maximum": 2147483647,
            "description": "Time to retry in seconds"
          },
          "refresh": {
            "type": "integer",
            "minimum": 120,
            "maximum": 2147483647,
            "description": "Time to refresh in seconds"
          },
          "ttl": {
            "type": "integer",
            "minimum": 120,
            "maximum": 10800,
            "description": "Minimum TTL in seconds"
          }
        }
      },
      "in_dns_server_control_write": {
        "title": "request write DNS server control",
        "description": "Control DNS server (on/off/restart/reload)",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "string",
                "const": "on",
                "description": "Enable the DNS-server"
              },
              {
                "type": "string",
                "const": "off",
                "description": "Disable the DNS-server"
              },
              {
                "type": "string",
                "const": "reload",
                "description": "Apply all DNS-server config changes including zone info"
              },
              {
                "type": "string",
                "const": "restart",
                "description": "Apply all changes and fully restart the DNS-server"
              }
            ]
          }
        }
      },
      "in_dns_server_serial_write": {
        "title": "request write DNS server serial",
        "description": "Set serial for DNS-server",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "serial"
        ],
        "properties": {
          "serial": {
            "oneOf": [
              {
                "type": "string",
                "const": "system-time",
                "description": "Use system time"
              },
              {
                "title": "serial number",
                "$ref": "#/components/schemas/UINT_0_2147483647",
                "description": "Set specific serial number"
              }
            ]
          }
        }
      },
      "in_dns_server_zone_master_entry_add_write": {
        "title": "request write DNS server zone master entry add",
        "description": "Add a A/AAAA/NX/MX record to the master zone",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "zone_name",
          "entry"
        ],
        "properties": {
          "zone_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Master zone name"
          },
          "entry": {
            "$ref": "#/components/schemas/common_dns_server_entry"
          }
        }
      },
      "in_dns_server_zone_master_entry_delete_write": {
        "title": "request write DNS server zone master entry delete",
        "description": "Remove A/AAAA/NX/MX record from the master zone",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "zone_name",
          "entry_name",
          "entry_type"
        ],
        "properties": {
          "zone_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Master zone name"
          },
          "entry_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Name of record"
          },
          "entry_type": {
            "type": "string",
            "description": "record type",
            "enum": [
              "a",
              "aaaa",
              "ns",
              "mx"
            ]
          }
        }
      },
      "in_dns_proxy_write": {
        "title": "request write DNS proxy",
        "description": "Add or edit DNS proxy configuration",
        "type": "object",
        "required": [
          "vrf_name",
          "option_authoritative",
          "option_recursive"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF for proxy server"
          },
          "option_authoritative": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Authoritative DNS server's address"
          },
          "option_authoritative_port": {
            "$ref": "#/components/schemas/UINT16",
            "description": "Authoritative DNS server's port"
          },
          "option_authoritative_timeout": {
            "$ref": "#/components/schemas/UINT",
            "description": "Authoritative DNS server's timeout in seconds"
          },
          "option_recursive": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Recursive DNS server's address"
          },
          "option_recursive_port": {
            "$ref": "#/components/schemas/UINT16",
            "description": "Recursive DNS server's port"
          },
          "option_recursive_timeout": {
            "$ref": "#/components/schemas/UINT",
            "description": "Recursive DNS server's timeout in seconds"
          },
          "option_internal": {
            "type": "array",
            "description": "Array of internal networks allowed to do recursive queries",
            "items": {
              "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
              "description": "Internal network allowed to do recursive queries"
            }
          },
          "option_listen": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Local address to listen to DNS queries"
          },
          "option_port": {
            "$ref": "#/components/schemas/UINT16",
            "description": "Local port to listen to DNS queries"
          }
        }
      },
      "out_dns_proxy_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DNS proxy",
        "description": "Result of reading DNS proxy configuration",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DNS proxy configurations",
            "items": {
              "type": "object",
              "unevaluatedProperties": false,
              "description": "DNS proxy configuration",
              "required": [
                "admin_status",
                "real_status"
              ],
              "properties": {
                "vrf_name": {
                  "$ref": "#/components/schemas/VRF",
                  "description": "VRF for proxy server"
                },
                "admin_status": {
                  "type": "boolean",
                  "description": "Administrative status"
                },
                "real_status": {
                  "type": "boolean",
                  "description": "Real status"
                },
                "option_authoritative": {
                  "$ref": "#/components/schemas/IP_ADDR",
                  "description": "Authoritative DNS server's address"
                },
                "option_authoritative_port": {
                  "$ref": "#/components/schemas/UINT16",
                  "description": "Authoritative DNS server's port"
                },
                "option_authoritative_timeout": {
                  "$ref": "#/components/schemas/UINT",
                  "description": "Authoritative DNS server's timeout in seconds"
                },
                "option_recursive": {
                  "$ref": "#/components/schemas/IP_ADDR",
                  "description": "Recursive DNS server's address"
                },
                "option_recursive_port": {
                  "$ref": "#/components/schemas/UINT16",
                  "description": "Recursive DNS server's port"
                },
                "option_recursive_timeout": {
                  "$ref": "#/components/schemas/UINT",
                  "description": "Recursive DNS server's timeout in seconds"
                },
                "option_internal": {
                  "type": "array",
                  "description": "Array of internal networks allowed to do recursive queries",
                  "items": {
                    "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                    "description": "Internal network allowed to do recursive queries"
                  }
                },
                "option_listen": {
                  "$ref": "#/components/schemas/IP_ADDR",
                  "description": "Local address to listen to DNS queries"
                },
                "option_port": {
                  "$ref": "#/components/schemas/UINT16",
                  "description": "Local port to listen to DNS queries"
                }
              }
            }
          }
        }
      },
      "in_dns_proxy_delete_write": {
        "title": "request write delete DNS proxy",
        "description": "Delete DNS proxy configuration",
        "type": "object",
        "required": [
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF for proxy server"
          }
        }
      },
      "out_dns_proxy_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DNS proxy list",
        "description": "Result of reading list of DNS configurations names",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DNS proxy configuration names",
            "items": {
              "$ref": "#/components/schemas/VRF",
              "description": "DNS proxy configuration name"
            }
          }
        }
      },
      "in_dns_proxy_auto_write": {
        "title": "request write auto DNS proxy",
        "description": "Automatically detect current DNS server and proxy queries to it",
        "type": "object",
        "properties": {}
      },
      "in_dns_proxy_control_write": {
        "title": "request write control DNS proxy",
        "description": "ON/OFF/restart DNS proxy",
        "type": "object",
        "required": [
          "vrf_name",
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF for proxy server"
          },
          "action": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "restart"
            ],
            "description": "Enable/disable/restart DNS proxy"
          }
        }
      },
      "common_dhcp_ipv6_option_names": {
        "type": "string",
        "enum": [
          "name-servers"
        ]
      },
      "common_dhcp_ipv6_options": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "name",
          "parameters"
        ],
        "description": "DHCPv6 option with parameters",
        "oneOf": [
          {
            "title": "name-servers",
            "properties": {
              "name": {
                "const": "name-servers",
                "description": "DNS-servers for DHCPv6-client (Option 23)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for name-servers option",
                "additionalProperties": false,
                "required": [
                  "dns_addresses"
                ],
                "properties": {
                  "dns_addresses": {
                    "type": "array",
                    "description": "Array of Name server IPv6 addresses",
                    "items": {
                      "$ref": "#/components/schemas/IPV6_ADDR",
                      "description": "Name server IPv6 address"
                    }
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          }
        ]
      },
      "in_dhcp_ipv6_server_write": {
        "title": "request write DHCPv6 server",
        "description": "Turn on/turn off/restart DHCPv6 server.",
        "type": "object",
        "required": [
          "command"
        ],
        "additionalProperties": false,
        "properties": {
          "command": {
            "$ref": "#/components/schemas/ON_OFF_RESTART",
            "description": "Command on/off/restart"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          }
        }
      },
      "out_dhcp_ipv6_server_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 server",
        "description": "Result of reading DHCPv6 server status",
        "properties": {
          "result": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "description": "DHCPv6 server status"
              }
            }
          }
        }
      },
      "in_dhcp_ipv6_pools_add_write": {
        "title": "request write add DHCPv6 pool",
        "description": "Create pool of IPv6-addresses",
        "type": "object",
        "required": [
          "pool_number",
          "network"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "network": {
            "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
            "description": "Specify a network of the DHCPv6 address pool"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          }
        }
      },
      "in_dhcp_ipv6_pools_delete_write": {
        "title": "request write delete DHCPv6 pool",
        "description": "Delete pool of IPv6-addresses with all settings",
        "type": "object",
        "required": [
          "pool_number"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          }
        }
      },
      "out_dhcp_ipv6_pools_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pools list",
        "description": "Result of reading list of DHCPv6 pools",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 pool numbers",
            "items": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        }
      },
      "out_dhcp_ipv6_pools_default_lease_time_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 default-lease-time",
        "description": "Result of reading DHCPv6 default-lease-time",
        "properties": {
          "result": {
            "type": "object",
            "description": "default lease time for pool of addresses",
            "additionalProperties": false,
            "required": [
              "time"
            ],
            "properties": {
              "time": {
                "oneOf": [
                  {
                    "title": "time value",
                    "$ref": "#/components/schemas/UINT_0_4294967295",
                    "description": "dhcp default lease time"
                  },
                  {
                    "const": "infinite",
                    "description": "infinity lease time"
                  },
                  {
                    "title": "disable",
                    "type": "null",
                    "description": "default lease time"
                  }
                ]
              }
            }
          }
        }
      },
      "out_dhcp_ipv6_pools_max_lease_time_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 max-lease-time",
        "description": "Result of reading DHCPv6 max-lease-time",
        "properties": {
          "result": {
            "type": "object",
            "description": "max lease time for pool of addresses",
            "additionalProperties": false,
            "required": [
              "time"
            ],
            "properties": {
              "time": {
                "oneOf": [
                  {
                    "title": "time value",
                    "$ref": "#/components/schemas/UINT_0_4294967295",
                    "description": "dhcp max lease time"
                  },
                  {
                    "const": "infinite",
                    "description": "infinity lease time"
                  },
                  {
                    "title": "disable",
                    "type": "null",
                    "description": "no max lease time"
                  }
                ]
              }
            }
          }
        }
      },
      "in_dhcp_ipv6_pools_default_lease_time_write": {
        "title": "request write DHCPv6 pool default-lease-time",
        "description": "Set default lease time for specified DHCPv6 pool",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pool_number",
          "time"
        ],
        "properties": {
          "pool_number": {
            "title": "pool number",
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "time": {
            "oneOf": [
              {
                "title": "time value",
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Set dhcp default lease time"
              },
              {
                "const": "infinite",
                "description": "Set infinity lease time"
              },
              {
                "title": "disable",
                "type": "null",
                "description": "delete default lease time"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv6_pools_max_lease_time_write": {
        "title": "request write DHCPv6 pool max-lease-time",
        "description": "Set max lease time for specified DHCPv6 pool",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pool_number",
          "time"
        ],
        "properties": {
          "pool_number": {
            "title": "pool number",
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "time": {
            "oneOf": [
              {
                "title": "time value",
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Set dhcp max lease time"
              },
              {
                "const": "infinite",
                "description": "Set infinity lease time"
              },
              {
                "title": "disable",
                "type": "null",
                "description": "delete max lease time"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv6_pools_options_add_write": {
        "title": "request write add DHCPv6 pool option",
        "description": "Add DHCPv6 option",
        "type": "object",
        "required": [
          "pool_number",
          "option"
        ],
        "unevaluatedProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "option": {
            "$ref": "#/components/schemas/common_dhcp_ipv6_options"
          }
        }
      },
      "in_dhcp_ipv6_pools_options_delete_write": {
        "title": "request write delete DHCPv6 pool option",
        "description": "Delete DHCPv6 option",
        "type": "object",
        "required": [
          "pool_number",
          "option"
        ],
        "unevaluatedProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "option": {
            "$ref": "#/components/schemas/common_dhcp_ipv6_option_names",
            "description": "Option name to be removed"
          }
        }
      },
      "out_dhcp_ipv6_pools_options_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pool options list",
        "description": "Result of reading list of DHCPv6 pool options",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 pool options",
            "items": {
              "$ref": "#/components/schemas/common_dhcp_ipv6_option_names",
              "description": "Option name"
            }
          }
        }
      },
      "out_dhcp_ipv6_pools_options_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pool option",
        "description": "Result of reading DHCPv6 pool option",
        "properties": {
          "result": {
            "type": "object",
            "description": "DHCPv6 option with its settings",
            "properties": {
              "option": {
                "$ref": "#/components/schemas/common_dhcp_ipv6_options",
                "description": "DHCPv6 option with its settings"
              }
            }
          }
        }
      },
      "out_dhcp_ipv6_pools_vrf_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pool VRF",
        "description": "Result of reading DHCPv6 pool VRF",
        "properties": {
          "result": {
            "type": "object",
            "description": "Name of VRF assoassociated with given pool",
            "additionalProperties": false,
            "required": [
              "vrf"
            ],
            "properties": {
              "vrf": {
                "oneOf": [
                  {
                    "title": "VRF name",
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF instance name"
                  },
                  {
                    "title": "Default",
                    "type": "null",
                    "description": "Default VRF instance"
                  }
                ]
              }
            }
          }
        }
      },
      "in_dhcp_ipv6_pools_vrf_write": {
        "title": "request write delete DHCPv6 pool vrf",
        "description": "Delete pool of IPv6-addresses with all settings",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pool_number",
          "vrf"
        ],
        "properties": {
          "pool_number": {
            "title": "pool number",
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "vrf": {
            "oneOf": [
              {
                "title": "VRF name",
                "$ref": "#/components/schemas/VRF",
                "description": "VRF instance name"
              },
              {
                "title": "Default",
                "type": "null",
                "description": "Default VRF instance"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv6_pools_range_add_write": {
        "title": "request write add DHCPv6 pool range",
        "description": "Add range of IPv6 addresses for DHCPv6 clients",
        "type": "object",
        "required": [
          "pool_number",
          "start_ip_address",
          "stop_ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "start_ip_address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "First IP address in range"
          },
          "stop_ip_address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "Last IP address in range"
          },
          "comment": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Comment string"
          }
        }
      },
      "in_dhcp_ipv6_pools_range_delete_write": {
        "title": "request write delete DHCPv6 pool range",
        "description": "Delete range of IPv6 addresses for DHCPv6 clients",
        "type": "object",
        "required": [
          "pool_number",
          "start_ip_address",
          "stop_ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "start_ip_address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "First IP address in range"
          },
          "stop_ip_address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "Last IP address in range"
          }
        }
      },
      "out_dhcp_ipv6_pools_range_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pool range list",
        "description": "Result of reading list of DHCPv6 pool range",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 pool range",
            "items": {
              "type": "object",
              "required": [
                "start_ip_address",
                "stop_ip_address"
              ],
              "additionalProperties": false,
              "description": "Range",
              "properties": {
                "start_ip_address": {
                  "$ref": "#/components/schemas/IPV6_ADDR",
                  "description": "First IP address in range"
                },
                "stop_ip_address": {
                  "$ref": "#/components/schemas/IPV6_ADDR",
                  "description": "Last IP address in range"
                },
                "comment": {
                  "$ref": "#/components/schemas/STRING_NO_QUOTES",
                  "description": "Comment string"
                }
              }
            }
          }
        }
      },
      "in_dhcp_ipv6_pools_groups_add_write": {
        "title": "request write add DHCPv6 pool groups",
        "description": "Add group of hosts for specific DHCPv6 pool",
        "type": "object",
        "required": [
          "pool_number",
          "group_name"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          }
        }
      },
      "in_dhcp_ipv6_pools_groups_delete_write": {
        "title": "request write delete DHCPv6 pool groups",
        "description": "Delete group of hosts for specific DHCPv6 pool",
        "type": "object",
        "required": [
          "pool_number",
          "group_name"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          }
        }
      },
      "out_dhcp_ipv6_pools_groups_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pool groups list",
        "description": "Result of reading list of DHCPv6 pool groups",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 pool group names",
            "items": {
              "$ref": "#/components/schemas/DHCP_WORD",
              "description": "Group name"
            }
          }
        }
      },
      "in_dhcp_ipv6_pools_hosts_write": {
        "title": "request write DHCPv6 pool host",
        "description": "Add or edit host for specific DHCPv6 pool ",
        "type": "object",
        "required": [
          "pool_number",
          "host_name",
          "client-id",
          "ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "client-id": {
            "type": "object",
            "description": "Client-id",
            "unevaluatedProperties": false,
            "oneOf": [
              {
                "required": [
                  "ascii"
                ],
                "title": "ascii",
                "properties": {
                  "ascii": {
                    "$ref": "#/components/schemas/SIMPLE_ASCII",
                    "description": "ID for this interface in ASCII form"
                  }
                }
              },
              {
                "required": [
                  "duid"
                ],
                "title": "duid",
                "properties": {
                  "duid": {
                    "$ref": "#/components/schemas/DUID",
                    "description": "DUID for this interface"
                  }
                }
              }
            ]
          },
          "ip_address": {
            "oneOf": [
              {
                "title": "ip address",
                "$ref": "#/components/schemas/IPV6_ADDR",
                "description": "IPv6 address for this host"
              },
              {
                "title": "no address",
                "type": "null",
                "description": "Ip address not set"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv6_pools_hosts_delete_write": {
        "title": "request write delete DHCPv6 pool hosts",
        "description": "Delete host for specific DHCPv6 pool",
        "type": "object",
        "required": [
          "pool_number",
          "host_name"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          }
        }
      },
      "out_dhcp_ipv6_pools_hosts_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pool hosts list",
        "description": "Result of reading list of DHCPv6 pool hosts",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 pool host names",
            "items": {
              "$ref": "#/components/schemas/DHCP_WORD",
              "description": "Host name"
            }
          }
        }
      },
      "out_dhcp_ipv6_pools_hosts_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 pool host",
        "description": "Result of reading of DHCPv6 pool host",
        "properties": {
          "result": {
            "type": "object",
            "description": "Host information",
            "additionalProperties": false,
            "required": [
              "client-id",
              "ip_address"
            ],
            "properties": {
              "client-id": {
                "type": "object",
                "description": "Client-id",
                "unevaluatedProperties": false,
                "oneOf": [
                  {
                    "required": [
                      "ascii"
                    ],
                    "title": "ascii",
                    "properties": {
                      "ascii": {
                        "$ref": "#/components/schemas/SIMPLE_ASCII",
                        "description": "ID for this interface in ASCII form"
                      }
                    }
                  },
                  {
                    "required": [
                      "duid"
                    ],
                    "title": "duid",
                    "properties": {
                      "duid": {
                        "$ref": "#/components/schemas/DUID",
                        "description": "DUID for this interface"
                      }
                    }
                  }
                ]
              },
              "ip_address": {
                "oneOf": [
                  {
                    "title": "ip address",
                    "$ref": "#/components/schemas/IPV6_ADDR",
                    "description": "IPv6 address for this host"
                  },
                  {
                    "title": "no address",
                    "type": "null",
                    "description": "Ip address not set"
                  }
                ]
              }
            }
          }
        }
      },
      "out_dhcp_ipv6_server_default_lease_time_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 default-lease-time",
        "description": "Result of reading DHCPv6 default-lease-time",
        "properties": {
          "result": {
            "type": "object",
            "description": "default lease time for VRF",
            "additionalProperties": false,
            "required": [
              "time"
            ],
            "properties": {
              "time": {
                "oneOf": [
                  {
                    "title": "time value",
                    "$ref": "#/components/schemas/UINT_0_4294967295",
                    "description": "dhcp default lease time"
                  },
                  {
                    "const": "infinite",
                    "description": "infinity lease time"
                  }
                ]
              }
            }
          }
        }
      },
      "in_dhcp_ipv6_server_default_lease_time_write": {
        "title": "request write DHCPv6 default-lease-time",
        "description": "Set default lease time for specified VRF",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "time"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          },
          "time": {
            "oneOf": [
              {
                "title": "time value",
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Set dhcp default lease time"
              },
              {
                "const": "infinite",
                "description": "Set infinity lease time"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv6_server_clear_leases_write": {
        "title": "request write DHCPv6 clear leases",
        "description": "Clear DHCPv6 server-leases for specified VRF instance",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          }
        }
      },
      "out_dhcp_ipv6_server_leases_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 server-leases",
        "description": "Result of reading DHCPv6 server-leases",
        "properties": {
          "result": {
            "type": "string",
            "description": "server lease file information"
          }
        }
      },
      "common_dhcp_option_names": {
        "type": "string",
        "enum": [
          "bootfile-name",
          "classless-static-routes",
          "default-ip-ttl",
          "dhcp-message-type",
          "domain-name",
          "domain-name-servers",
          "host-name",
          "interface-mtu",
          "ip-forwarding",
          "lpr-servers",
          "max-dgram-reassembly",
          "mobile-ip-home-agent",
          "non-local-source-routing",
          "ntp-servers",
          "policy-filter",
          "routers",
          "static-routes",
          "subnet-mask",
          "tftp-server-address",
          "tftp-server-name",
          "time-offset",
          "time-servers",
          "ip-tele-voicesrvr",
          "ip-tele-datasrvr",
          "vendor-class-identifier",
          "vendor-encapsulated-options"
        ]
      },
      "common_dhcp_options": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "name",
          "parameters"
        ],
        "description": "DHCP option with parameters",
        "oneOf": [
          {
            "title": "bootfile-name",
            "properties": {
              "name": {
                "const": "bootfile-name",
                "description": "boot file (Option 67)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for bootfile-name option",
                "additionalProperties": false,
                "required": [
                  "bootfile_name"
                ],
                "properties": {
                  "bootfile_name": {
                    "$ref": "#/components/schemas/STRING_NO_DOUBLE_QUOTES",
                    "description": "file name"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "classless-static-routes",
            "properties": {
              "name": {
                "const": "classless-static-routes",
                "description": "static routes (Option 121)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for classless-static-routes option",
                "additionalProperties": false,
                "required": [
                  "routes"
                ],
                "properties": {
                  "routes": {
                    "type": "array",
                    "description": "Array of routes",
                    "items": {
                      "type": "object",
                      "description": "Static route",
                      "additionalProperties": false,
                      "required": [
                        "destination_address",
                        "router_address"
                      ],
                      "properties": {
                        "destination_address": {
                          "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                          "description": "Destination address"
                        },
                        "router_address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "IP address of the router"
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "default-ip-ttl",
            "properties": {
              "name": {
                "const": "default-ip-ttl",
                "description": "Default TTL for outgoing datagrams (Option 23)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for default-ip-ttl option",
                "additionalProperties": false,
                "required": [
                  "ttl"
                ],
                "properties": {
                  "ttl": {
                    "$ref": "#/components/schemas/UINT8",
                    "description": "TTL"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "dhcp-message-type",
            "properties": {
              "name": {
                "const": "dhcp-message-type",
                "description": "DHCP message type (Option 53)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for dhcp-message-type option",
                "additionalProperties": false,
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/UINT8",
                    "description": "Message type"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "domain-name",
            "properties": {
              "name": {
                "const": "domain-name",
                "description": "Domain name (Option 15)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for domain-name option",
                "additionalProperties": false,
                "required": [
                  "domain_name"
                ],
                "properties": {
                  "domain_name": {
                    "$ref": "#/components/schemas/HOSTNAME",
                    "description": "Domain name"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "domain-name-servers",
            "properties": {
              "name": {
                "const": "domain-name-servers",
                "description": "DNS-servers for DHCPv4-client (Option 6)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for domain-name-servers option",
                "additionalProperties": false,
                "required": [
                  "dns_addresses"
                ],
                "properties": {
                  "dns_addresses": {
                    "type": "array",
                    "description": "Array of Domain name server addresses",
                    "items": {
                      "$ref": "#/components/schemas/FQDN_IP_ADDR",
                      "description": "Domain name server IPv4 address"
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "host-name",
            "properties": {
              "name": {
                "const": "host-name",
                "description": "Host name (Option 12)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for host-name option",
                "additionalProperties": false,
                "required": [
                  "host"
                ],
                "properties": {
                  "host": {
                    "$ref": "#/components/schemas/HOSTNAME",
                    "description": "Host name"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "interface-mtu",
            "properties": {
              "name": {
                "const": "interface-mtu",
                "description": "Interface MTU (Option 26)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for interface-mtu option",
                "additionalProperties": false,
                "required": [
                  "mtu"
                ],
                "properties": {
                  "mtu": {
                    "$ref": "#/components/schemas/UINT16",
                    "description": "MTU"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "ip-forwarding",
            "properties": {
              "name": {
                "const": "ip-forwarding",
                "description": "IP forwarding flag (Option 19)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for ip-forwarding option",
                "additionalProperties": false,
                "required": [
                  "flag"
                ],
                "properties": {
                  "flag": {
                    "$ref": "#/components/schemas/BOOL",
                    "description": "Flag"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "lpr-servers",
            "properties": {
              "name": {
                "const": "lpr-servers",
                "description": "Address of LPR server (Option 9)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for lpr-servers option",
                "additionalProperties": false,
                "required": [
                  "server_addresses"
                ],
                "properties": {
                  "server_addresses": {
                    "type": "array",
                    "description": "Array of LPR server addresses",
                    "items": {
                      "$ref": "#/components/schemas/FQDN_IP_ADDR",
                      "description": "LPR server IP address"
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "max-dgram-reassembly",
            "properties": {
              "name": {
                "const": "max-dgram-reassembly",
                "description": "Datagram maximum size to reassemble (Option 22)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for max-dgram-reassembly option",
                "additionalProperties": false,
                "required": [
                  "reassembly"
                ],
                "properties": {
                  "reassembly": {
                    "$ref": "#/components/schemas/UINT16",
                    "description": "Max datagram reassembly"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "mobile-ip-home-agent",
            "properties": {
              "name": {
                "const": "mobile-ip-home-agent",
                "description": "IPv4 addresses of Mobile IP Home Agent (Option 68)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for mobile-ip-home-agent option",
                "additionalProperties": false,
                "required": [
                  "agents_addresses"
                ],
                "properties": {
                  "agents_addresses": {
                    "type": "array",
                    "description": "Array of Home agents addresses",
                    "items": {
                      "$ref": "#/components/schemas/FQDN_IP_ADDR",
                      "description": "Home agents IPv4 address"
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "non-local-source-routing",
            "properties": {
              "name": {
                "const": "non-local-source-routing",
                "description": "Non-local source routing (Option 20)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for non-local-source-routing option",
                "additionalProperties": false,
                "required": [
                  "flag"
                ],
                "properties": {
                  "flag": {
                    "$ref": "#/components/schemas/BOOL",
                    "description": "Flag"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "ntp-servers",
            "properties": {
              "name": {
                "const": "ntp-servers",
                "description": "NTP servers (Option 42)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for ntp-servers option",
                "additionalProperties": false,
                "required": [
                  "server_addresses"
                ],
                "properties": {
                  "server_addresses": {
                    "type": "array",
                    "description": "Array of NTP server addresses",
                    "items": {
                      "$ref": "#/components/schemas/FQDN_IP_ADDR",
                      "description": "NTP server address"
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "policy-filter",
            "properties": {
              "name": {
                "const": "policy-filter",
                "description": "Policy filters (Option 21)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for policy-filter option",
                "additionalProperties": false,
                "required": [
                  "addresses"
                ],
                "properties": {
                  "addresses": {
                    "type": "array",
                    "description": "Array of addresses",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "address",
                        "mask"
                      ],
                      "properties": {
                        "address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Ip address"
                        },
                        "mask": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Mask"
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "routers",
            "properties": {
              "name": {
                "const": "routers",
                "description": "Routers (Option 3)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for routers option",
                "additionalProperties": false,
                "required": [
                  "router_addresses"
                ],
                "properties": {
                  "router_addresses": {
                    "type": "array",
                    "description": "Array of Router addresses",
                    "items": {
                      "$ref": "#/components/schemas/FQDN_IP_ADDR",
                      "description": "Router IP address"
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "static-routes",
            "properties": {
              "name": {
                "const": "static-routes",
                "description": "Static routes (Option 33)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for static-routes option",
                "additionalProperties": false,
                "required": [
                  "routes"
                ],
                "properties": {
                  "routes": {
                    "type": "array",
                    "description": "Array of routes",
                    "items": {
                      "type": "object",
                      "description": "Static route",
                      "additionalProperties": false,
                      "required": [
                        "destination_address",
                        "router_address"
                      ],
                      "properties": {
                        "destination_address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "Destination address"
                        },
                        "router_address": {
                          "$ref": "#/components/schemas/IP_ADDR",
                          "description": "IP address of the router"
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "subnet-mask",
            "properties": {
              "name": {
                "const": "subnet-mask",
                "description": "Subnet mask for DHCPv4-client (Option 1)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for subnet-mask option",
                "additionalProperties": false,
                "required": [
                  "subnet_mask"
                ],
                "properties": {
                  "subnet_mask": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Subnet mask"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "tftp-server-address",
            "properties": {
              "name": {
                "const": "tftp-server-address",
                "description": "TFTP servers list (Option 150)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for tftp-server-address option",
                "additionalProperties": false,
                "required": [
                  "server_addresses"
                ],
                "properties": {
                  "server_addresses": {
                    "type": "array",
                    "description": "Array of TFTP server addresses",
                    "items": {
                      "$ref": "#/components/schemas/FQDN_IP_ADDR",
                      "description": "TFTP server IP address"
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "tftp-server-name",
            "properties": {
              "name": {
                "const": "tftp-server-name",
                "description": "TFTP server name (Option 66)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for tftp-server-name option",
                "additionalProperties": false,
                "required": [
                  "server_name"
                ],
                "properties": {
                  "server_name": {
                    "$ref": "#/components/schemas/STRING_NO_DOUBLE_QUOTES",
                    "description": "Name of the TFTP server"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "time-offset",
            "properties": {
              "name": {
                "const": "time-offset",
                "description": "Time offset from UTC (Option 2)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for time-offset option",
                "additionalProperties": false,
                "required": [
                  "time_offset"
                ],
                "properties": {
                  "time_offset": {
                    "$ref": "#/components/schemas/UINT",
                    "description": "Time offset"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "time-servers",
            "properties": {
              "name": {
                "const": "time-servers",
                "description": "Time servers (Option 4)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for time-servers option",
                "additionalProperties": false,
                "required": [
                  "server_addresses"
                ],
                "properties": {
                  "server_addresses": {
                    "type": "array",
                    "description": "Array of Time server addresses",
                    "items": {
                      "$ref": "#/components/schemas/FQDN_IP_ADDR",
                      "description": "Time server IP address"
                    },
                    "minItems": 1
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "ip-tele-voicesrvr",
            "properties": {
              "name": {
                "const": "ip-tele-voicesrvr",
                "description": "IP telephony voice server (Option 176)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for IP telephony voice server",
                "additionalProperties": false,
                "oneOf": [
                  {
                    "required": [
                      "l2qvlan",
                      "vlantest"
                    ]
                  },
                  {
                    "not": {
                      "required": [
                        "vlantest"
                      ]
                    }
                  }
                ],
                "properties": {
                  "mcipadd": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "IP telephony server address"
                  },
                  "mcport": {
                    "$ref": "#/components/schemas/UINT16",
                    "description": "IP telephony port number (default is 1719)"
                  },
                  "tftpsrvr": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "TFTP server address"
                  },
                  "tftpdir": {
                    "$ref": "#/components/schemas/NET_FILENAME",
                    "description": "TFTP server directory"
                  },
                  "httpsrvr": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "HTTP server address"
                  },
                  "tlssrvr": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "TLS server address"
                  },
                  "l2quad": {
                    "$ref": "#/components/schemas/UINT_1_6",
                    "description": "L2QUAD priority (default is 6)"
                  },
                  "l2qsig": {
                    "$ref": "#/components/schemas/UINT_1_6",
                    "description": "L2QSIG priority (default is 6)"
                  },
                  "l2qvlan": {
                    "$ref": "#/components/schemas/VLAN_ID",
                    "description": "L2QVLAN number"
                  },
                  "vlantest": {
                    "$ref": "#/components/schemas/UINT_1_1000",
                    "description": "The number of seconds a phone attempts to return to the previously known voice VLAN. This parameter may come with l2qvlan parameter together"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "ip-tele-datasrvr",
            "properties": {
              "name": {
                "const": "ip-tele-datasrvr",
                "description": "IP telephony data server (Option 242)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for IP telephony data server",
                "additionalProperties": false,
                "oneOf": [
                  {
                    "required": [
                      "l2qvlan",
                      "vlantest"
                    ]
                  },
                  {
                    "not": {
                      "required": [
                        "vlantest"
                      ]
                    }
                  }
                ],
                "properties": {
                  "mcipadd": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "IP telephony server address"
                  },
                  "mcport": {
                    "$ref": "#/components/schemas/UINT16",
                    "description": "IP telephony port number (default is 1719)"
                  },
                  "tftpsrvr": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "TFTP server address"
                  },
                  "tftpdir": {
                    "$ref": "#/components/schemas/NET_FILENAME",
                    "description": "TFTP server directory"
                  },
                  "httpsrvr": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "HTTP server address"
                  },
                  "tlssrvr": {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "TLS server address"
                  },
                  "l2quad": {
                    "$ref": "#/components/schemas/UINT_1_6",
                    "description": "L2QUAD priority (default is 6)"
                  },
                  "l2qsig": {
                    "$ref": "#/components/schemas/UINT_1_6",
                    "description": "L2QSIG priority (default is 6)"
                  },
                  "l2qvlan": {
                    "$ref": "#/components/schemas/VLAN_ID",
                    "description": "L2QVLAN number"
                  },
                  "vlantest": {
                    "$ref": "#/components/schemas/UINT_1_1000",
                    "description": "The number of seconds a phone attempts to return to the previously known voice VLAN. This parameter may come with l2qvlan parameter together"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "vendor-class-identifier",
            "properties": {
              "name": {
                "const": "vendor-class-identifier",
                "description": "Vendor class identifier (Option 60)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for vendor-class-identifier option",
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "object",
                    "required": [
                      "type",
                      "value"
                    ],
                    "oneOf": [
                      {
                        "title": "ASCII",
                        "properties": {
                          "type": {
                            "const": "ascii",
                            "description": "Use ASCII string"
                          },
                          "value": {
                            "$ref": "#/components/schemas/SIMPLE_ASCII",
                            "description": "Vendor class ID in ASCII string form"
                          }
                        }
                      },
                      {
                        "title": "HEX",
                        "properties": {
                          "type": {
                            "const": "hex",
                            "description": "Use HEX string"
                          },
                          "value": {
                            "$ref": "#/components/schemas/HEX_STRING",
                            "description": "Vendor class ID in hex string form"
                          }
                        }
                      }
                    ]
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          },
          {
            "title": "vendor-encapsulated-options",
            "properties": {
              "name": {
                "const": "vendor-encapsulated-options",
                "description": "Vendor specific options (Option 43)"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters for vendor-encapsulated-options option",
                "unevaluatedProperties": false,
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "object",
                    "unevaluatedProperties": false,
                    "required": [
                      "type",
                      "value"
                    ],
                    "oneOf": [
                      {
                        "title": "ASCII",
                        "properties": {
                          "type": {
                            "const": "ascii",
                            "description": "Use ASCII string"
                          },
                          "value": {
                            "$ref": "#/components/schemas/SIMPLE_ASCII",
                            "description": "Vendor class ID in ASCII string form"
                          }
                        }
                      },
                      {
                        "title": "HEX",
                        "properties": {
                          "type": {
                            "const": "hex",
                            "description": "Use HEX string"
                          },
                          "value": {
                            "$ref": "#/components/schemas/HEX_STRING",
                            "description": "Vendor class ID in hex string form"
                          }
                        }
                      }
                    ]
                  },
                  "comment": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Comment string"
                  }
                }
              }
            }
          }
        ]
      },
      "in_dhcp_ipv4_server_write": {
        "title": "request write DHCP server",
        "description": "Turn on/turn off/restart DHCPv4 server.",
        "type": "object",
        "required": [
          "command"
        ],
        "additionalProperties": false,
        "properties": {
          "command": {
            "$ref": "#/components/schemas/ON_OFF_RESTART",
            "description": "Command on/off/restart"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          }
        }
      },
      "out_dhcp_ipv4_server_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP server",
        "description": "Result of reading DHCP server status",
        "properties": {
          "result": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "description": "DHCP server status"
              }
            }
          }
        }
      },
      "in_dhcp_ipv4_pools_add_write": {
        "title": "request write add DHCP pool",
        "description": "Create pool of IPv4-addresses",
        "type": "object",
        "required": [
          "pool_number",
          "network"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "network": {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
            "description": "Specify a network of the DHCPv4 address pool"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          }
        }
      },
      "in_dhcp_ipv4_pools_delete_write": {
        "title": "request write delete DHCP pool",
        "description": "Delete pool of IPv4-addresses with all settings",
        "type": "object",
        "required": [
          "pool_number"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          }
        }
      },
      "out_dhcp_ipv4_pools_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pools list",
        "description": "Result of reading list of DHCP pools",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCP pool numbers",
            "items": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        }
      },
      "out_dhcp_ipv4_pools_default_lease_time_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP default-lease-time",
        "description": "Result of reading DHCP default-lease-time",
        "properties": {
          "result": {
            "type": "object",
            "description": "default lease time for pool of addresses",
            "additionalProperties": false,
            "required": [
              "time"
            ],
            "properties": {
              "time": {
                "oneOf": [
                  {
                    "title": "time value",
                    "$ref": "#/components/schemas/UINT_0_4294967295",
                    "description": "dhcp default lease time"
                  },
                  {
                    "const": "infinite",
                    "description": "infinity lease time"
                  },
                  {
                    "title": "disable",
                    "type": "null",
                    "description": "default lease time"
                  }
                ]
              }
            }
          }
        }
      },
      "out_dhcp_ipv4_pools_max_lease_time_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP max-lease-time",
        "description": "Result of reading DHCP max-lease-time",
        "properties": {
          "result": {
            "type": "object",
            "description": "max lease time for pool of addresses",
            "additionalProperties": false,
            "required": [
              "time"
            ],
            "properties": {
              "time": {
                "oneOf": [
                  {
                    "title": "time value",
                    "$ref": "#/components/schemas/UINT_0_4294967295",
                    "description": "dhcp max lease time"
                  },
                  {
                    "const": "infinite",
                    "description": "infinity lease time"
                  },
                  {
                    "title": "disable",
                    "type": "null",
                    "description": "no max lease time"
                  }
                ]
              }
            }
          }
        }
      },
      "in_dhcp_ipv4_pools_default_lease_time_write": {
        "title": "request write DHCP pool default-lease-time",
        "description": "Set default lease time for specified DHCP pool",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pool_number",
          "time"
        ],
        "properties": {
          "pool_number": {
            "title": "pool number",
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "time": {
            "oneOf": [
              {
                "title": "time value",
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Set dhcp default lease time"
              },
              {
                "const": "infinite",
                "description": "Set infinity lease time"
              },
              {
                "title": "disable",
                "type": "null",
                "description": "delete default lease time"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv4_pools_max_lease_time_write": {
        "title": "request write DHCP pool max-lease-time",
        "description": "Set max lease time for specified DHCP pool",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pool_number",
          "time"
        ],
        "properties": {
          "pool_number": {
            "title": "pool number",
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "time": {
            "oneOf": [
              {
                "title": "time value",
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Set dhcp max lease time"
              },
              {
                "const": "infinite",
                "description": "Set infinity lease time"
              },
              {
                "title": "disable",
                "type": "null",
                "description": "delete max lease time"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv4_pools_options_add_write": {
        "title": "request write add DHCP pool option",
        "description": "Add DHCP option",
        "type": "object",
        "required": [
          "pool_number",
          "option"
        ],
        "unevaluatedProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "option": {
            "$ref": "#/components/schemas/common_dhcp_options"
          }
        }
      },
      "in_dhcp_ipv4_pools_options_delete_write": {
        "title": "request write delete DHCP pool option",
        "description": "Delete DHCP option",
        "type": "object",
        "required": [
          "pool_number",
          "option"
        ],
        "unevaluatedProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "option": {
            "$ref": "#/components/schemas/common_dhcp_option_names",
            "description": "Option name to be removed"
          }
        }
      },
      "out_dhcp_ipv4_pools_options_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pool options list",
        "description": "Result of reading list of DHCP pool options",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCP pool options",
            "items": {
              "$ref": "#/components/schemas/common_dhcp_option_names",
              "description": "Option name"
            }
          }
        }
      },
      "out_dhcp_ipv4_pools_options_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pool option",
        "description": "Result of reading DHCP pool option",
        "properties": {
          "result": {
            "type": "object",
            "description": "DHCP option with its settings",
            "properties": {
              "option": {
                "$ref": "#/components/schemas/common_dhcp_options",
                "description": "DHCP option with its settings"
              }
            }
          }
        }
      },
      "out_dhcp_ipv4_pools_vrf_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pool VRF",
        "description": "Result of reading DHCP pool VRF",
        "properties": {
          "result": {
            "type": "object",
            "description": "Name of VRF assoassociated with given pool",
            "additionalProperties": false,
            "required": [
              "vrf"
            ],
            "properties": {
              "vrf": {
                "oneOf": [
                  {
                    "title": "VRF name",
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF instance name"
                  },
                  {
                    "title": "Default",
                    "type": "null",
                    "description": "Default VRF instance"
                  }
                ]
              }
            }
          }
        }
      },
      "in_dhcp_ipv4_pools_vrf_write": {
        "title": "request write delete DHCP pool vrf",
        "description": "Delete pool of IPv4-addresses with all settings",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pool_number",
          "vrf"
        ],
        "properties": {
          "pool_number": {
            "title": "pool number",
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "vrf": {
            "oneOf": [
              {
                "title": "VRF name",
                "$ref": "#/components/schemas/VRF",
                "description": "VRF instance name"
              },
              {
                "title": "Default",
                "type": "null",
                "description": "Default VRF instance"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv4_pools_range_add_write": {
        "title": "request write add DHCP pool range",
        "description": "Add range of IPv4 addresses for DHCP clients",
        "type": "object",
        "required": [
          "pool_number",
          "start_ip_address",
          "stop_ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "start_ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "First IP address in range"
          },
          "stop_ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Last IP address in range"
          },
          "comment": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Comment string"
          }
        }
      },
      "in_dhcp_ipv4_pools_range_delete_write": {
        "title": "request write delete DHCP pool range",
        "description": "Delete range of IPv4 addresses for DHCP clients",
        "type": "object",
        "required": [
          "pool_number",
          "start_ip_address",
          "stop_ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "start_ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "First IP address in range"
          },
          "stop_ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Last IP address in range"
          }
        }
      },
      "out_dhcp_ipv4_pools_range_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pool range list",
        "description": "Result of reading list of DHCP pool range",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCP pool range",
            "items": {
              "type": "object",
              "required": [
                "start_ip_address",
                "stop_ip_address"
              ],
              "additionalProperties": false,
              "description": "Range",
              "properties": {
                "start_ip_address": {
                  "$ref": "#/components/schemas/IP_ADDR",
                  "description": "First IP address in range"
                },
                "stop_ip_address": {
                  "$ref": "#/components/schemas/IP_ADDR",
                  "description": "Last IP address in range"
                },
                "comment": {
                  "$ref": "#/components/schemas/STRING_NO_QUOTES",
                  "description": "Comment string"
                }
              }
            }
          }
        }
      },
      "in_dhcp_ipv4_pools_groups_add_write": {
        "title": "request write add DHCP pool groups",
        "description": "Add group of hosts for specific DHCP pool",
        "type": "object",
        "required": [
          "pool_number",
          "group_name"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          }
        }
      },
      "in_dhcp_ipv4_pools_groups_delete_write": {
        "title": "request write delete DHCP pool groups",
        "description": "Delete group of hosts for specific DHCP pool",
        "type": "object",
        "required": [
          "pool_number",
          "group_name"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          }
        }
      },
      "out_dhcp_ipv4_pools_groups_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pool groups list",
        "description": "Result of reading list of DHCP pool groups",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCP pool group names",
            "items": {
              "$ref": "#/components/schemas/DHCP_WORD",
              "description": "Group name"
            }
          }
        }
      },
      "in_dhcp_ipv4_pools_hosts_write": {
        "title": "request write DHCP pool host",
        "description": "Add or edit host for specific DHCP pool ",
        "type": "object",
        "required": [
          "pool_number",
          "host_name",
          "hw_client_id",
          "ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          },
          "hw_client_id": {
            "type": "object",
            "unevaluatedProperties": false,
            "oneOf": [
              {
                "required": [
                  "mac_address"
                ],
                "title": "hardware-address",
                "properties": {
                  "mac_address": {
                    "$ref": "#/components/schemas/MAC_ADDR",
                    "description": "MAC address"
                  }
                }
              },
              {
                "required": [
                  "client-id"
                ],
                "title": "client-id",
                "properties": {
                  "client-id": {
                    "type": "object",
                    "description": "Client-id",
                    "unevaluatedProperties": false,
                    "oneOf": [
                      {
                        "required": [
                          "ascii"
                        ],
                        "title": "ascii",
                        "properties": {
                          "ascii": {
                            "$ref": "#/components/schemas/SIMPLE_ASCII",
                            "description": "ASCII string"
                          }
                        }
                      },
                      {
                        "required": [
                          "hex"
                        ],
                        "title": "hex",
                        "properties": {
                          "hex": {
                            "$ref": "#/components/schemas/HEX_STRING",
                            "description": "HEX string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "ip_address": {
            "oneOf": [
              {
                "title": "ip address",
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "IPv4 address for this host"
              },
              {
                "title": "no address",
                "type": "null",
                "description": "Ip address not set"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv4_pools_hosts_delete_write": {
        "title": "request write delete DHCP pool hosts",
        "description": "Delete host for specific DHCP pool",
        "type": "object",
        "required": [
          "pool_number",
          "host_name"
        ],
        "additionalProperties": false,
        "properties": {
          "pool_number": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Pool number"
          },
          "group_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Group name"
          },
          "host_name": {
            "$ref": "#/components/schemas/DHCP_WORD",
            "description": "Host name"
          }
        }
      },
      "out_dhcp_ipv4_pools_hosts_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pool hosts list",
        "description": "Result of reading list of DHCP pool hosts",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCP pool host names",
            "items": {
              "$ref": "#/components/schemas/DHCP_WORD",
              "description": "Host name"
            }
          }
        }
      },
      "out_dhcp_ipv4_pools_hosts_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP pool host",
        "description": "Result of reading of DHCP pool host",
        "properties": {
          "result": {
            "type": "object",
            "description": "Host information",
            "additionalProperties": false,
            "required": [
              "hw_client_id",
              "ip_address"
            ],
            "properties": {
              "hw_client_id": {
                "type": "object",
                "unevaluatedProperties": false,
                "oneOf": [
                  {
                    "required": [
                      "mac_address"
                    ],
                    "title": "hardware-address",
                    "properties": {
                      "mac_address": {
                        "$ref": "#/components/schemas/MAC_ADDR",
                        "description": "MAC address"
                      }
                    }
                  },
                  {
                    "required": [
                      "client-id"
                    ],
                    "title": "client-id",
                    "properties": {
                      "client-id": {
                        "type": "object",
                        "description": "Client-id",
                        "unevaluatedProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "ascii"
                            ],
                            "title": "ascii",
                            "properties": {
                              "ascii": {
                                "$ref": "#/components/schemas/SIMPLE_ASCII",
                                "description": "ASCII string"
                              }
                            }
                          },
                          {
                            "required": [
                              "hex"
                            ],
                            "title": "hex",
                            "properties": {
                              "hex": {
                                "$ref": "#/components/schemas/HEX_STRING",
                                "description": "HEX string"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "ip_address": {
                "oneOf": [
                  {
                    "title": "ip address",
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "IPv4 address for this host"
                  },
                  {
                    "title": "no address",
                    "type": "null",
                    "description": "Ip address not set"
                  }
                ]
              }
            }
          }
        }
      },
      "out_dhcp_ipv4_server_default_lease_time_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP default-lease-time",
        "description": "Result of reading DHCP default-lease-time",
        "properties": {
          "result": {
            "type": "object",
            "description": "default lease time for VRF",
            "additionalProperties": false,
            "required": [
              "time"
            ],
            "properties": {
              "time": {
                "oneOf": [
                  {
                    "title": "time value",
                    "$ref": "#/components/schemas/UINT_0_4294967295",
                    "description": "dhcp default lease time"
                  },
                  {
                    "const": "infinite",
                    "description": "infinity lease time"
                  }
                ]
              }
            }
          }
        }
      },
      "in_dhcp_ipv4_server_default_lease_time_write": {
        "title": "request write DHCP default-lease-time",
        "description": "Set default lease time for specified VRF",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "time"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          },
          "time": {
            "oneOf": [
              {
                "title": "time value",
                "$ref": "#/components/schemas/UINT_0_4294967295",
                "description": "Set dhcp default lease time"
              },
              {
                "const": "infinite",
                "description": "Set infinity lease time"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv4_server_clear_leases_write": {
        "title": "request write DHCP clear leases",
        "description": "Clear DHCPv4 server-leases for specified VRF instance",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          }
        }
      },
      "out_dhcp_ipv4_server_leases_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP server-leases",
        "description": "Result of reading DHCP server-leases",
        "properties": {
          "result": {
            "type": "string",
            "description": "server lease file information"
          }
        }
      },
      "common_dhcp6_relay_config": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "on": {
            "type": "boolean",
            "description": "Turn on DHCPv6 Relay server"
          },
          "vrf": {
            "oneOf": [
              {
                "title": "VRF name",
                "$ref": "#/components/schemas/VRF",
                "description": "VRF instance name"
              },
              {
                "title": "Default",
                "type": "null",
                "description": "Default VRF instance"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv6_relay_add_write": {
        "title": "request write DHCPv6 relay add",
        "description": "Create DHCPv6 relay configuration",
        "type": "object",
        "required": [
          "relay_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv6 relay name"
          }
        }
      },
      "out_dhcp_ipv6_relay_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 relay configuration",
        "description": "Result of reading DHCPv6 relay configuration",
        "properties": {
          "result": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "$ref": "#/components/schemas/common_dhcp6_relay_config",
                "description": "DHCPv6 relay settings"
              }
            }
          }
        }
      },
      "in_dhcp_ipv6_relay_edit_write": {
        "title": "request write DHCPv6 relay edit",
        "description": "Edit DHCPv6 relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv6 relay name"
          },
          "settings": {
            "$ref": "#/components/schemas/common_dhcp6_relay_config",
            "description": "DHCPv6 relay settings"
          }
        }
      },
      "in_dhcp_ipv6_relay_delete_write": {
        "title": "request write DHCPv6 relay delete",
        "description": "Delte DHCPv6 relay configuration",
        "type": "object",
        "required": [
          "relay_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv6 relay name"
          }
        }
      },
      "out_dhcp_ipv6_relay_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 relay list",
        "description": "Result of reading DHCPv6 relay list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 relay names",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv6 relay name"
            }
          }
        }
      },
      "in_dhcp_ipv6_relay_server_add_write": {
        "title": "request write DHCPv6 relay server add",
        "description": "Add DHCPv6 server interface to relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv6 relay name"
          },
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface system name"
          },
          "ip_address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "Destination unicast or multicast address"
          }
        }
      },
      "in_dhcp_ipv6_relay_server_delete_write": {
        "title": "request write DHCPv6 relay server delete",
        "description": "Remove DHCPv6 server interface from relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv6 relay name"
          },
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface system name"
          }
        }
      },
      "out_dhcp_ipv6_relay_server_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 relay server list",
        "description": "Result of reading DHCPv6 relay server list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 relay server interfaces IPv6 addresses",
            "items": {
              "type": "object",
              "desrciption": "DHCPv6 server interface",
              "required": [
                "interface_name"
              ],
              "additionalProperties": false,
              "properties": {
                "interface_name": {
                  "$ref": "#/components/schemas/IFNAME",
                  "description": "Interface system name"
                },
                "ip_address": {
                  "$ref": "#/components/schemas/IPV6_ADDR",
                  "description": "Destination unicast or multicast address"
                }
              }
            }
          }
        }
      },
      "in_dhcp_ipv6_relay_client_add_write": {
        "title": "request write DHCPv6 relay interface add",
        "description": "Add DHCPv6 client interface to relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv6 relay name"
          },
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface system name"
          },
          "ip_address": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "IPv6 address"
          }
        }
      },
      "in_dhcp_ipv6_relay_client_delete_write": {
        "title": "request write DHCPv6 relay interface delete",
        "description": "Remove DHCPv6 client interface from relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv6 relay name"
          },
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface system name"
          }
        }
      },
      "out_dhcp_ipv6_relay_client_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv6 relay client interface list",
        "description": "Result of reading DHCPv6 relay interface list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv6 relay client interfaces names",
            "items": {
              "type": "object",
              "desrciption": "DHCPv6 server interface",
              "required": [
                "interface_name"
              ],
              "additionalProperties": false,
              "properties": {
                "interface_name": {
                  "$ref": "#/components/schemas/IFNAME",
                  "description": "Interface system name"
                },
                "ip_address": {
                  "$ref": "#/components/schemas/IPV6_ADDR",
                  "description": "IPv6 address"
                }
              }
            }
          }
        }
      },
      "common_dhcp_relay_config": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "append_agent_option": {
            "title": "append-agent-option",
            "type": "boolean",
            "description": "Append an agent option field to each request before forwarding it to the DHCPv4 server"
          },
          "manage_agent_option": {
            "oneOf": [
              {
                "title": "manage-agent-option",
                "type": "string",
                "enum": [
                  "append",
                  "replace",
                  "forward",
                  "discard"
                ],
                "description": "Control the handling of incoming DHCPv4 packets which already contain DHCPv4 Relay agent options"
              },
              {
                "title": "Default",
                "type": "null",
                "description": "no manage-agent-option"
              }
            ]
          },
          "option_82": {
            "oneOf": [
              {
                "title": "remote id",
                "$ref": "#/components/schemas/WORD",
                "description": "remote-id for option 82"
              },
              {
                "title": "Default",
                "type": "null",
                "description": "no option 82"
              }
            ]
          },
          "on": {
            "type": "boolean",
            "description": "Turn on DHCPv4 Relay server"
          },
          "vrf": {
            "oneOf": [
              {
                "title": "VRF name",
                "$ref": "#/components/schemas/VRF",
                "description": "VRF instance name"
              },
              {
                "title": "Default",
                "type": "null",
                "description": "Default VRF instance"
              }
            ]
          }
        }
      },
      "in_dhcp_ipv4_relay_add_write": {
        "title": "request write DHCPv4 relay add",
        "description": "Create DHCPv4 relay configuration",
        "type": "object",
        "required": [
          "relay_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv4 relay name"
          }
        }
      },
      "out_dhcp_ipv4_relay_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCPv4 relay configuration",
        "description": "Result of reading DHCPv4 relay configuration",
        "properties": {
          "result": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": [
              "settings"
            ],
            "properties": {
              "settings": {
                "$ref": "#/components/schemas/common_dhcp_relay_config",
                "description": "DHCPv4 relay settings"
              }
            }
          }
        }
      },
      "in_dhcp_ipv4_relay_edit_write": {
        "title": "request write DHCPv4 relay edit",
        "description": "Edit DHCPv4 relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv4 relay name"
          },
          "settings": {
            "$ref": "#/components/schemas/common_dhcp_relay_config",
            "description": "DHCPv4 relay settings"
          }
        }
      },
      "in_dhcp_ipv4_relay_delete_write": {
        "title": "request write DHCPv4 relay delete",
        "description": "Delte DHCPv4 relay configuration",
        "type": "object",
        "required": [
          "relay_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv4 relay name"
          }
        }
      },
      "out_dhcp_ipv4_relay_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP relay list",
        "description": "Result of reading DHCP relay list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv4 relay names",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv4 relay name"
            }
          }
        }
      },
      "in_dhcp_ipv4_relay_server_add_write": {
        "title": "request write DHCPv4 relay server add",
        "description": "Add DHCPv4 server to relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv4 relay name"
          },
          "ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Server IPv4 address"
          }
        }
      },
      "in_dhcp_ipv4_relay_server_delete_write": {
        "title": "request write DHCPv4 relay server delete",
        "description": "Remove DHCPv4 server from relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "ip_address"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv4 relay name"
          },
          "ip_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Server IPv4 address"
          }
        }
      },
      "out_dhcp_ipv4_relay_server_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP relay server list",
        "description": "Result of reading DHCP relay server list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv4 relay servers IPv4 addresses",
            "items": {
              "$ref": "#/components/schemas/IP_ADDR",
              "description": "Server IPv4 address"
            }
          }
        }
      },
      "in_dhcp_ipv4_relay_interface_add_write": {
        "title": "request write DHCPv4 relay interface add",
        "description": "Add DHCPv4 interface to relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv4 relay name"
          },
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface system name"
          }
        }
      },
      "in_dhcp_ipv4_relay_interface_delete_write": {
        "title": "request write DHCPv4 relay interface delete",
        "description": "Remove DHCPv4 interface from relay configuration",
        "type": "object",
        "required": [
          "relay_name",
          "interface_name"
        ],
        "additionalProperties": false,
        "properties": {
          "relay_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCPv4 relay name"
          },
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface system name"
          }
        }
      },
      "out_dhcp_ipv4_relay_interface_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP relay interface list",
        "description": "Result of reading DHCP relay interface list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of DHCPv4 relay interfaces names",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv4 relay interface name"
            }
          }
        }
      },
      "common_dhcp_client_config": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "config_name"
        ],
        "properties": {
          "config_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Config name"
          },
          "select_timeout": {
            "type": "object",
            "additionalProperties": false,
            "description": "select-timeout parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "retry": {
            "type": "object",
            "additionalProperties": false,
            "description": "retry parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "reboot": {
            "type": "object",
            "additionalProperties": false,
            "description": "reboot parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "timeout": {
            "type": "object",
            "additionalProperties": false,
            "description": "timeout parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "initial_interval": {
            "type": "object",
            "additionalProperties": false,
            "description": "initial-interval parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/UINT",
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          }
        }
      },
      "common_dhcp_client_config_read": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "config_name"
        ],
        "properties": {
          "config_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Config name"
          },
          "select_timeout": {
            "type": "object",
            "additionalProperties": false,
            "description": "select-timeout parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "minimum": 0,
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "retry": {
            "type": "object",
            "additionalProperties": false,
            "description": "retry parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "minimum": 0,
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "reboot": {
            "type": "object",
            "additionalProperties": false,
            "description": "reboot parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "minimum": 0,
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "timeout": {
            "type": "object",
            "additionalProperties": false,
            "description": "timeout parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "minimum": 0,
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          },
          "initial_interval": {
            "type": "object",
            "additionalProperties": false,
            "description": "initial-interval parameter",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "minimum": 0,
                "description": "Time value"
              },
              "units": {
                "$ref": "#/components/schemas/TIME_RESOLUTION",
                "description": "Time units"
              }
            }
          }
        }
      },
      "in_dhcp_client_config_write": {
        "title": "request write DHCP client config",
        "description": "Add new or edit existing DHCP client config",
        "type": "object",
        "required": [
          "config"
        ],
        "additionalProperties": false,
        "properties": {
          "config": {
            "$ref": "#/components/schemas/common_dhcp_client_config",
            "description": "Config"
          }
        }
      },
      "out_dhcp_client_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP client config",
        "description": "Result of reading DHCP client config",
        "properties": {
          "result": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": [
              "config"
            ],
            "properties": {
              "config": {
                "$ref": "#/components/schemas/common_dhcp_client_config_read",
                "required": [
                  "config_name",
                  "select_timeout",
                  "retry",
                  "reboot",
                  "timeout",
                  "initial_interval"
                ],
                "description": "Config"
              }
            }
          }
        }
      },
      "out_dhcp_client_config_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP client config list",
        "description": "Result of reading DHCP client config list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of config names for DHCP clients",
            "items": {
              "$ref": "#/components/schemas/STRING",
              "description": "Config name"
            }
          }
        }
      },
      "in_dhcp_client_config_delete_write": {
        "title": "request write delete DHCP client config",
        "description": "Delete existing DHCP client config",
        "type": "object",
        "required": [
          "config_name"
        ],
        "additionalProperties": false,
        "properties": {
          "config_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Config name"
          }
        }
      },
      "out_dhcp_client_config_interfaces_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DHCP client config interfaces list",
        "description": "Result of reading DHCP client config interfaces list",
        "properties": {
          "result": {
            "type": "array",
            "description": "Array of interface names for DHCP client config",
            "items": {
              "$ref": "#/components/schemas/IFNAME",
              "description": "Interface name"
            }
          }
        }
      },
      "in_dhcp_client_interfaces_clear_leases_write": {
        "title": "request write DHCP client clear leases",
        "description": "Clear leases for DHCP client",
        "type": "object",
        "required": [
          "interface_name",
          "ip_version"
        ],
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface name"
          },
          "ip_version": {
            "type": "integer",
            "enum": [
              4,
              6
            ],
            "description": "Interface ip version"
          }
        }
      },
      "out_log_capabilities_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "responce to reading log capabilities",
        "description": "Result reading log capabilities",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "files_quantity",
              "threshold_size",
              "rotation_interval"
            ],
            "additionalProperties": false,
            "description": "log-file properties",
            "properties": {
              "files_quantity": {
                "$ref": "#/components/schemas/UINT",
                "description": "number of archieve files"
              },
              "threshold_size": {
                "$ref": "#/components/schemas/UINT_1_10240",
                "description": "Set threshold size for log file in kBytes"
              },
              "rotation_interval": {
                "$ref": "#/components/schemas/UINT",
                "description": "rotation interval in seconds"
              }
            }
          }
        }
      },
      "in_log_capabilities_write": {
        "description": "Modify log capabilities",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "files_quantity": {
            "oneOf": [
              {
                "type": "null",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT",
                "description": "number of archieve files"
              }
            ]
          },
          "threshold_size": {
            "oneOf": [
              {
                "type": "null",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT_1_10240",
                "description": "Set threshold size for log file in kBytes"
              }
            ]
          },
          "rotation_interval": {
            "oneOf": [
              {
                "type": "null",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT",
                "description": "rotation interval in seconds"
              }
            ]
          }
        }
      },
      "in_clear_log_write": {
        "description": "Clear logs",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "all": {
            "type": "boolean",
            "description": "True to remove archives as well"
          }
        }
      },
      "out_log_show_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response showing logs",
        "description": "Result of reading logs",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "aborted",
              "errorCode",
              "stdout",
              "stderr"
            ],
            "additionalProperties": false,
            "properties": {
              "aborted": {
                "type": "boolean"
              },
              "errorCode": {
                "type": "integer"
              },
              "stdout": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "stderr": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "log_type": {
        "type": "string",
        "oneOf": [
          {
            "const": "syslog",
            "description": "system log"
          },
          {
            "const": "kernel",
            "description": "OS kernel log"
          },
          {
            "const": "authentication",
            "description": "authentication log"
          },
          {
            "const": "command-history",
            "description": "command history log"
          },
          {
            "const": "daemon",
            "description": "daemon log"
          },
          {
            "const": "snort",
            "description": "Snort log"
          },
          {
            "const": "pppoe-server",
            "description": "PPPoE server logs"
          },
          {
            "const": "pptp-server",
            "description": "PPTP server logs"
          },
          {
            "const": "system-integrity",
            "description": "system integrity log"
          },
          {
            "const": "webback",
            "description": "web-backend/restapi log"
          },
          {
            "const": "ip-pim",
            "description": "pim ipv4 routing daemon log"
          },
          {
            "const": "ipv6-pim",
            "description": "pim ipv6 routing daemon log"
          },
          {
            "const": "vpn",
            "description": "OpeVPN server/client logs"
          },
          {
            "const": "access-list",
            "description": "access list logs"
          }
        ]
      },
      "log_host": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IP address of the server"
          },
          {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "IPv6 address of the server"
          },
          {
            "$ref": "#/components/schemas/FQDN",
            "description": "FQDN of the server"
          }
        ]
      },
      "log_bind": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IPv4 address to bind"
          },
          {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "IPv6 address to bind"
          },
          {
            "$ref": "#/components/schemas/IFNAME",
            "description": "interface name to bind"
          }
        ],
        "description": "bind address/ip"
      },
      "log_facility": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/LOGGING_FACILITIES",
            "description": "category of logged messages to syslog"
          },
          {
            "type": "string",
            "const": "all"
          }
        ]
      },
      "log_severity": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SEVERITY_LEVEL",
            "description": "severity level"
          },
          {
            "type": "string",
            "const": "all"
          }
        ]
      },
      "log_facility_list": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "facility",
            "severity"
          ],
          "properties": {
            "facility": {
              "$ref": "#/components/schemas/log_facility",
              "description": "category of logged messages to syslog"
            },
            "severity": {
              "$ref": "#/components/schemas/log_severity",
              "description": "severity level"
            }
          }
        }
      },
      "rsyslog_params": {
        "type": "object",
        "unevaluatedProperties": false,
        "oneOf": [
          {
            "title": "ipv4 udp",
            "required": [
              "ip"
            ],
            "properties": {
              "ip": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "Remote syslog server IP address"
              },
              "port": {
                "$ref": "#/components/schemas/UINT16",
                "description": "Remote syslog server port (514 by default)"
              },
              "protocol": {
                "type": "string",
                "const": "udp",
                "description": "Protocol UDP"
              },
              "bind": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "bind address"
                  },
                  {
                    "$ref": "#/components/schemas/IFNAME",
                    "description": "bind interface"
                  }
                ]
              },
              "vrf": {
                "$ref": "#/components/schemas/VRF",
                "description": "VRF name"
              }
            }
          },
          {
            "title": "ipv4 tcp",
            "required": [
              "ip",
              "protocol"
            ],
            "properties": {
              "ip": {
                "$ref": "#/components/schemas/IP_ADDR",
                "description": "Remote syslog server IP address"
              },
              "port": {
                "$ref": "#/components/schemas/UINT16",
                "description": "Remote syslog server port (514 by default)"
              },
              "protocol": {
                "type": "string",
                "const": "tcp",
                "description": "Protocol UDP"
              },
              "bind": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "bind address"
                  },
                  {
                    "$ref": "#/components/schemas/IFNAME",
                    "description": "bind interface"
                  }
                ]
              },
              "vrf": {
                "$ref": "#/components/schemas/VRF",
                "description": "VRF name"
              }
            }
          },
          {
            "title": "ipv6 udp",
            "required": [
              "ip"
            ],
            "properties": {
              "ip": {
                "$ref": "#/components/schemas/IPV6_ADDR",
                "description": "Remote syslog server IPv6 address"
              },
              "port": {
                "$ref": "#/components/schemas/UINT16",
                "description": "Remote syslog server port (514 by default)"
              },
              "protocol": {
                "type": "string",
                "const": "udp",
                "description": "Protocol UDP"
              },
              "bind": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IPV6_ADDR",
                    "description": "bind address"
                  },
                  {
                    "$ref": "#/components/schemas/IFNAME",
                    "description": "bind interface"
                  }
                ]
              },
              "vrf": {
                "$ref": "#/components/schemas/VRF",
                "description": "VRF name"
              }
            }
          },
          {
            "title": "ipv6 tcp",
            "required": [
              "ip",
              "protocol"
            ],
            "properties": {
              "ip": {
                "$ref": "#/components/schemas/IPV6_ADDR",
                "description": "Remote syslog server IPv6 address"
              },
              "port": {
                "$ref": "#/components/schemas/UINT16",
                "description": "Remote syslog server port (514 by default)"
              },
              "protocol": {
                "type": "string",
                "const": "tcp",
                "description": "Protocol UDP"
              },
              "bind": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IPV6_ADDR",
                    "description": "bind address"
                  },
                  {
                    "$ref": "#/components/schemas/IFNAME",
                    "description": "bind interface"
                  }
                ]
              },
              "vrf": {
                "$ref": "#/components/schemas/VRF",
                "description": "VRF name"
              }
            }
          }
        ]
      },
      "log_capability_r": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "log_type"
        ],
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/log_type",
            "description": "log type"
          },
          "files_quantity": {
            "$ref": "#/components/schemas/UINT",
            "description": "number of archieve files"
          },
          "threshold_size": {
            "$ref": "#/components/schemas/UINT_1_10240",
            "description": "Set threshold size for log file in kBytes"
          },
          "rotation_interval": {
            "$ref": "#/components/schemas/UINT",
            "description": "rotation interval in seconds"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "daemon"
                }
              }
            },
            "then": {
              "required": [
                "level"
              ],
              "properties": {
                "level": {
                  "$ref": "#/components/schemas/LOGGING_LEVEL",
                  "description": "daemon logging level"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "webback"
                }
              }
            },
            "then": {
              "required": [
                "level"
              ],
              "properties": {
                "level": {
                  "$ref": "#/components/schemas/LOGGING_LEVEL",
                  "description": "web-backend logging level"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "syslog"
                }
              }
            },
            "then": {
              "required": [
                "server",
                "facility_list",
                "rate",
                "burst"
              ],
              "properties": {
                "facility_list": {
                  "$ref": "#/components/schemas/log_facility_list",
                  "description": "categories of logged messages to syslog"
                },
                "rate": {
                  "$ref": "#/components/schemas/UINT",
                  "description": "logging rate"
                },
                "burst": {
                  "$ref": "#/components/schemas/UINT",
                  "description": "Amount of messages, that have to occur in the time limit"
                },
                "server": {
                  "oneOf": [
                    {
                      "type": "string",
                      "const": "local",
                      "title": "local",
                      "description": "local syslog parameters"
                    },
                    {
                      "$ref": "#/components/schemas/rsyslog_params",
                      "title": "remote",
                      "description": "remote syslog parameters"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "out_log_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading log capability",
        "description": "Result of reading results of reading log capability",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/log_capability_r",
            "description": "log capability (per log type)"
          }
        }
      },
      "log_capability_w": {
        "description": "Modify log capabilities",
        "type": "object",
        "required": [
          "log_type"
        ],
        "unevaluatedProperties": false,
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/log_type",
            "description": "log type"
          },
          "files_quantity": {
            "oneOf": [
              {
                "type": "null",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT",
                "description": "number of archieve files"
              }
            ]
          },
          "threshold_size": {
            "oneOf": [
              {
                "type": "null",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT_1_10240",
                "description": "Set threshold size for log file in kBytes"
              }
            ]
          },
          "rotation_interval": {
            "oneOf": [
              {
                "type": "null",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT",
                "description": "rotation interval in seconds"
              }
            ]
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "daemon"
                }
              }
            },
            "then": {
              "required": [
                "level"
              ],
              "properties": {
                "level": {
                  "oneOf": [
                    {
                      "type": "null",
                      "description": "set to default"
                    },
                    {
                      "$ref": "#/components/schemas/LOGGING_LEVEL",
                      "description": "daemon logging level"
                    }
                  ]
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "webback"
                }
              }
            },
            "then": {
              "required": [
                "level"
              ],
              "properties": {
                "level": {
                  "oneOf": [
                    {
                      "type": "null",
                      "description": "set to default"
                    },
                    {
                      "$ref": "#/components/schemas/LOGGING_LEVEL",
                      "description": "web-backend logging level"
                    }
                  ]
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "syslog"
                }
              }
            },
            "then": {
              "properties": {
                "facility_list": {
                  "$ref": "#/components/schemas/log_facility_list",
                  "description": "categories of logged messages to syslog"
                },
                "rate": {
                  "oneOf": [
                    {
                      "type": "null",
                      "description": "set to default"
                    },
                    {
                      "$ref": "#/components/schemas/UINT",
                      "description": "logging rate"
                    }
                  ]
                },
                "burst": {
                  "oneOf": [
                    {
                      "type": "null",
                      "description": "set to default"
                    },
                    {
                      "$ref": "#/components/schemas/UINT",
                      "description": "Amount of messages, that have to occur in the time limit"
                    }
                  ]
                },
                "server": {
                  "oneOf": [
                    {
                      "type": "string",
                      "const": "local",
                      "title": "local",
                      "description": "local syslog parameters"
                    },
                    {
                      "$ref": "#/components/schemas/rsyslog_params",
                      "title": "remote",
                      "description": "remote syslog parameters"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "in_log_capability_write": {
        "description": "Modify log capabilities",
        "type": "object",
        "required": [
          "capabilities"
        ],
        "additionalProperties": false,
        "properties": {
          "capabilities": {
            "$ref": "#/components/schemas/log_capability_w",
            "description": "capability per log type"
          }
        }
      },
      "in_log_show_settings": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "log_type"
        ],
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/log_type",
            "description": "log type"
          },
          "lines": {
            "$ref": "#/components/schemas/UINT_1_1000",
            "description": "number of last lines, 1000 is default"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "snort"
                }
              }
            },
            "then": {
              "required": [
                "iface"
              ],
              "properties": {
                "iface": {
                  "$ref": "#/components/schemas/snort_iface",
                  "description": "SNORT interface"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "log_type": {
                  "type": "string",
                  "const": "vpn"
                }
              }
            },
            "then": {
              "required": [
                "vpn_type",
                "vpn_name"
              ],
              "properties": {
                "vpn_type": {
                  "type": "string",
                  "enum": [
                    "server",
                    "client"
                  ],
                  "description": "server or client"
                },
                "vpn_name": {
                  "$ref": "#/components/schemas/STRING",
                  "description": "VPN name"
                }
              }
            }
          },
          {
            "if": {
              "oneOf": [
                {
                  "properties": {
                    "log_type": {
                      "type": "string",
                      "const": "pppoe-server"
                    }
                  }
                },
                {
                  "properties": {
                    "log_type": {
                      "type": "string",
                      "const": "pptp-server"
                    }
                  }
                }
              ]
            },
            "then": {
              "required": [
                "server_name"
              ],
              "properties": {
                "server_name": {
                  "$ref": "#/components/schemas/STRING",
                  "description": "server name"
                },
                "server_log_type": {
                  "type": "string",
                  "enum": [
                    "emerg",
                    "fail",
                    "core"
                  ],
                  "description": "type of server log: emergency, failure, core. If not set it displays common information log"
                }
              }
            }
          }
        ]
      },
      "in_log_show_write": {
        "description": "Begin displaying the log",
        "type": "object",
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/in_log_show_settings",
            "description": "show settings"
          }
        }
      },
      "in_log_clear_settings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "log_type"
        ],
        "properties": {
          "log_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/log_type",
                "description": "log type"
              },
              {
                "type": "string",
                "const": "all",
                "description": "remove all logs"
              }
            ]
          }
        }
      },
      "in_log_clear_write": {
        "description": "Clear logs",
        "type": "object",
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/in_log_clear_settings",
            "description": "clear settings"
          }
        }
      },
      "in_log_copy_write": {
        "description": "Begin copying the log",
        "type": "object",
        "required": [
          "log_type"
        ],
        "additionalProperties": false,
        "properties": {
          "log_type": {
            "$ref": "#/components/schemas/log_type",
            "description": "log type"
          },
          "destination": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "title": "flash",
                "description": "Use flash",
                "required": [
                  "dev_name",
                  "dir_name"
                ],
                "properties": {
                  "dev_name": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Device name"
                  },
                  "dir_name": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Specify the directory"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "TFTP",
                "required": [
                  "protocol",
                  "host",
                  "remotedir"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "tftp",
                    "description": "TFTP source"
                  },
                  "host": {
                    "$ref": "#/components/schemas/log_host",
                    "description": "host ip/name"
                  },
                  "bind": {
                    "$ref": "#/components/schemas/log_bind",
                    "description": "bind interface/ip"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "remotedir": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Directory on the remote server"
                  },
                  "timeout": {
                    "$ref": "#/components/schemas/UINT_1_120",
                    "description": "Transaction timeout, seconds, default 10"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "FTP",
                "required": [
                  "protocol",
                  "host",
                  "remotedir"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "ftp",
                    "description": "FTP source"
                  },
                  "host": {
                    "$ref": "#/components/schemas/log_host",
                    "description": "host ip/name"
                  },
                  "bind": {
                    "$ref": "#/components/schemas/log_bind",
                    "description": "bind interface/ip"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "remotedir": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Directory on the remote server"
                  },
                  "timeout": {
                    "$ref": "#/components/schemas/UINT_1_120",
                    "description": "Transaction timeout, seconds, default 10"
                  },
                  "user": {
                    "type": "string",
                    "description": "user for remote host"
                  },
                  "password": {
                    "type": "string",
                    "description": "password for remote host"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "SFTP",
                "required": [
                  "protocol",
                  "host",
                  "remotedir",
                  "user",
                  "password"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "sftp",
                    "description": "SFTP source"
                  },
                  "host": {
                    "$ref": "#/components/schemas/log_host",
                    "description": "host ip/name"
                  },
                  "bind": {
                    "$ref": "#/components/schemas/log_bind",
                    "description": "bind interface/ip"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "remotedir": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Directory on the remote server"
                  },
                  "timeout": {
                    "$ref": "#/components/schemas/UINT_1_120",
                    "description": "Transaction timeout, seconds, default 10"
                  },
                  "user": {
                    "type": "string",
                    "description": "user for remote host"
                  },
                  "password": {
                    "type": "string",
                    "description": "password for remote host"
                  }
                }
              }
            ]
          }
        }
      },
      "out_log_script_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading results of script execution",
        "description": "Result of reading results of script execution",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "aborted",
              "errorCode",
              "stdout",
              "stderr"
            ],
            "additionalProperties": false,
            "properties": {
              "aborted": {
                "type": "boolean"
              },
              "errorCode": {
                "type": "integer"
              },
              "stdout": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "stderr": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "out_usergroups_serviceuser_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read serviceuser",
        "description": "Result of reading serviceuser status",
        "properties": {
          "result": {
            "type": "object",
            "description": "serviceuser status",
            "unevaluatedProperties": false,
            "required": [
              "enabled"
            ],
            "properties": {
              "enabled": {
                "description": "serviceuser enabled",
                "type": "boolean"
              },
              "active_sessions": {
                "description": "number of active serviceuser sessions",
                "type": "integer"
              },
              "time_left": {
                "description": "Time left until serviceuser is disabled",
                "type": "string"
              }
            }
          }
        }
      },
      "out_usergroups_users_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read users",
        "description": "Result of reading users settings",
        "properties": {
          "result": {
            "type": "object",
            "description": "users settings",
            "unevaluatedProperties": false,
            "required": [
              "users"
            ],
            "properties": {
              "users": {
                "type": "array",
                "description": "array of users settings",
                "items": {
                  "type": "object",
                  "description": "user settings",
                  "required": [
                    "username",
                    "type",
                    "privilege"
                  ],
                  "unevaluatedProperties": false,
                  "properties": {
                    "username": {
                      "description": "Name of user",
                      "$ref": "#/components/schemas/USERNAME_UP_TO_31"
                    },
                    "group": {
                      "description": "user's group (for local users)",
                      "$ref": "#/components/schemas/WORD_UP_TO_31"
                    },
                    "type": {
                      "description": "user type (based on auth method)",
                      "oneOf": [
                        {
                          "const": "local",
                          "description": "local user"
                        },
                        {
                          "const": "radius",
                          "description": "RADIUS user"
                        },
                        {
                          "const": "tacacs",
                          "description": "TACACS user"
                        }
                      ]
                    },
                    "privilege": {
                      "description": "user's privilege level",
                      "$ref": "#/components/schemas/UINT4"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_usergroups_privilege_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read privilege",
        "description": "Result of reading current privilege",
        "properties": {
          "result": {
            "type": "object",
            "description": "privilege level for current session",
            "unevaluatedProperties": false,
            "required": [
              "privilege"
            ],
            "properties": {
              "privilege": {
                "description": "privilege level for current session",
                "$ref": "#/components/schemas/UINT4"
              }
            }
          }
        }
      },
      "in_usergroups_groups_add_write": {
        "title": "request write group add",
        "description": "Add new group or change privilege of existing group",
        "type": "object",
        "required": [
          "group",
          "privilege"
        ],
        "properties": {
          "group": {
            "description": "group name",
            "$ref": "#/components/schemas/WORD_UP_TO_31"
          },
          "privilege": {
            "description": "privilege level for group",
            "$ref": "#/components/schemas/UINT4"
          }
        }
      },
      "in_usergroups_groups_delete_write": {
        "title": "request write group delete",
        "description": "Delete user group",
        "type": "object",
        "required": [
          "group"
        ],
        "properties": {
          "group": {
            "description": "group name",
            "$ref": "#/components/schemas/WORD_UP_TO_31"
          }
        }
      },
      "out_usergroups_groups_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read groups list",
        "description": "Result of reading a list of all groups names",
        "properties": {
          "result": {
            "type": "array",
            "description": "array of groups names",
            "items": {
              "$ref": "#/components/schemas/WORD_UP_TO_31",
              "description": "group name"
            }
          }
        }
      },
      "out_usergroups_groups_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read groups",
        "description": "Result of reading all groups settings",
        "properties": {
          "result": {
            "type": "object",
            "description": "groups settings",
            "required": [
              "groups"
            ],
            "unevaluatedProperties": false,
            "properties": {
              "groups": {
                "type": "array",
                "description": "array of groups settings",
                "items": {
                  "type": "object",
                  "description": "group settings",
                  "required": [
                    "group",
                    "privilege"
                  ],
                  "unevaluatedProperties": false,
                  "properties": {
                    "group": {
                      "description": "group name",
                      "$ref": "#/components/schemas/WORD_UP_TO_31"
                    },
                    "privilege": {
                      "description": "privilege level for group",
                      "$ref": "#/components/schemas/UINT4"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "in_usergroups_force-logout_write": {
        "title": "request write force-logout",
        "description": "Close all active sessions for given user",
        "type": "object",
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "description": "Name of user",
            "$ref": "#/components/schemas/USERNAME_UP_TO_31"
          },
          "type": {
            "description": "user type to logout (all if not specified)",
            "oneOf": [
              {
                "const": "all",
                "description": "Logout all users with given name"
              },
              {
                "const": "local",
                "description": "Logout local users"
              },
              {
                "const": "radius",
                "description": "Logout RADIUS users"
              },
              {
                "const": "tacacs",
                "description": "Logout TACACS+ users"
              },
              {
                "const": "remote",
                "description": "Logout both TACACS+ and RADIUS users"
              }
            ]
          }
        }
      },
      "out_usergroups_users_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read users list",
        "description": "Result of reading a list of all users names",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "local": {
                "type": "array",
                "description": "array of local users names",
                "items": {
                  "$ref": "#/components/schemas/USERNAME_UP_TO_31",
                  "description": "user name"
                }
              },
              "remote": {
                "type": "array",
                "description": "array of remote users names",
                "items": {
                  "$ref": "#/components/schemas/USERNAME_UP_TO_31",
                  "description": "user name"
                }
              }
            }
          }
        }
      },
      "in_usergroups_users_add_write": {
        "title": "request write user add",
        "description": "Create user account",
        "type": "object",
        "required": [
          "username",
          "group",
          "password"
        ],
        "properties": {
          "username": {
            "description": "Name of new user",
            "$ref": "#/components/schemas/USERNAME_UP_TO_31"
          },
          "group": {
            "description": "New user's group",
            "$ref": "#/components/schemas/WORD_UP_TO_31"
          },
          "password": {
            "description": "New user's password",
            "$ref": "#/components/schemas/PASSWD_STRING"
          }
        }
      },
      "in_usergroups_users_delete_write": {
        "title": "request write user delete",
        "description": "Delete user account",
        "type": "object",
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "description": "Name of user",
            "$ref": "#/components/schemas/USERNAME_UP_TO_31"
          },
          "force": {
            "description": "Delete even if the user is logged in",
            "type": "boolean"
          }
        }
      },
      "in_usergroups_serviceuser_write": {
        "title": "request write serviceuser",
        "description": "Enable serviceuser for X hours and return new password or disable serviceuser",
        "type": "object",
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "type": "object",
            "unevaluatedProperties": false,
            "oneOf": [
              {
                "required": [
                  "enable",
                  "time"
                ],
                "properties": {
                  "enable": {
                    "description": "Enable serviceuser",
                    "type": "boolean",
                    "const": true
                  },
                  "time": {
                    "description": "Enable period in hours",
                    "$ref": "#/components/schemas/UINT16"
                  }
                }
              },
              {
                "required": [
                  "enable"
                ],
                "properties": {
                  "enable": {
                    "description": "Disable serviceuser",
                    "type": "boolean",
                    "const": false
                  }
                }
              }
            ]
          }
        }
      },
      "in_usergroups_users_edit_write": {
        "title": "request write user edit",
        "description": "Edit user information",
        "type": "object",
        "required": [
          "username"
        ],
        "additionalProperties": false,
        "properties": {
          "username": {
            "description": "Name of the edited user",
            "$ref": "#/components/schemas/USERNAME_UP_TO_31"
          },
          "group": {
            "description": "New group",
            "$ref": "#/components/schemas/WORD_UP_TO_31"
          },
          "password": {
            "description": "New password",
            "$ref": "#/components/schemas/PASSWD_STRING"
          }
        }
      },
      "out_usergroups_active-users_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read active-users",
        "description": "Result of reading active-users",
        "properties": {
          "result": {
            "type": "object",
            "description": "Information about current active users",
            "required": [
              "time",
              "uptime",
              "user_number",
              "load_average",
              "users"
            ],
            "additionalProperties": false,
            "properties": {
              "time": {
                "type": "string",
                "description": "The current system time"
              },
              "uptime": {
                "type": "string",
                "description": "How long the system has logged in"
              },
              "user_number": {
                "type": "string",
                "description": "The number of users currently logged in"
              },
              "load_average": {
                "type": "string",
                "description": "The average number of jobs running on the system in the last 1, 5, and 15 minutes, respectively"
              },
              "users": {
                "type": "array",
                "description": "Array of users data",
                "items": {
                  "type": "object",
                  "description": "Data for one user session",
                  "required": [
                    "USER",
                    "TTY",
                    "FROM",
                    "LOGIN",
                    "IDLE",
                    "JCPU",
                    "PCPU"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "USER": {
                      "type": "string",
                      "description": "The name of currently logged in user"
                    },
                    "TTY": {
                      "type": "string",
                      "description": "The name of the terminal the user is logging in from"
                    },
                    "FROM": {
                      "type": "string",
                      "description": "The name or IP address of the terminal or host the user is logging in from"
                    },
                    "LOGIN": {
                      "type": "string",
                      "description": "The time the user logged in, in a 24-hour format"
                    },
                    "IDLE": {
                      "type": "string",
                      "description": "The time since the user last used the terminal"
                    },
                    "JCPU": {
                      "type": "string",
                      "description": "The total run time of all system processes attached to the user's terminal"
                    },
                    "PCPU": {
                      "type": "string",
                      "description": "Elapsed time for the user's current process"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_datetime_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read datetime info",
        "description": "Result of reading datetime info",
        "properties": {
          "result": {
            "required": [
              "date",
              "time",
              "timezone",
              "str"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "time": {
                "$ref": "#/components/schemas/TIME",
                "description": "time"
              },
              "date": {
                "$ref": "#/components/schemas/DATE",
                "description": "date"
              },
              "timezone": {
                "$ref": "#/components/schemas/STRING",
                "description": "timezone name"
              },
              "str": {
                "type": "string",
                "description": "date/time in human readable format"
              }
            }
          }
        }
      },
      "in_datetime_write": {
        "description": "Modify/reset date/time/timezone",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "time": {
                        "$ref": "#/components/schemas/TIME",
                        "description": "time"
                      },
                      "date": {
                        "$ref": "#/components/schemas/DATE",
                        "description": "date"
                      },
                      "timezone": {
                        "$ref": "#/components/schemas/STRING",
                        "description": "timezone name"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_datetime_tz_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading timezones",
        "description": "Result of reading timezones list",
        "properties": {
          "result": {
            "type": "array",
            "title": "list of timezones",
            "description": "list of timezones",
            "items": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        }
      },
      "out_datetime_dst_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read DST info",
        "description": "Result of reading DST info",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "required": [
                "date",
                "time",
                "timezone",
                "scheduled"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "time": {
                  "$ref": "#/components/schemas/TIME",
                  "description": "time (UTC)"
                },
                "date": {
                  "$ref": "#/components/schemas/DATE",
                  "description": "date (UTC)"
                },
                "timezone": {
                  "$ref": "#/components/schemas/STRING",
                  "description": "timezone to apply"
                },
                "scheduled": {
                  "type": "boolean",
                  "description": "True if scheduled for execution"
                },
                "executed": {
                  "type": "string",
                  "description": "time of execution, UTC"
                }
              }
            }
          }
        }
      },
      "in_datetime_dst_write": {
        "description": "Add/delete DST info",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "time",
                      "date",
                      "timezone"
                    ],
                    "properties": {
                      "time": {
                        "$ref": "#/components/schemas/TIME",
                        "description": "time (UTC)"
                      },
                      "date": {
                        "$ref": "#/components/schemas/DATE",
                        "description": "date (UTC)"
                      },
                      "timezone": {
                        "$ref": "#/components/schemas/STRING",
                        "description": "timezone to apply"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "description": "time field might be declared with date only. If date (with optional time) are declared they specify the item to delete, if none of them defined, all the DST entries will be removed",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "anyOf": [
                      {
                        "required": [
                          "date"
                        ]
                      },
                      {
                        "not": {
                          "required": [
                            "time"
                          ]
                        }
                      }
                    ],
                    "properties": {
                      "time": {
                        "$ref": "#/components/schemas/TIME",
                        "description": "time (UTC)"
                      },
                      "date": {
                        "$ref": "#/components/schemas/DATE",
                        "description": "date (UTC)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "profile_diff_name": {
        "anyOf": [
          {
            "type": "string",
            "const": "current",
            "description": "current profile"
          },
          {
            "type": "string",
            "const": "last-loaded",
            "description": "last-loaded profile"
          },
          {
            "title": "profile",
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          },
          {
            "title": "rollback",
            "required": [
              "rollback_name"
            ],
            "properties": {
              "rollback_name": {
                "$ref": "#/components/schemas/PROFILE_NAME",
                "description": "Rollback profile name"
              }
            }
          }
        ]
      },
      "profile_name": {
        "type": "string",
        "anyOf": [
          {
            "const": "boot",
            "description": "boot profile"
          },
          {
            "const": "last-loaded",
            "description": "last-loaded profile"
          },
          {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          }
        ]
      },
      "run_config_name": {
        "type": "string",
        "anyOf": [
          {
            "const": "boot",
            "description": "Show running-config for boot profile"
          },
          {
            "const": "last-loaded",
            "description": "Show running-config for last-loaded profile"
          },
          {
            "const": "current",
            "description": "Show running-config for current system state"
          },
          {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Show running-config for profile name"
          }
        ]
      },
      "profiles_info": {
        "title": "Profile's details",
        "description": "Inforamtion about configuration profiles",
        "required": [
          "flags",
          "name",
          "saved_at",
          "saved_by",
          "size",
          "version",
          "comment"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "flags": {
            "description": "Profile's flags",
            "type": "object",
            "properties": {
              "b": {
                "type": "string",
                "const": "b",
                "description": "boot profile"
              },
              "l": {
                "type": "string",
                "const": "l",
                "description": "last loaded profile"
              },
              "m": {
                "type": "string",
                "const": "m",
                "description": "profile was modified or corrupted"
              }
            }
          },
          "name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          },
          "match_conf": {
            "type": "string",
            "description": "Matches the profile (for rollback only)"
          },
          "saved_at": {
            "type": "string",
            "description": "Date of last save"
          },
          "saved_by": {
            "type": "string",
            "description": "User who saved the profile"
          },
          "size": {
            "$ref": "#/components/schemas/STRING",
            "description": "Profile size"
          },
          "version": {
            "type": "string",
            "description": "Profile version"
          },
          "comment": {
            "type": "string",
            "description": "Profile comments"
          }
        }
      },
      "out_profiles_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "List of profiles",
        "properties": {
          "result": {
            "properties": {
              "profiles": {
                "type": "array",
                "description": "Profile information",
                "items": {
                  "$ref": "#/components/schemas/profiles_info"
                }
              }
            }
          }
        }
      },
      "out_rollback_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "List of rollback profiles",
        "properties": {
          "result": {
            "properties": {
              "profiles": {
                "type": "array",
                "description": "Profile information",
                "items": {
                  "required": [
                    "flags",
                    "name",
                    "match_conf",
                    "saved_at",
                    "saved_by",
                    "size",
                    "version",
                    "comment"
                  ],
                  "$ref": "#/components/schemas/profiles_info"
                }
              }
            }
          }
        }
      },
      "in_profile_write": {
        "title": "Write profile",
        "description": "Write configuration profile",
        "required": [
          "config_name"
        ],
        "additionalProperties": false,
        "properties": {
          "config_name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          },
          "comment": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Comments"
          }
        }
      },
      "out_profile_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Read profile",
        "description": "Read the configuration profile",
        "properties": {
          "result": {
            "type": "string",
            "description": "Content of profile"
          }
        }
      },
      "out_rollback_profile_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Read profile",
        "description": "Read the rollback profile",
        "properties": {
          "result": {
            "type": "string",
            "description": "Content of profile"
          }
        }
      },
      "in_profile_del_write": {
        "title": "Delete profile",
        "description": "Delete configuration profile",
        "required": [
          "config_name"
        ],
        "additionalProperties": false,
        "properties": {
          "config_name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          }
        }
      },
      "in_profile_boot_write": {
        "title": "Boot profile",
        "description": "Set boot configuration profile",
        "required": [
          "config_name"
        ],
        "additionalProperties": false,
        "properties": {
          "config_name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          }
        }
      },
      "in_profile_config_num_write": {
        "title": "Maximum config files number",
        "description": "Set maximum config files number",
        "required": [
          "number_of_files"
        ],
        "additionalProperties": false,
        "properties": {
          "number_of_files": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT",
                "description": "Maximum number of config files"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "No limitation"
              }
            ]
          }
        }
      },
      "out_profile_config_num_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Maximum config files number",
        "description": "Get maximum config files number",
        "properties": {
          "result": {
            "required": [
              "number_of_files"
            ],
            "properties": {
              "number_of_files": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT",
                    "description": "Maximum number of config files"
                  },
                  {
                    "$ref": "#/components/schemas/null",
                    "description": "No limitation"
                  }
                ]
              }
            }
          }
        }
      },
      "out_modules_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "List of modules",
        "properties": {
          "result": {
            "properties": {
              "modules": {
                "type": "array",
                "description": "List of modules",
                "items": {
                  "$ref": "#/components/schemas/STRING",
                  "description": "Module name"
                }
              }
            }
          }
        }
      },
      "out_sys_conf_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Show system-config",
        "description": "Show system running configuration",
        "properties": {
          "result": {
            "type": "string",
            "description": "System running configuration"
          }
        }
      },
      "out_run_conf_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Show running-config",
        "description": "Show running-config info for profile",
        "properties": {
          "result": {
            "type": "string",
            "description": "Running-config"
          }
        }
      },
      "out_rollback_run_conf_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Show rollback running-config",
        "description": "Show running-config info for rollback profile",
        "properties": {
          "result": {
            "type": "string",
            "description": "Running-config"
          }
        }
      },
      "in_profile_load_write": {
        "title": "Load profile",
        "description": "Load configuration",
        "required": [
          "profile_name"
        ],
        "additionalProperties": false,
        "properties": {
          "profile_name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          }
        }
      },
      "out_profile_load_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the request to load profile",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_profile_export_write": {
        "title": "Export profile",
        "description": "Export part of configuration",
        "required": [
          "module_name",
          "profile_from",
          "profile_to"
        ],
        "additionalProperties": false,
        "properties": {
          "module_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Exported system module name"
          },
          "profile_from": {
            "description": "Profile to export from",
            "oneOf": [
              {
                "title": "profile",
                "required": [
                  "profile_name"
                ],
                "properties": {
                  "profile_name": {
                    "$ref": "#/components/schemas/PROFILE_NAME",
                    "description": "Profile name"
                  }
                }
              },
              {
                "title": "rollback",
                "required": [
                  "rollback_name"
                ],
                "properties": {
                  "rollback_name": {
                    "$ref": "#/components/schemas/PROFILE_NAME",
                    "description": "Rollback profile name"
                  }
                }
              }
            ]
          },
          "profile_to": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile to import settings"
          }
        }
      },
      "in_profile_copy_write": {
        "title": "Copy profile",
        "description": "Copy profile",
        "required": [
          "profile_name",
          "direction",
          "mode"
        ],
        "additionalProperties": false,
        "properties": {
          "profile_name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Profile name"
          },
          "direction": {
            "oneOf": [
              {
                "type": "string",
                "const": "to",
                "description": "Copy profile from device to url/usb"
              },
              {
                "type": "string",
                "const": "from",
                "description": "Copy profile from url/usb to device"
              }
            ]
          },
          "mode": {
            "oneOf": [
              {
                "title": "flash",
                "description": "Use flash",
                "type": "object",
                "required": [
                  "dev_name",
                  "dir_name"
                ],
                "properties": {
                  "dev_name": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Device name"
                  },
                  "dir_name": {
                    "$ref": "#/components/schemas/STRING_NO_QUOTES",
                    "description": "Specify the directory"
                  }
                }
              },
              {
                "title": "url",
                "description": "Use url",
                "required": [
                  "protocol",
                  "client_ip"
                ],
                "type": "object",
                "properties": {
                  "protocol": {
                    "type": "object",
                    "description": "Specify protocol",
                    "oneOf": [
                      {
                        "title": "tftp",
                        "required": [
                          "protocol_type"
                        ],
                        "properties": {
                          "protocol_type": {
                            "type": "string",
                            "const": "tftp",
                            "description": "TFTP protocol"
                          }
                        }
                      },
                      {
                        "title": "sftp",
                        "required": [
                          "protocol_type",
                          "user_name",
                          "password"
                        ],
                        "properties": {
                          "protocol_type": {
                            "type": "string",
                            "const": "sftp",
                            "description": "SFTP protocol"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "login for remote server"
                          },
                          "password": {
                            "type": "string",
                            "description": "password for remote server"
                          }
                        }
                      },
                      {
                        "title": "ftp",
                        "required": [
                          "protocol_type",
                          "user_name",
                          "password"
                        ],
                        "properties": {
                          "protocol_type": {
                            "type": "string",
                            "const": "ftp",
                            "description": "FTP protocol"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "login for remote server"
                          },
                          "password": {
                            "type": "string",
                            "description": "password for remote server"
                          }
                        }
                      }
                    ]
                  },
                  "client_ip": {
                    "anyOf": [
                      {
                        "title": "ipv4",
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IP address of the server"
                      },
                      {
                        "title": "ipv6",
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address of the server"
                      },
                      {
                        "title": "fqdn",
                        "$ref": "#/components/schemas/FQDN",
                        "description": "fully qualified domain name"
                      }
                    ]
                  },
                  "bind": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IPv4 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IFNAME",
                        "description": "interface name to bind"
                      }
                    ],
                    "description": "bind address/ip"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "remotedir": {
                    "$ref": "#/components/schemas/STRING",
                    "description": "Directory on the remote server or flash"
                  },
                  "timeout": {
                    "$ref": "#/components/schemas/UINT_1_120",
                    "description": "Transaction timeout, seconds"
                  }
                }
              }
            ]
          }
        }
      },
      "out_profile_copy_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the request to copy profile",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_profiles_diff_write": {
        "title": "Show differences",
        "description": "Show differences in running-configs",
        "required": [
          "profile_1",
          "profile_2"
        ],
        "additionalProperties": false,
        "properties": {
          "profile_1": {
            "$ref": "#/components/schemas/profile_diff_name",
            "description": "First of the profiles to show the differences "
          },
          "profile_2": {
            "$ref": "#/components/schemas/profile_diff_name",
            "description": "Second of the profiles to show the differences "
          },
          "module_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Show differences for given module"
          }
        }
      },
      "out_profiles_diff_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Show differences",
        "description": "Show differences in running-configs",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_rollback_commit_write": {
        "title": "system commit",
        "description": "Cancel ongoing rollback procedure",
        "additionalProperties": false
      },
      "in_rollback_revert_write": {
        "title": "system revert",
        "description": "Revert system settings",
        "additionalProperties": false,
        "properties": {
          "rollback_name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Rollback profile name"
          }
        }
      },
      "out_rollback_revert_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the request to revert profile",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_rollback_del_write": {
        "title": "system clear-rollback",
        "description": "Delete rollback profile",
        "additionalProperties": false,
        "properties": {
          "rollback_name": {
            "anyOf": [
              {
                "type": "string",
                "const": "all",
                "description": "Remove all rollbacks"
              },
              {
                "$ref": "#/components/schemas/PROFILE_NAME",
                "description": "Rollback profile name"
              }
            ]
          }
        }
      },
      "in_rollback_write": {
        "title": "system rollback",
        "description": "Set rollback point and actions",
        "additionalProperties": false,
        "required": [
          "action",
          "timer_mode"
        ],
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "string",
                "const": "reload",
                "description": "Reload rollback profile (by default)"
              },
              {
                "type": "string",
                "const": "reboot",
                "description": "Reboot with rollback profile"
              }
            ]
          },
          "timer_mode": {
            "oneOf": [
              {
                "title": "time",
                "type": "object",
                "description": "Set timeout to revert (by default)",
                "required": [
                  "timer_type",
                  "timer"
                ],
                "properties": {
                  "timer_type": {
                    "type": "string",
                    "const": "time"
                  },
                  "timer": {
                    "oneOf": [
                      {
                        "type": "null",
                        "description": "Default timer: 5 minutes"
                      },
                      {
                        "$ref": "#/components/schemas/UINT_1_20",
                        "description": "Timer, minutes"
                      }
                    ]
                  }
                }
              },
              {
                "title": "idle",
                "type": "object",
                "description": "Set idle period to revert",
                "required": [
                  "timer_type",
                  "timer"
                ],
                "properties": {
                  "timer_type": {
                    "type": "string",
                    "const": "idle"
                  },
                  "timer": {
                    "oneOf": [
                      {
                        "type": "null",
                        "description": "Default timer: 1 minute"
                      },
                      {
                        "$ref": "#/components/schemas/UINT_1_20",
                        "description": "Idle timer, minutes"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "config_name": {
            "$ref": "#/components/schemas/PROFILE_NAME",
            "description": "Set profile to revert"
          },
          "comment": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "Set comment to the saved rollback profile"
          }
        }
      },
      "out_rollback_status_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "show system rollback",
        "description": "Show the status of ongoing rollback procedure",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "description": "Rollback parameters",
            "oneOf": [
              {
                "title": "active",
                "required": [
                  "state",
                  "config_name",
                  "action",
                  "timer_mode",
                  "idle_timeout",
                  "timeout"
                ],
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "type": "boolean",
                    "const": true,
                    "description": "Rollback is active"
                  },
                  "inherited_conf": {
                    "type": "string",
                    "description": "Matches profile"
                  },
                  "config_name": {
                    "$ref": "#/components/schemas/PROFILE_NAME",
                    "description": "Profile name"
                  },
                  "action": {
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "reload",
                        "description": "Reload rollback profile (by default)"
                      },
                      {
                        "type": "string",
                        "const": "reboot",
                        "description": "Reboot with rollback profile"
                      }
                    ]
                  },
                  "timer_mode": {
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "time",
                        "description": "Reload rollback profile (by default)"
                      },
                      {
                        "type": "string",
                        "const": "idle",
                        "description": "Reboot with rollback profile"
                      }
                    ]
                  },
                  "timeout": {
                    "$ref": "#/components/schemas/UINT",
                    "description": "Time remaining"
                  },
                  "idle_timeout": {
                    "oneOf": [
                      {
                        "type": "null",
                        "description": "Timer mode is not idle"
                      },
                      {
                        "$ref": "#/components/schemas/UINT",
                        "description": "Idle timeout"
                      }
                    ]
                  }
                }
              },
              {
                "title": "inactive",
                "required": [
                  "state"
                ],
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "type": "boolean",
                    "const": false,
                    "description": "Rollback is not active"
                  }
                }
              }
            ]
          }
        }
      },
      "in_rollback_config_num_write": {
        "title": "system rollback-files-number",
        "description": "Set maximum rollback config files number",
        "required": [
          "number_of_files"
        ],
        "additionalProperties": false,
        "properties": {
          "number_of_files": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT",
                "description": "Maximum number of rollback config files"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "No limitation"
              }
            ]
          }
        }
      },
      "out_rollback_config_num_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "show system rollback-files-number",
        "description": "Get maximum rollback config files number",
        "properties": {
          "result": {
            "required": [
              "number_of_files"
            ],
            "properties": {
              "number_of_files": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UINT",
                    "description": "Maximum number of rollback config files"
                  },
                  {
                    "$ref": "#/components/schemas/null",
                    "description": "No limitation"
                  }
                ]
              }
            }
          }
        }
      },
      "out_ssh_client_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "SSH client key list",
        "properties": {
          "result": {
            "title": "response to out_ssh_client_list_read request",
            "type": "object",
            "properties": {
              "keys": {
                "type": "array",
                "description": "List of ssh client key names",
                "items": {
                  "description": "Key name",
                  "$ref": "#/components/schemas/STRING"
                }
              }
            }
          }
        }
      },
      "out_ssh_client_key_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "SSH client key list",
        "properties": {
          "result": {
            "title": "response to out_ssh_client_key_read request",
            "type": "object",
            "properties": {
              "key": {
                "$ref": "#/components/schemas/SSH_KEY_STRING",
                "description": "client key string"
              }
            }
          }
        }
      },
      "in_ssh_client_key_write": {
        "required": [
          "key_type"
        ],
        "description": "Generate new ssh client key",
        "additionalProperties": false,
        "properties": {
          "key_type": {
            "type": "string"
          },
          "modulus": {
            "type": "integer"
          },
          "key_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "Specify key name. If not specified, default will be used as the key-name"
          }
        },
        "oneOf": [
          {
            "title": "RSA",
            "properties": {
              "key_type": {
                "const": "rsa",
                "description": "RSA key type"
              },
              "modulus": {
                "description": "Host key length",
                "oneOf": [
                  {
                    "const": 1024,
                    "description": "1024 bits"
                  },
                  {
                    "const": 2048,
                    "description": "2048 bits"
                  },
                  {
                    "const": 4096,
                    "description": "4096 bits"
                  },
                  {
                    "const": 8192,
                    "description": "8192 bits"
                  }
                ]
              }
            }
          },
          {
            "title": "DSA",
            "properties": {
              "key_type": {
                "const": "dsa",
                "description": "DSA key type"
              },
              "modulus": {
                "const": 1024,
                "description": "Host key length 1024 bits"
              }
            }
          },
          {
            "title": "ECDSA",
            "properties": {
              "key_type": {
                "const": "ecdsa",
                "description": "ECDSA key type"
              },
              "modulus": {
                "description": "Host key length",
                "oneOf": [
                  {
                    "const": 256,
                    "description": "1024 bits"
                  },
                  {
                    "const": 384,
                    "description": "2048 bits"
                  },
                  {
                    "const": 521,
                    "description": "4096 bits"
                  }
                ]
              }
            }
          },
          {
            "title": "ED25519",
            "not": {
              "required": [
                "modulus"
              ]
            },
            "properties": {
              "key_type": {
                "const": "ed25519",
                "description": "ED25519 key type"
              }
            }
          }
        ]
      },
      "out_ssh_client_key_get_result_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the key generation request",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_ssh_client_key_delete_write": {
        "title": "Remove SSH client key",
        "description": "Remove SSH client key",
        "additionalProperties": false,
        "properties": {
          "key_name": {
            "oneOf": [
              {
                "title": "key name",
                "$ref": "#/components/schemas/STRING",
                "description": "Specify key name"
              },
              {
                "title": "default key",
                "$ref": "#/components/schemas/null",
                "description": "If the key name is not specified, the default key will be deleted"
              }
            ]
          }
        }
      },
      "in_ssh_client_nokey_write": {
        "title": "Remove hostkey",
        "description": "Remove hostkey of remote server from known hosts list",
        "additionalProperties": false,
        "properties": {
          "remote_addr": {
            "oneOf": [
              {
                "title": "remote server",
                "$ref": "#/components/schemas/STRING",
                "description": "Remote server address"
              },
              {
                "title": "all hostkeys",
                "$ref": "#/components/schemas/null",
                "description": "all hostkeys will be deleted"
              }
            ]
          }
        }
      },
      "out_ssh_client_nokey_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the request to remove the key",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_ssh_client_key_copy_write": {
        "title": "Copy client SSH key",
        "description": "Copy client SSH key to remote server",
        "required": [
          "remote_addr",
          "passwd"
        ],
        "additionalProperties": false,
        "properties": {
          "remote_addr": {
            "$ref": "#/components/schemas/REMOTE_ADDR",
            "description": "Remote server address"
          },
          "passwd": {
            "$ref": "#/components/schemas/STRING",
            "description": "Password for remote server"
          },
          "port": {
            "oneOf": [
              {
                "title": "port number",
                "$ref": "#/components/schemas/UINT_1_65535",
                "description": "Specify port number"
              },
              {
                "title": "default port",
                "$ref": "#/components/schemas/null",
                "description": "If the port number is not specified, the default port is 22"
              }
            ]
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name"
          },
          "key_name": {
            "oneOf": [
              {
                "title": "key name",
                "$ref": "#/components/schemas/STRING",
                "description": "Specify key name"
              },
              {
                "title": "default key",
                "$ref": "#/components/schemas/null",
                "description": "If the key name is not specified, the default key will be deleted"
              }
            ]
          },
          "protocol": {
            "description": "Specify SSH protocol version",
            "oneOf": [
              {
                "title": "v1",
                "type": "string",
                "const": "1",
                "description": "v1 SSH protocol version"
              },
              {
                "title": "v2",
                "type": "string",
                "const": "2",
                "description": "v2 SSH protocol version"
              }
            ]
          },
          "cipher": {
            "type": "string",
            "description": "Specify cipher",
            "enum": [
              "3des-cbc",
              "aes128-cbc",
              "aes192-cbc",
              "aes256-cbc",
              "rijndael-cbc@lysator.liu.se",
              "aes128-ctr",
              "aes192-ctr",
              "aes256-ctr",
              "aes128-gcm@openssh.com",
              "aes256-gcm@openssh.com",
              "chacha20-poly1305@openssh.com"
            ]
          },
          "kex": {
            "description": "Specify key exchange algorithm",
            "type": "string",
            "enum": [
              "diffie-hellman-group1-sha1",
              "diffie-hellman-group14-sha1",
              "diffie-hellman-group14-sha256 diffie-hellman-group16-sha512",
              "diffie-hellman-group18-sha512",
              "diffie-hellman-group-exchange-sha1",
              "diffie-hellman-group-exchange-sha256",
              "ecdh-sha2-nistp256",
              "ecdh-sha2-nistp384",
              "ecdh-sha2-nistp521",
              "curve25519-sha256",
              "curve25519-sha256@libssh.org"
            ]
          },
          "mac": {
            "type": "string",
            "description": "Specify MAC algorithm",
            "enum": [
              "hmac-sha1",
              "hmac-sha1-96",
              "hmac-sha2-256",
              "hmac-sha2-512",
              "hmac-md5",
              "hmac-md5-96",
              "umac-64@openssh.com",
              "umac-128@openssh.com",
              "hmac-sha1-etm@openssh.com",
              "hmac-sha1-96-etm@openssh.com",
              "hmac-sha2-256-etm@openssh.com",
              "hmac-sha2-512-etm@openssh.com",
              "hmac-md5-etm@openssh.com",
              "hmac-md5-96-etm@openssh.com",
              "umac-64-etm@openssh.com",
              "umac-128-etm@openssh.com"
            ]
          },
          "hostkey": {
            "type": "string",
            "description": "Specify host key algorithm of remote SSH server",
            "enum": [
              "ssh-ed25519",
              "ssh-ed25519-cert-v01@openssh.com",
              "ssh-rsa",
              "ssh-dss",
              "ecdsa-sha2-nistp256",
              "ecdsa-sha2-nistp384",
              "ecdsa-sha2-nistp521",
              "ssh-rsa-cert-v01@openssh.com",
              "ssh-dss-cert-v01@openssh.com",
              "ecdsa-sha2-nistp256-cert-v01@openssh.com",
              "ecdsa-sha2-nistp384-cert-v01@openssh.com",
              "ecdsa-sha2-nistp521-cert-v01@openssh.com"
            ]
          },
          "source": {
            "description": "Specify IP address or address family of the connection",
            "oneOf": [
              {
                "title": "IPv4",
                "type": "object",
                "properties": {
                  "address_family": {
                    "const": "inet"
                  },
                  "ip_addr": {
                    "oneOf": [
                      {
                        "title": "IPv4 address",
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IPv4 source address"
                      },
                      {
                        "title": "IPv4 family",
                        "$ref": "#/components/schemas/null",
                        "description": "IPv4 address family"
                      }
                    ]
                  }
                }
              },
              {
                "title": "IPv6",
                "type": "object",
                "properties": {
                  "address_family": {
                    "const": "inet6"
                  },
                  "ip_addr": {
                    "oneOf": [
                      {
                        "title": "IPv6 address",
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 source address"
                      },
                      {
                        "title": "IPv6 family",
                        "$ref": "#/components/schemas/null",
                        "description": "IPv6 address family"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "out_ssh_client_key_copy_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of the request to copy the key",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "ssh_listen_address": {
        "title": "SSH listen addresses",
        "required": [
          "ipv4",
          "ipv6"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "ipv4": {
            "oneOf": [
              {
                "type": "array",
                "description": "list of IPv4 listen addresses",
                "items": {
                  "$ref": "#/components/schemas/IP_ADDR"
                }
              },
              {
                "type": "string",
                "description": "Listen all IPv4 addresses (by default)",
                "const": "all"
              },
              {
                "type": "string",
                "description": "Disable listening all IPv4 addresses",
                "const": "deny"
              }
            ]
          },
          "ipv6": {
            "oneOf": [
              {
                "type": "array",
                "description": "list of IPv6 listen-addresses",
                "items": {
                  "$ref": "#/components/schemas/IPV6_ADDR"
                }
              },
              {
                "type": "string",
                "description": "Listen all IPv6 addresses (by default)",
                "const": "all"
              },
              {
                "type": "string",
                "description": "Disable listening all IPv6 addresses",
                "const": "deny"
              }
            ]
          }
        }
      },
      "ssh_whitelist": {
        "required": [
          "ipv4",
          "ipv6"
        ],
        "title": "SSH trusted networks",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "ipv4": {
            "oneOf": [
              {
                "type": "array",
                "description": "list of trusted IPv4 networks",
                "items": {
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                }
              },
              {
                "type": "string",
                "description": "Allow all IPv4 networks (by default)",
                "const": "all"
              },
              {
                "type": "string",
                "description": "Deny all IPv4 networks",
                "const": "deny"
              }
            ]
          },
          "ipv6": {
            "oneOf": [
              {
                "type": "array",
                "description": "list of trusted IPv6 networks",
                "items": {
                  "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
                }
              },
              {
                "type": "string",
                "description": "Allow all IPv6 networks (by default)",
                "const": "all"
              },
              {
                "type": "string",
                "description": "Deny all IPv6 networks",
                "const": "deny"
              }
            ]
          }
        }
      },
      "common_ssh_params": {
        "title": "common SSH parameters",
        "description": "Common object for SSH server parameters",
        "required": [
          "adm_state",
          "state",
          "port",
          "listen_address",
          "whitelist",
          "timeout",
          "limit_period",
          "limit_count"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          },
          "adm_state": {
            "type": "boolean",
            "description": "SSH administrative status"
          },
          "state": {
            "type": "boolean",
            "description": "SSH real status"
          },
          "port": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "SSH port number"
          },
          "listen_address": {
            "$ref": "#/components/schemas/ssh_listen_address"
          },
          "whitelist": {
            "$ref": "#/components/schemas/ssh_whitelist"
          },
          "timeout": {
            "$ref": "#/components/schemas/UINT_0_3600",
            "description": "SSH inactivity timeout (in seconds)"
          },
          "limit_period": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_65535",
                "description": "Set a time period to limit the number of connections (in seconds)"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "Disable connections limits"
              }
            ]
          },
          "limit_count": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_65535",
                "description": "Set connections limit per period time"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "Disable connections limits"
              }
            ]
          }
        }
      },
      "out_ssh_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "SSH list",
        "properties": {
          "result": {
            "title": "response to out_ssh_list_read request",
            "type": "object",
            "required": [
              "vrf_names"
            ],
            "properties": {
              "vrf_names": {
                "type": "array",
                "description": "VRF names with configured ssh server",
                "items": {
                  "description": "VRF name",
                  "$ref": "#/components/schemas/VRF"
                }
              }
            }
          }
        }
      },
      "out_ssh_params_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "SSH params",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/common_ssh_params"
          }
        }
      },
      "in_ssh_on_write": {
        "title": "Turn on/off SSH",
        "description": "Switch SSH server on/off",
        "required": [
          "vrf_name",
          "adm_state"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          },
          "adm_state": {
            "type": "boolean",
            "description": "SSH administrative status"
          }
        }
      },
      "in_ssh_restart_write": {
        "title": "Restart SSH",
        "description": "Restart SSH server",
        "required": [
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          }
        }
      },
      "in_ssh_add_write": {
        "title": "Add ssh server",
        "description": "Add ssh server for vrf",
        "required": [
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          }
        }
      },
      "in_ssh_delete_write": {
        "title": "Delete ssh server",
        "description": "Delete ssh server for vrf",
        "required": [
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          }
        }
      },
      "in_ssh_port_write": {
        "title": "SSH port",
        "description": "Change SSH port",
        "required": [
          "vrf_name",
          "port"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          },
          "port": {
            "description": "SSH port number",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "default port (22)"
              }
            ]
          }
        }
      },
      "in_ssh_listen_address_write": {
        "title": "SSH listen_address",
        "description": "Change SSH listen_address",
        "additionalProperties": false,
        "required": [
          "vrf_name",
          "listen_address"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          },
          "listen_address": {
            "$ref": "#/components/schemas/ssh_listen_address"
          }
        }
      },
      "in_ssh_whitelist_write": {
        "title": "SSH trusted networks",
        "description": "Set SSH trusted networks",
        "additionalProperties": false,
        "required": [
          "vrf_name",
          "whitelist"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          },
          "whitelist": {
            "$ref": "#/components/schemas/ssh_whitelist"
          }
        }
      },
      "in_ssh_timeout_write": {
        "title": "SSH inactivity timeout",
        "description": "Set SSH inactivity timeout",
        "additionalProperties": false,
        "required": [
          "timeout"
        ],
        "properties": {
          "timeout": {
            "$ref": "#/components/schemas/UINT_0_3600",
            "description": "Timeout (in seconds)"
          }
        }
      },
      "in_ssh_limit_write": {
        "title": "SSH connection limits",
        "description": "Set SSH connection limits per time period",
        "required": [
          "vrf_name",
          "limit_period",
          "limit_count"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "SSH server's VRF"
          },
          "limit_period": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_65535",
                "description": "Set a time period to limit the number of connections (in seconds)"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "Disable connections limits"
              }
            ]
          },
          "limit_count": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_65535",
                "description": "Set connections limit per period time"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "Disable connections limits"
              }
            ]
          }
        }
      },
      "in_ssh_public_key_write": {
        "title": "SSH public keys",
        "type": "object",
        "description": "Set SSH public key",
        "required": [
          "action",
          "key_string"
        ],
        "additionalProperties": false,
        "properties": {
          "key_username": {
            "$ref": "#/components/schemas/USERNAME_UP_TO_31",
            "description": "Username to manage public key. If not specified, set for the current user"
          },
          "key_string": {
            "$ref": "#/components/schemas/SSH_KEY_STRING",
            "description": "Public key string"
          },
          "action": {
            "type": "string"
          }
        },
        "oneOf": [
          {
            "title": "add",
            "properties": {
              "action": {
                "const": "add"
              }
            }
          },
          {
            "title": "delete",
            "properties": {
              "action": {
                "const": "del"
              }
            }
          }
        ]
      },
      "out_ssh_public_key_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Get list of ssh public keys",
        "properties": {
          "result": {
            "title": "response to out_ssh_public_key_read request",
            "type": "object",
            "required": [
              "public_keys"
            ],
            "properties": {
              "public_keys": {
                "type": "array",
                "description": "List of public keys for user",
                "items": {
                  "description": "Public key string",
                  "$ref": "#/components/schemas/SSH_KEY_STRING"
                }
              }
            }
          }
        }
      },
      "in_ssh_hostkey_write": {
        "required": [
          "key_type"
        ],
        "description": "Generate new host key",
        "additionalProperties": false,
        "properties": {
          "key_type": {
            "type": "string"
          },
          "modulus": {
            "type": "integer"
          }
        },
        "oneOf": [
          {
            "title": "RSA",
            "properties": {
              "key_type": {
                "const": "rsa",
                "description": "RSA key type"
              },
              "modulus": {
                "description": "Host key length",
                "oneOf": [
                  {
                    "const": 1024,
                    "description": "1024 bits"
                  },
                  {
                    "const": 2048,
                    "description": "2048 bits"
                  },
                  {
                    "const": 4096,
                    "description": "4096 bits"
                  },
                  {
                    "const": 8192,
                    "description": "8192 bits"
                  }
                ]
              }
            }
          },
          {
            "title": "DSA",
            "properties": {
              "key_type": {
                "const": "dsa",
                "description": "DSA key type"
              },
              "modulus": {
                "const": 1024,
                "description": "Host key length 1024 bits"
              }
            }
          },
          {
            "title": "ECDSA",
            "properties": {
              "key_type": {
                "const": "ecdsa",
                "description": "ECDSA key type"
              },
              "modulus": {
                "description": "Host key length",
                "oneOf": [
                  {
                    "const": 256,
                    "description": "1024 bits"
                  },
                  {
                    "const": 384,
                    "description": "2048 bits"
                  },
                  {
                    "const": 521,
                    "description": "4096 bits"
                  }
                ]
              }
            }
          },
          {
            "title": "ED25519",
            "not": {
              "required": [
                "modulus"
              ]
            },
            "properties": {
              "key_type": {
                "const": "ed25519",
                "description": "ED25519 key type"
              }
            }
          }
        ]
      },
      "out_ssh_hostkey_get_result_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Result of script execution",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "required": [
                  "aborted",
                  "errorCode",
                  "stdout",
                  "stderr"
                ],
                "additionalProperties": false,
                "properties": {
                  "aborted": {
                    "type": "boolean"
                  },
                  "errorCode": {
                    "type": "integer"
                  },
                  "stdout": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stderr": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "common_auth_method": {
        "description": "Authentication method",
        "oneOf": [
          {
            "const": "local",
            "description": "Local authorization"
          },
          {
            "const": "radius",
            "description": "RADIUS authorization"
          },
          {
            "const": "tacacs",
            "description": "TACACS+ authorization"
          }
        ]
      },
      "out_aaa_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read AAA",
        "description": "Result of reading AAA settings",
        "properties": {
          "result": {
            "type": "object",
            "description": "AAA settings",
            "unevaluatedProperties": false,
            "required": [
              "ssh_method",
              "telnet_method"
            ],
            "properties": {
              "ssh_method": {
                "description": "SSH authentication method",
                "$ref": "#/components/schemas/common_auth_method"
              },
              "telnet_method": {
                "description": "Telnet authentication method",
                "$ref": "#/components/schemas/common_auth_method"
              },
              "ssh_max_privilege": {
                "description": "Maximum privilege level for remote SSH users",
                "$ref": "#/components/schemas/UINT_1_15"
              },
              "telnet_max_privilege": {
                "description": "Maximum privilege level for remote telnet users",
                "$ref": "#/components/schemas/UINT_1_15"
              }
            }
          }
        }
      },
      "in_aaa_ssh_write": {
        "title": "request write SSH authentication method",
        "description": "Set SSH authentication method",
        "type": "object",
        "required": [
          "ssh_method"
        ],
        "additionalProperties": false,
        "properties": {
          "ssh_method": {
            "description": "SSH authentication method",
            "$ref": "#/components/schemas/common_auth_method"
          },
          "ssh_max_privilege": {
            "description": "Maximum privilege level for remote SSH users",
            "$ref": "#/components/schemas/UINT_1_15"
          }
        }
      },
      "in_aaa_telnet_write": {
        "title": "request write telnet authentication method",
        "description": "Set telnet authentication method",
        "type": "object",
        "required": [
          "telnet_method"
        ],
        "additionalProperties": false,
        "properties": {
          "telnet_method": {
            "description": "Telnet authentication method",
            "$ref": "#/components/schemas/common_auth_method"
          },
          "telnet_max_privilege": {
            "description": "Maximum privilege level for remote telnet users",
            "$ref": "#/components/schemas/UINT_1_15"
          }
        }
      },
      "out_aaa_log_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read AAA log",
        "description": "Result of reading AAA log",
        "properties": {
          "result": {
            "type": "string",
            "description": "Authentication log"
          }
        }
      },
      "listen_address": {
        "title": "Telnet listen address",
        "oneOf": [
          {
            "title": "ipv4",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "ipv4"
            ],
            "properties": {
              "ipv4": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IP_ADDR",
                    "description": "Listen only specified IPv4 address"
                  },
                  {
                    "$ref": "#/components/schemas/null",
                    "description": "Listen all IPv4 addresses (by default)"
                  }
                ]
              }
            }
          },
          {
            "title": "ipv6",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "ipv6"
            ],
            "properties": {
              "ipv6": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IPV6_ADDR",
                    "description": "Listen only specified IPv6 address"
                  },
                  {
                    "$ref": "#/components/schemas/null",
                    "description": "Listen all IPv4 and IPv6 addresses"
                  }
                ]
              }
            }
          }
        ]
      },
      "whitelist": {
        "required": [
          "ipv4",
          "ipv6"
        ],
        "title": "Telnet trusted networks",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "ipv4": {
            "oneOf": [
              {
                "type": "array",
                "description": "list of trusted IPv4 networks",
                "items": {
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                }
              },
              {
                "type": "string",
                "description": "Allow all IPv4 networks (by default)",
                "const": "all"
              },
              {
                "type": "string",
                "description": "Deny all IPv4 networks",
                "const": "deny"
              }
            ]
          },
          "ipv6": {
            "oneOf": [
              {
                "type": "array",
                "description": "list of trusted IPv6 networks",
                "items": {
                  "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
                }
              },
              {
                "type": "string",
                "description": "Allow all IPv6 networks (by default)",
                "const": "all"
              },
              {
                "type": "string",
                "description": "Deny all IPv6 networks",
                "const": "deny"
              }
            ]
          }
        }
      },
      "common_telnet_params": {
        "title": "common Telnet parameters",
        "description": "Common object for Telnet server parameters",
        "required": [
          "adm_state",
          "state",
          "port",
          "listen_address",
          "whitelist"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          },
          "adm_state": {
            "type": "boolean",
            "description": "Telnet administrative status"
          },
          "state": {
            "type": "boolean",
            "description": "Telnet real status"
          },
          "port": {
            "$ref": "#/components/schemas/UINT_1_65535",
            "description": "Telnet port number"
          },
          "listen_address": {
            "$ref": "#/components/schemas/listen_address"
          },
          "whitelist": {
            "$ref": "#/components/schemas/whitelist"
          }
        }
      },
      "out_telnet_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Telnet list",
        "properties": {
          "result": {
            "title": "response to out_telnet_list_read request",
            "type": "object",
            "required": [
              "vrf_names"
            ],
            "properties": {
              "vrf_names": {
                "type": "array",
                "description": "VRF names with configured telnet server",
                "items": {
                  "description": "VRF name",
                  "$ref": "#/components/schemas/VRF"
                }
              }
            }
          }
        }
      },
      "out_telnet_params_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "Telnet params",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/common_telnet_params"
          }
        }
      },
      "in_telnet_on_write": {
        "title": "Turn on/off Telnet",
        "description": "Switch Telnet server on/off",
        "required": [
          "vrf_name",
          "adm_state"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          },
          "adm_state": {
            "type": "boolean",
            "description": "Telnet administrative status"
          }
        }
      },
      "in_telnet_restart_write": {
        "title": "Restart Telnet",
        "description": "Restart Telnet server",
        "required": [
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          }
        }
      },
      "in_telnet_add_write": {
        "title": "Add telnet server",
        "description": "Add telnet server for vrf",
        "required": [
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          }
        }
      },
      "in_telnet_delete_write": {
        "title": "Delete telnet server",
        "description": "Delete telnet server for vrf",
        "required": [
          "vrf_name"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          }
        }
      },
      "in_telnet_port_write": {
        "title": "Telnet port",
        "description": "Change Telnet port",
        "required": [
          "vrf_name",
          "port"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          },
          "port": {
            "description": "Telnet port number",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_65535"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "default port (23)"
              }
            ]
          }
        }
      },
      "in_telnet_listen_address_write": {
        "title": "Telnet listen_address",
        "description": "Change Telnet listen_address",
        "additionalProperties": false,
        "required": [
          "vrf_name",
          "listen_address"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          },
          "listen_address": {
            "$ref": "#/components/schemas/listen_address"
          }
        }
      },
      "in_telnet_whitelist_write": {
        "title": "Telnet trusted networks",
        "description": "Set Telnet trusted networks",
        "additionalProperties": false,
        "required": [
          "vrf_name",
          "whitelist"
        ],
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "Telnet server's VRF"
          },
          "whitelist": {
            "$ref": "#/components/schemas/whitelist"
          }
        }
      },
      "in_system_dummy_write": {
        "type": "null"
      },
      "memory_cache_stat": {
        "type": "object",
        "required": [
          "size",
          "used",
          "usedPrc"
        ],
        "additionalProperties": false,
        "properties": {
          "size": {
            "type": "integer",
            "description": "total size in Mbytes"
          },
          "used": {
            "type": "integer",
            "description": "used size in Mbytes"
          },
          "usedPrc": {
            "type": "number",
            "description": "used size in percents"
          }
        }
      },
      "control_plane_affinity": {
        "oneOf": [
          {
            "type": "object",
            "title": "disabled",
            "required": [
              "enable"
            ],
            "additionalProperties": false,
            "properties": {
              "enable": {
                "type": "boolean",
                "const": false,
                "description": "disable affinity control"
              }
            }
          },
          {
            "type": "object",
            "title": "enabled",
            "required": [
              "enable",
              "affinity"
            ],
            "additionalProperties": false,
            "properties": {
              "enable": {
                "type": "boolean",
                "const": true,
                "description": "enable affinity control"
              },
              "affinity": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AFFINITY",
                    "title": "affinity list"
                  },
                  {
                    "type": "string",
                    "const": "all-cpu"
                  }
                ]
              }
            }
          }
        ]
      },
      "system_watchdog_r": {
        "type": "object",
        "required": [
          "enable",
          "timeout"
        ],
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "enable/disable watchdog"
          },
          "timeout": {
            "$ref": "#/components/schemas/UINT_30_3600",
            "description": "time interval in seconds"
          }
        }
      },
      "system_watchdog_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "enable/disable watchdog"
          },
          "timeout": {
            "oneOf": [
              {
                "type": "null",
                "description": "set to default",
                "title": "default"
              },
              {
                "$ref": "#/components/schemas/UINT_30_3600",
                "description": "time interval in seconds"
              }
            ]
          }
        }
      },
      "system_integrity_params": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "enable/disable automatic check"
          },
          "period": {
            "$ref": "#/components/schemas/UINT_1_100",
            "description": "integrity check interval in hours"
          },
          "alert_led": {
            "type": "boolean",
            "description": "alerting to LED for integity check procedure"
          },
          "alert_console": {
            "type": "boolean",
            "description": "alerting to console for integity check procedure"
          },
          "action": {
            "type": "string",
            "enum": [
              "stop",
              "continue"
            ],
            "description": "action on failure of integrity check"
          }
        }
      },
      "out_system_platform_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read platform info",
        "description": "Result of reading platform info",
        "properties": {
          "result": {
            "required": [
              "version",
              "platform"
            ],
            "additionalProperties": true,
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "version string including some important information from the fields below"
              },
              "openapi_version": {
                "type": "string",
                "description": "version of OpenAPI if available"
              },
              "platform": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "version",
                  "cpu_count"
                ],
                "properties": {
                  "ebs_arch": {
                    "type": "string",
                    "description": "compiler family"
                  },
                  "version": {
                    "type": "string",
                    "description": "version"
                  },
                  "kernel-release": {
                    "type": "string",
                    "description": "OS kernel"
                  },
                  "arch": {
                    "type": "string",
                    "description": "CPU architecture"
                  },
                  "build-date": {
                    "type": "string",
                    "description": "build date"
                  },
                  "cpu_count": {
                    "type": "integer",
                    "description": "number of CPUs"
                  }
                }
              },
              "bmc-version": {
                "type": "string",
                "description": "BMC version (if any)"
              },
              "cpu-name": {
                "type": "string",
                "description": "CPU name (if any)"
              },
              "name": {
                "type": "string",
                "description": "Name of platform(if any)"
              },
              "serial": {
                "type": "string",
                "description": "Serial number of platform (if any)"
              },
              "uboot_version": {
                "type": "string",
                "description": "Uboot version (if any)"
              },
              "poe_version": {
                "type": "string",
                "description": "PoE version (if any)"
              },
              "network": {
                "type": "array",
                "items": {
                  "interface": {
                    "type": "string",
                    "description": "textual description of interface type"
                  },
                  "number": {
                    "type": "integer",
                    "description": "number of interfaces of given type"
                  }
                }
              },
              "memory": {
                "type": "string",
                "description": "Memory size"
              },
              "hard_in_status": {
                "type": "string",
                "description": "internal SSD status"
              },
              "hard_out_status": {
                "type": "string",
                "description": "HDD status"
              },
              "usb_status": {
                "type": "string",
                "description": "USB status"
              },
              "lte_status": {
                "type": "string",
                "description": "LTE modem status"
              },
              "pci_status": {
                "type": "string",
                "description": "PCI devices status"
              }
            }
          }
        }
      },
      "out_system_pci_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read PCI info",
        "description": "Result of reading PCI info",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "descr"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "PCI ID"
                },
                "descr": {
                  "type": "string",
                  "description": "description of PCI device"
                }
              }
            }
          }
        }
      },
      "out_system_usage_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading system usage",
        "description": "Result of reading system usage taken from system utilities",
        "properties": {
          "result": {
            "required": [
              "usage",
              "load-average",
              "working-cpus",
              "memory"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "usage": {
                "type": "object",
                "description": "multiline system usage info taken by top utility",
                "required": [
                  "cpus",
                  "top"
                ],
                "additionalProperties": false,
                "properties": {
                  "top": {
                    "type": "string",
                    "description": "multiline info from top"
                  },
                  "tasks": {
                    "type": "object",
                    "description": "task info from the  top utility",
                    "additionalProperties": false,
                    "properties": {
                      "total": {
                        "type": "integer"
                      },
                      "running": {
                        "type": "integer"
                      },
                      "sleeping": {
                        "type": "integer"
                      },
                      "stopped": {
                        "type": "integer"
                      },
                      "zombie": {
                        "type": "integer"
                      }
                    }
                  },
                  "cpus": {
                    "type": "array",
                    "description": "cpu usage info from top",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "cpu": {
                          "type": "integer"
                        },
                        "us": {
                          "type": "number"
                        },
                        "sy": {
                          "type": "number"
                        },
                        "ni": {
                          "type": "number"
                        },
                        "id": {
                          "type": "number"
                        },
                        "wa": {
                          "type": "number"
                        },
                        "hi": {
                          "type": "number"
                        },
                        "si": {
                          "type": "number"
                        },
                        "st": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "disks": {
                "type": "array",
                "description": "disk info per mount point",
                "items": {
                  "type": "object",
                  "required": [
                    "filesystem",
                    "size",
                    "used",
                    "available",
                    "use"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "filesystem": {
                      "type": "string",
                      "description": "filesystem"
                    },
                    "size": {
                      "type": "string",
                      "description": "total size in human readable format"
                    },
                    "used": {
                      "type": "string",
                      "description": "used size in human readable format"
                    },
                    "available": {
                      "type": "string",
                      "description": "available size in human readable format"
                    },
                    "use": {
                      "type": "string",
                      "description": "percent of use"
                    }
                  }
                }
              },
              "load-average": {
                "type": "object",
                "required": [
                  "1min",
                  "5min",
                  "15min"
                ],
                "additionalProperties": false,
                "properties": {
                  "1min": {
                    "type": "number",
                    "description": "1 minute averaging"
                  },
                  "5min": {
                    "type": "number",
                    "description": "5 minute averaging"
                  },
                  "15min": {
                    "type": "number",
                    "description": "15 minute averaging"
                  }
                }
              },
              "working-cpus": {
                "type": "integer",
                "description": "multiline system usage info taken from nproc utility"
              },
              "memory": {
                "type": "object",
                "description": "memory info taken from free utility",
                "required": [
                  "mem",
                  "swap"
                ],
                "additionalProperties": false,
                "properties": {
                  "mem": {
                    "type": "object",
                    "description": "Mem. line",
                    "additionalProperties": false,
                    "properties": {
                      "total": {
                        "type": "number",
                        "description": "total size in Mbytes"
                      },
                      "used": {
                        "type": "number",
                        "description": "used size in Mbytes"
                      },
                      "free": {
                        "type": "number",
                        "description": "free size in Mbytes"
                      },
                      "shared": {
                        "type": "number",
                        "description": "shared size in Mbytes"
                      },
                      "buff/cache": {
                        "type": "number",
                        "description": "buffered/cached size in Mbytes"
                      },
                      "available": {
                        "type": "number",
                        "description": "available size in Mbytes"
                      }
                    }
                  },
                  "swap": {
                    "type": "object",
                    "description": "Swap line",
                    "additionalProperties": false,
                    "properties": {
                      "total": {
                        "type": "number",
                        "description": "total size in Mbytes"
                      },
                      "used": {
                        "type": "number",
                        "description": "used size in Mbytes"
                      },
                      "free": {
                        "type": "number",
                        "description": "free size in Mbytes"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "out_system_hostname_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading hostname",
        "description": "Result of reading hostname. Normally, domain name should be present, however on clean system or after service installation it will be absent. POST request always requires to set the domain name",
        "properties": {
          "result": {
            "required": [
              "hostname"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "hostname": {
                "$ref": "#/components/schemas/HOSTNAME",
                "description": "host name"
              },
              "domain": {
                "$ref": "#/components/schemas/HOSTNAME",
                "description": "domain name"
              }
            }
          }
        }
      },
      "in_system_hostname_write": {
        "description": "Set hostname/domain name",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hostname": {
            "$ref": "#/components/schemas/HOSTNAME",
            "description": "host name"
          },
          "domain": {
            "$ref": "#/components/schemas/HOSTNAME",
            "description": "domain name"
          }
        }
      },
      "out_system_hosts_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "read host list",
        "description": "Result of reading hosts",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "required": [
                "ip",
                "name"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "ip": {
                  "description": "IPv4/v6 address",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IP_ADDR"
                    },
                    {
                      "$ref": "#/components/schemas/IPV6_ADDR"
                    }
                  ]
                },
                "name": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "$ref": "#/components/schemas/HOSTNAME",
                    "description": "hostname/alias"
                  }
                }
              }
            }
          }
        }
      },
      "in_system_hosts_write": {
        "description": "Add/delete host",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "required": [
                      "ip",
                      "name"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "ip": {
                        "description": "IPv4/v6 address",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/IP_ADDR"
                          },
                          {
                            "$ref": "#/components/schemas/IPV6_ADDR"
                          }
                        ]
                      },
                      "name": {
                        "$ref": "#/components/schemas/HOSTNAME",
                        "description": "hostname"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/components/schemas/HOSTNAME",
                        "description": "hostname"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_system_memory_cache_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "memory/cache settings/statistics",
        "description": "Result of reading memory/cache settings/statistics",
        "properties": {
          "result": {
            "required": [
              "policy",
              "statistics"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "policy": {
                "$ref": "#/components/schemas/cache_policy"
              },
              "statistics": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "system": {
                    "$ref": "#/components/schemas/memory_cache_stat",
                    "description": "optional statistics for MIPS core"
                  },
                  "total": {
                    "$ref": "#/components/schemas/memory_cache_stat",
                    "description": "optional statistics for most systems"
                  }
                }
              }
            }
          }
        }
      },
      "in_system_memory_cache_write": {
        "description": "Modify memory/cache parameters or reset cache",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "policy": {
                        "$ref": "#/components/schemas/cache_policy"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "reset",
                "required": [
                  "reset"
                ],
                "additionalProperties": false,
                "properties": {
                  "reset": {
                    "type": "object",
                    "additionalProperties": false
                  }
                }
              }
            ]
          }
        }
      },
      "out_system_integrity_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "memory/cache settings/statistics",
        "description": "Result of system integrity settings/status",
        "properties": {
          "result": {
            "required": [
              "parameters",
              "status"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "parameters": {
                "$ref": "#/components/schemas/system_integrity_params",
                "required": [
                  "enable",
                  "period",
                  "alert_led",
                  "alert_console",
                  "action"
                ]
              },
              "status": {
                "type": "object",
                "required": [
                  "status",
                  "return_code"
                ],
                "additionalProperties": false,
                "properties": {
                  "return_code": {
                    "type": "integer",
                    "description": "last run return code"
                  },
                  "status": {
                    "type": "string",
                    "description": "status"
                  },
                  "last_run": {
                    "type": "string",
                    "description": "last run date/time (optional)"
                  },
                  "message": {
                    "type": "string",
                    "description": "last run date/time (optional)"
                  }
                }
              }
            }
          }
        }
      },
      "in_system_integrity_write": {
        "description": "Modify integrity parameters or run it manually",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "description": "modify integrity check parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "parameters": {
                        "$ref": "#/components/schemas/system_integrity_params"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "run",
                "required": [
                  "run"
                ],
                "additionalProperties": false,
                "properties": {
                  "run": {
                    "description": "run integrity check manually",
                    "type": "object",
                    "additionalProperties": false
                  }
                }
              }
            ]
          }
        }
      },
      "out_system_irq_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "irq settings/statistics",
        "description": "Result of reading irq settings/statistics",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "required": [
                "irq",
                "affinity",
                "count"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "irq": {
                  "type": "integer",
                  "description": "irq number"
                },
                "name": {
                  "type": "string",
                  "description": "irq name (might be duplicated or missing)"
                },
                "affinity": {
                  "$ref": "#/components/schemas/AFFINITY"
                },
                "count": {
                  "type": "integer",
                  "description": "overall hit count"
                },
                "cpu_count": {
                  "type": "array",
                  "description": "hit count by CPU (optional)",
                  "items": {
                    "type": "integer"
                  }
                },
                "detail": {
                  "type": "string",
                  "description": "extra details (optional)"
                }
              }
            }
          }
        }
      },
      "in_system_irq_write": {
        "description": "Modify irq affinity ",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "description": "modify irq affinity",
                    "required": [
                      "irq",
                      "affinity"
                    ],
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "irq": {
                        "oneOf": [
                          {
                            "type": "integer",
                            "description": "irq number"
                          },
                          {
                            "type": "string",
                            "description": "irq name"
                          }
                        ]
                      },
                      "affinity": {
                        "oneOf": [
                          {
                            "type": "null",
                            "description": "set to default",
                            "title": "default"
                          },
                          {
                            "$ref": "#/components/schemas/AFFINITY",
                            "title": "affinity list"
                          },
                          {
                            "type": "string",
                            "const": "all-cpu"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_system_affinity_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "control-plane affinity settings",
        "description": "Result of reading control-plane affinity settings",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/control_plane_affinity"
          }
        }
      },
      "in_system_affinity_write": {
        "description": "Modify control-plane affinity ",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "description": "modify control-plane affinity",
                    "$ref": "#/components/schemas/control_plane_affinity"
                  }
                }
              }
            ]
          }
        }
      },
      "out_system_watchdog_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "watchdog settings",
        "description": "Result of reading watchdog settings",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/system_watchdog_r"
          }
        }
      },
      "in_system_watchdog_write": {
        "description": "Modify watchdog parameters ",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "description": "modify watchdog parameters",
                    "$ref": "#/components/schemas/system_watchdog_w"
                  }
                }
              }
            ]
          }
        }
      },
      "system_cli_r": {
        "descriptions": "system CLI settings for reading",
        "type": "object",
        "required": [
          "ssh_timeout",
          "telnet_timeout",
          "tty_timeout",
          "language",
          "example",
          "prompt",
          "features"
        ],
        "additionalProperties": false,
        "properties": {
          "ssh_timeout": {
            "$ref": "#/components/schemas/UINT_0_3600",
            "description": "ssh CLI session timeout interval in seconds"
          },
          "telnet_timeout": {
            "$ref": "#/components/schemas/UINT_0_3600",
            "description": "telnet CLI session timeout interval in seconds"
          },
          "tty_timeout": {
            "$ref": "#/components/schemas/UINT_0_3600",
            "description": "console CLI session timeout interval in seconds"
          },
          "language": {
            "$ref": "#/components/schemas/EN_RU",
            "description": "language for help messages in CLI"
          },
          "example": {
            "type": "boolean",
            "description": "enable/disable examples in CLI"
          },
          "prompt": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "prompt message for paginator"
          },
          "features": {
            "type": "object",
            "required": [
              "allow_invalid_input"
            ],
            "additionalProperties": false,
            "properties": {
              "allow_invalid_input": {
                "type": "boolean",
                "description": "true to allow syntaxically invalid strings to be entered in CLI"
              }
            }
          }
        }
      },
      "system_cli_w": {
        "descriptions": "system CLI settings for writing",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "ssh_timeout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_3600",
                "description": "ssh CLI session timeout interval in seconds, optional"
              },
              {
                "type": "null",
                "description": "reset to default value"
              }
            ]
          },
          "telnet_timeout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_3600",
                "description": "telnet CLI session timeout interval in seconds, optional"
              },
              {
                "type": "null",
                "description": "reset to default value"
              }
            ]
          },
          "tty_timeout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_3600",
                "description": "console CLI session timeout interval in seconds, optional"
              },
              {
                "type": "null",
                "description": "reset to default value"
              }
            ]
          },
          "language": {
            "$ref": "#/components/schemas/EN_RU",
            "description": "language for help messages in CLI, optional"
          },
          "example": {
            "type": "boolean",
            "description": "enable/disable examples in CLI, optional"
          },
          "prompt": {
            "$ref": "#/components/schemas/STRING_NO_QUOTES",
            "description": "prompt message for paginator, optional"
          },
          "features": {
            "description": "optional",
            "type": "object",
            "required": [],
            "additionalProperties": false,
            "properties": {
              "allow_invalid_input": {
                "type": "boolean",
                "description": "true to allow syntaxically invalid strings to be entered in CLI, optional"
              }
            }
          }
        }
      },
      "out_system_cli_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "CLI settings",
        "description": "Result of reading CLI settings",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/system_cli_r"
          }
        }
      },
      "in_system_cli_write": {
        "description": "Modify CLI parameters ",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "description": "modify CLI parameters",
                    "$ref": "#/components/schemas/system_cli_w"
                  }
                }
              }
            ]
          }
        }
      },
      "out_system_upgrade_reboot_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "watchdog settings",
        "description": "Result of execution reboot/upgrade script",
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "object",
                "title": "ok",
                "required": [
                  "ok"
                ],
                "additionalProperties": false,
                "properties": {
                  "ok": {
                    "type": "boolean",
                    "const": true,
                    "description": "ok, system will be rebooting in few seconds automatically"
                  }
                }
              },
              {
                "type": "object",
                "title": "fail",
                "required": [
                  "ok"
                ],
                "additionalProperties": false,
                "properties": {
                  "ok": {
                    "type": "boolean",
                    "const": false,
                    "description": "something getting wrong"
                  },
                  "errMsg": {
                    "type": "string",
                    "description": "multiline string with textual description of error"
                  }
                }
              }
            ]
          }
        }
      },
      "in_system_upgrade_write": {
        "description": "Start system upgrade process",
        "type": "object",
        "required": [
          "backup",
          "image"
        ],
        "additionalProperties": false,
        "properties": {
          "backup": {
            "type": "boolean",
            "description": "backup user date and restore them after upgrade"
          },
          "image": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "title": "HTTP",
                "required": [
                  "protocol",
                  "host",
                  "filename"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "http",
                    "description": "http source"
                  },
                  "host": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "address of IPv4 site"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "address of IPv6 site"
                      },
                      {
                        "$ref": "#/components/schemas/FQDN",
                        "description": "fully qualified domain name"
                      }
                    ],
                    "description": "host name/ip"
                  },
                  "bind": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IPv4 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IFNAME",
                        "description": "interface name to bind"
                      }
                    ],
                    "description": "bind address/ip"
                  },
                  "port": {
                    "$ref": "#/components/schemas/UINT_1_65535",
                    "description": "optional  port to connect to on the remote host (80 by default)"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "filename": {
                    "$ref": "#/components/schemas/NET_FILENAME",
                    "description": "filename of image on the remote server"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "TFTP",
                "required": [
                  "protocol",
                  "host",
                  "filename"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "tftp",
                    "description": "TFTP source"
                  },
                  "host": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "address of IPv4 site"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "address of IPv6 site"
                      },
                      {
                        "$ref": "#/components/schemas/FQDN",
                        "description": "fully qualified domain name"
                      }
                    ],
                    "description": "host name/ip"
                  },
                  "bind": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IPv4 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IFNAME",
                        "description": "interface name to bind"
                      }
                    ],
                    "description": "bind address/ip"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "blksize": {
                    "$ref": "#/components/schemas/UINT_8_65464",
                    "description": "optional blocksize in bytes (512 by default)"
                  },
                  "filename": {
                    "$ref": "#/components/schemas/NET_FILENAME",
                    "description": "filename of image on the remote server"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "FTP",
                "required": [
                  "protocol",
                  "host",
                  "filename"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "ftp",
                    "description": "FTP source"
                  },
                  "host": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "address of IPv4 site"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "address of IPv6 site"
                      },
                      {
                        "$ref": "#/components/schemas/FQDN",
                        "description": "fully qualified domain name"
                      }
                    ],
                    "description": "host name/ip"
                  },
                  "bind": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IPv4 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IFNAME",
                        "description": "interface name to bind"
                      }
                    ],
                    "description": "bind address/ip"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "filename": {
                    "$ref": "#/components/schemas/NET_FILENAME",
                    "description": "filename of image on the remote server"
                  },
                  "user": {
                    "type": "string",
                    "description": "optional user for remote host"
                  },
                  "password": {
                    "type": "string",
                    "description": "optional password for remote host"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "SFTP",
                "required": [
                  "protocol",
                  "host",
                  "filename",
                  "user",
                  "password"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "sftp",
                    "description": "SFTP source"
                  },
                  "host": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "address of IPv6 site"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "address of IPv6 site"
                      },
                      {
                        "$ref": "#/components/schemas/FQDN",
                        "description": "fully qualified domain name"
                      }
                    ],
                    "description": "host name/ip"
                  },
                  "bind": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IP_ADDR",
                        "description": "IPv4 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IPV6_ADDR",
                        "description": "IPv6 address to bind"
                      },
                      {
                        "$ref": "#/components/schemas/IFNAME",
                        "description": "interface name to bind"
                      }
                    ],
                    "description": "bind address/ip"
                  },
                  "port": {
                    "$ref": "#/components/schemas/UINT_1_65535",
                    "description": "optional  port to connect to on the remote host (22 by default)"
                  },
                  "vrf": {
                    "$ref": "#/components/schemas/VRF",
                    "description": "VRF name"
                  },
                  "filename": {
                    "$ref": "#/components/schemas/NET_FILENAME",
                    "description": "filename of image on the remote server"
                  },
                  "user": {
                    "type": "string",
                    "description": "user for remote host"
                  },
                  "password": {
                    "type": "string",
                    "description": "password for remote host"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "title": "USB",
                "required": [
                  "protocol",
                  "filename"
                ],
                "properties": {
                  "protocol": {
                    "type": "string",
                    "const": "usb",
                    "description": "USB flash drive source"
                  },
                  "filename": {
                    "$ref": "#/components/schemas/FILENAME",
                    "description": "filename of image on the removable usb device"
                  }
                }
              }
            ]
          }
        }
      },
      "netstat_entry": {
        "type": "array",
        "prefixItems": [
          {
            "type": "string",
            "description": "Proto"
          },
          {
            "type": "integer",
            "description": "Recv-Q"
          },
          {
            "type": "integer",
            "description": "Send-Q"
          },
          {
            "type": "string",
            "description": "Local Address"
          },
          {
            "type": "string",
            "description": "Foreigh Address"
          },
          {
            "type": "string",
            "description": "State"
          }
        ],
        "minItems": 6,
        "maxItems": 6,
        "description": "netstat entry as shown in netstat -a -n -A inet/inet6"
      },
      "out_system_connections_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading system connections",
        "description": "Result of reading tcp/udp connections",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/netstat_entry",
              "description": "connection entries"
            }
          }
        }
      },
      "restapi_kill_scriptid": {
        "title": "kill scripts by their IDs",
        "required": [
          "scriptid"
        ],
        "additionalProperties": false,
        "properties": {
          "scriptid": {
            "$ref": "#/components/schemas/restapi_scriptid_list"
          }
        }
      },
      "restapi_endpoint_list": {
        "description": "endpoint list - endpoint names should be separated by spaces",
        "type": "string"
      },
      "out_restapi_get_scriptid": {
        "$ref": "#/components/schemas/out_generic",
        "title": "restapi_get_scriptid request output PDU",
        "properties": {
          "result": {
            "title": "response to `/system/restapi_get_scriptid` read request",
            "type": "string",
            "description": "returns list of script IDs (separated by spaces) corresponding to given endpoints"
          }
        }
      },
      "restapi_scriptid_list": {
        "description": "script ID list - might be requested by `/system/restapi_get_scriptid`: numerical IDs should be separated by spaces",
        "type": "string"
      },
      "out_restapi_get_busy": {
        "$ref": "#/components/schemas/out_generic",
        "title": "restapi_get_busy request output PDU",
        "properties": {
          "result": {
            "title": "response to restapi_get_busy read request",
            "type": "object",
            "required": [
              "busy",
              "active"
            ],
            "additionalProperties": false,
            "properties": {
              "busy": {
                "type": "boolean",
                "description": "returns `true` if at least one of scripts is executing"
              },
              "active": {
                "$ref": "#/components/schemas/restapi_scriptid_list"
              }
            }
          }
        }
      },
      "restapi_debug": {
        "title": "write debugging status",
        "required": [
          "val"
        ],
        "additionalProperties": false,
        "properties": {
          "val": {
            "type": "boolean",
            "description": "true/false - turn on/off debug logging to `/var/log/webback.log`"
          },
          "clean": {
            "type": "boolean",
            "description": "true - clean log file, false (default) - continue "
          },
          "validate": {
            "type": "boolean",
            "description": "enable json validation. Normally it is turned on (`true`). In this case both input and output PDUs are validated against JSON schema and if something is wrong it reurns error codes 14 through 17. If this flag is `false`, the validation is turned off in both directions which may help in debugging the requests but may cause extra system errors due to the unfiltered wrong requests"
          }
        }
      },
      "carp_getter": {
        "type": "object",
        "properties": {
          "group_id": {
            "$ref": "#/components/schemas/UINT_1_255",
            "title": "id",
            "description": "Get group identificator"
          },
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "title": "address",
            "description": "Get virtual IP address"
          },
          "secret": {
            "$ref": "#/components/schemas/BASE64",
            "title": "encrypted_password",
            "description": "Get encrypted password"
          },
          "timer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT",
                "title": "timer_value",
                "description": "Get advertisement interval"
              },
              {
                "type": "string",
                "const": "unset"
              }
            ]
          }
        }
      },
      "out_carp_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read carp",
        "description": "Result of reading carp",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "interface_name",
              "settings"
            ],
            "properties": {
              "interface_name": {
                "$ref": "#/components/schemas/IFNAME",
                "description": "interface name"
              },
              "settings": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/carp_getter"
                    }
                  },
                  {
                    "type": "string",
                    "const": "No information to display"
                  }
                ]
              }
            }
          }
        }
      },
      "in_carp_write": {
        "description": "Enable/Disable CARP on this interface",
        "type": "object",
        "required": [
          "interface_name",
          "id"
        ],
        "if": {
          "required": [
            "address"
          ]
        },
        "then": {
          "oneOf": [
            {
              "required": [
                "password"
              ]
            },
            {
              "required": [
                "secret"
              ]
            }
          ]
        },
        "else": {
          "not": {
            "anyOf": [
              {
                "required": [
                  "password"
                ]
              },
              {
                "required": [
                  "secret"
                ]
              },
              {
                "required": [
                  "timer"
                ]
              }
            ]
          }
        },
        "additionalProperties": false,
        "properties": {
          "interface_name": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "interface name"
          },
          "group_id": {
            "$ref": "#/components/schemas/UINT_1_255",
            "title": "id",
            "description": "Set group identificator"
          },
          "address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "title": "address",
            "description": "Set virtual IP address"
          },
          "password": {
            "$ref": "#/components/schemas/STRING",
            "title": "password",
            "description": "Set password"
          },
          "secret": {
            "$ref": "#/components/schemas/BASE64",
            "title": "encrypted_password",
            "description": "Set encrypted password"
          },
          "timer": {
            "$ref": "#/components/schemas/UINT",
            "title": "timer_value",
            "description": "Set advertisement interval"
          }
        }
      },
      "thresholds": {
        "type": "object",
        "required": [
          "gc_thresh_1"
        ],
        "additionalProperties": false,
        "properties": {
          "gc_thresh_1": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "Set first garbage collector threshold"
          },
          "gc_thresh_2": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "Set second garbage collector threshold"
          },
          "gc_thresh_3": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "Set third garbage collector threshold"
          }
        },
        "dependentRequired": {
          "gc_thresh_3": [
            "gc_thresh_2"
          ]
        }
      },
      "out_arp_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ARP table",
        "description": "Result of reading ARP table (show arp)",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "out_arp_config_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read ARP table configuration",
        "description": "Result of reading ARP table configuration",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "vrf_name",
              "timeout",
              "announce",
              "reply",
              "proxy",
              "pvlan"
            ],
            "additionalProperties": false,
            "properties": {
              "vrf_name": {
                "$ref": "#/components/schemas/VRF",
                "description": "VRF name"
              },
              "timeout": {
                "type": "object"
              },
              "announce": {
                "type": "string"
              },
              "reply": {
                "type": "string"
              },
              "proxy": {
                "type": "boolean"
              },
              "pvlan": {
                "type": "boolean"
              }
            },
            "description": "config params dict"
          }
        }
      },
      "out_arp_ipmaxneigh_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read IP ARP GC thresholds",
        "description": "Result of reading IP ARP GC thresholds (show ip max-neigh)",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "line by line show output"
          }
        }
      },
      "in_arp_ipmaxneigh_write": {
        "description": "Set IP ARP GC thresholds (ip max-neigh)",
        "type": "object",
        "required": [
          "version",
          "gc_thresh_1"
        ],
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "string",
            "enum": [
              "ipv4",
              "ipv6"
            ]
          },
          "gc_thresh_1": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "Set first garbage collector threshold"
          },
          "gc_thresh_2": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "Set second garbage collector threshold"
          },
          "gc_thresh_3": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "Set third garbage collector threshold"
          }
        },
        "dependentRequired": {
          "gc_thresh_3": [
            "gc_thresh_2"
          ]
        }
      },
      "in_arp_add_write": {
        "description": "Add a static ARP entry (arp [vrf <vrf_name>] <ip> <mac> [<interface>])",
        "type": "object",
        "required": [
          "ip",
          "mac"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name (optional)"
          },
          "ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IP address to add"
          },
          "mac": {
            "$ref": "#/components/schemas/MAC_ADDR",
            "description": "MAC address"
          },
          "interface": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface name (optional)"
          }
        }
      },
      "in_arp_delete_write": {
        "description": "Delete a static ARP entry (no arp [vrf <vrf_name>] <ip>)",
        "type": "object",
        "required": [
          "ip"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name (optional)"
          },
          "ip": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IP address to delete"
          }
        }
      },
      "in_arp_announce_write": {
        "description": "Set/disable ARP announce mode (arp announce [vrf <vrf_name>] (any|best|subnet))",
        "type": "object",
        "required": [
          "announce_mode"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name (optional)"
          },
          "announce_mode": {
            "oneOf": [
              {
                "type": "string",
                "const": "any",
                "description": "Use any local address, configured on any interface"
              },
              {
                "type": "string",
                "const": "best",
                "description": "Always use the best local address for this target"
              },
              {
                "type": "string",
                "const": "subnet",
                "description": "Try to avoid local addresses that are not in the target's subnet for this interface"
              }
            ]
          }
        }
      },
      "in_arp_proxy_write": {
        "description": "Enable ARP proxy",
        "type": "object",
        "anyOf": [
          {
            "required": [
              "proxy"
            ]
          },
          {
            "required": [
              "pvlan"
            ]
          }
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name (optional)"
          },
          "proxy": {
            "type": "boolean",
            "description": "global proxy"
          },
          "pvlan": {
            "type": "boolean",
            "description": "private VLAN mode"
          }
        }
      },
      "in_arp_reply_write": {
        "description": "Set/disable ARP reply mode (arp reply [vrf <vrf_name>] (any|global|interface|local))",
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name (optional)"
          },
          "reply_mode": {
            "oneOf": [
              {
                "type": "null",
                "title": "reply disabled",
                "description": "Do not reply for all local addresses"
              },
              {
                "type": "string",
                "const": "any",
                "description": "Reply for any local target IP address, configured on any interface"
              },
              {
                "type": "string",
                "const": "global",
                "description": "Do not reply for local addresses configured with scope host, only resolutions for global and link addresses are replied"
              },
              {
                "type": "string",
                "const": "interface",
                "description": "Reply only if the target IP address is local address configured on the incoming interface and both with the sender's IP address are part from same subnet on this interface"
              },
              {
                "type": "string",
                "const": "local",
                "description": "Reply only if the target IP address is local address configured on the incoming interface"
              }
            ]
          }
        }
      },
      "in_arp_timeout_write": {
        "description": "Set ARP timeout (arp timeout [vrf <vrf_name>] <iface> <time_value> <units>)",
        "type": "object",
        "required": [
          "interface"
        ],
        "additionalProperties": false,
        "properties": {
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF name (optional)"
          },
          "interface": {
            "$ref": "#/components/schemas/IFNAME",
            "description": "Interface name"
          },
          "value": {
            "$ref": "#/components/schemas/UINT",
            "title": "Time value"
          },
          "units": {
            "$ref": "#/components/schemas/TIME_RESOLUTION",
            "title": "Units of time"
          }
        },
        "dependentRequired": {
          "units": [
            "value"
          ],
          "value": [
            "units"
          ]
        }
      },
      "pbr_chain": {
        "type": "object",
        "title": "PBR chain",
        "additionalProperties": false,
        "required": [
          "acl",
          "lookup"
        ],
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "access list name"
          },
          "lookup": {
            "$ref": "#/components/schemas/UINT8",
            "description": "routing table number"
          },
          "priority": {
            "$ref": "#/components/schemas/UINT_1_32511",
            "description": "priority value (optional)"
          },
          "track": {
            "$ref": "#/components/schemas/STRING",
            "description": "IP SLA track name (optional)"
          }
        }
      },
      "pbr_chains": {
        "type": "object",
        "title": "PBR chains for protocol",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "prerouting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pbr_chain"
            }
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pbr_chain"
            }
          },
          "forward": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pbr_chain"
            }
          },
          "output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pbr_chain"
            }
          },
          "postrouting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pbr_chain"
            }
          }
        }
      },
      "out_pbr_chains_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading PBR chains",
        "description": "Result of reading PBR chains",
        "properties": {
          "result": {
            "type": "object",
            "description": "chains",
            "additionalProperties": false,
            "required": [],
            "properties": {
              "ipv4": {
                "$ref": "#/components/schemas/pbr_chains"
              },
              "ipv6": {
                "$ref": "#/components/schemas/pbr_chains"
              }
            }
          }
        }
      },
      "in_pbr_chains_write": {
        "description": "Modify NAT chains",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "required": [
                      "proto",
                      "chain",
                      "item"
                    ],
                    "additionalProperties": false,
                    "title": "chain to add",
                    "properties": {
                      "proto": {
                        "$ref": "#/components/schemas/IP_PROTO",
                        "description": "ipv4/ipv6"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_CHAIN",
                        "description": "type of chain"
                      },
                      "item": {
                        "$ref": "#/components/schemas/pbr_chain",
                        "description": "chain"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "description": "items can be deleted either by acl name or by priority. If none of them is specified, all entries from the chain are removed",
                    "required": [
                      "proto"
                    ],
                    "not": {
                      "required": [
                        "acl",
                        "priority"
                      ]
                    },
                    "additionalProperties": false,
                    "properties": {
                      "proto": {
                        "$ref": "#/components/schemas/IP_PROTO",
                        "description": "ipv4/ipv6"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_CHAIN",
                        "description": "type of chain"
                      },
                      "acl": {
                        "$ref": "#/components/schemas/STRING",
                        "description": "delete by access list name (optional)"
                      },
                      "priority": {
                        "$ref": "#/components/schemas/UINT_1_32511",
                        "description": "delete by priority value (optional)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_acl_mangle_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the list of ACL mangle lists",
        "description": "Result of reading the list of ACL mangle lists",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "anyOf": [
              {
                "required": [
                  "ipv4"
                ],
                "title": "IPv4"
              },
              {
                "required": [
                  "ipv6"
                ],
                "title": "IPv6"
              }
            ],
            "properties": {
              "ipv4": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VRF"
                },
                "description": "VRF names for which IPv6 ACLs are defined"
              },
              "ipv6": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VRF"
                },
                "description": "VRF names for which IPv6 ACLs are defined"
              }
            }
          }
        }
      },
      "mangle_permit": {
        "type": "object",
        "title": "permit",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "permit"
          }
        }
      },
      "mangle_deny": {
        "type": "object",
        "title": "deny",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "deny"
          }
        }
      },
      "mangle_tos": {
        "type": "object",
        "title": "set ToS/Traffic Class",
        "required": [
          "action",
          "tos"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-tos"
          },
          "tos": {
            "$ref": "#/components/schemas/UINT8",
            "description": "new ToS/Traffic class value"
          }
        }
      },
      "mangle_dscp": {
        "type": "object",
        "title": "set DSCP",
        "required": [
          "action",
          "dscp"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-dscp"
          },
          "dscp": {
            "$ref": "#/components/schemas/UINT8",
            "description": "new DSCP value"
          }
        }
      },
      "mangle_flow_id": {
        "type": "object",
        "title": "set Flow ID",
        "required": [
          "action",
          "flow_id"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-mark"
          },
          "flow_id": {
            "$ref": "#/components/schemas/UINT_0_4294967295",
            "description": "new Flow ID label"
          }
        }
      },
      "mangle_mss": {
        "type": "object",
        "title": "set MSS",
        "required": [
          "action",
          "mss"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-mss"
          },
          "mss": {
            "$ref": "#/components/schemas/UINT",
            "description": "new `MSS` value"
          }
        }
      },
      "mangle_clamp_mss": {
        "type": "object",
        "title": "clamp  clamp `MSS` value to (path_MTU - 40)",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-clamp-mss"
          }
        }
      },
      "mangle_skb_prio": {
        "type": "object",
        "title": "set SKB priority",
        "required": [
          "action",
          "major",
          "minor"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "set-skb-prio"
          },
          "major": {
            "$ref": "#/components/schemas/HEX",
            "description": "major SKB priority"
          },
          "minor": {
            "$ref": "#/components/schemas/HEX",
            "description": "minor SKB priority"
          }
        }
      },
      "mangle_clone": {
        "type": "object",
        "title": "set cloning",
        "required": [
          "action",
          "gateway"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "clone"
          },
          "gateway": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "gateway IPv4 address"
          }
        }
      },
      "mangle_clone_v6": {
        "type": "object",
        "title": "set cloning",
        "required": [
          "action",
          "gateway"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "clone"
          },
          "gateway": {
            "$ref": "#/components/schemas/IPV6_ADDR",
            "description": "gateway IPv6 address"
          }
        }
      },
      "acl_ipv4_mangle_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/mangle_clone",
            "title": "clone"
          },
          {
            "$ref": "#/components/schemas/mangle_permit",
            "title": "permit"
          },
          {
            "$ref": "#/components/schemas/mangle_deny",
            "title": "deny"
          },
          {
            "$ref": "#/components/schemas/mangle_dscp",
            "title": "set DSCP"
          },
          {
            "$ref": "#/components/schemas/mangle_flow_id",
            "title": "set Flow ID"
          },
          {
            "$ref": "#/components/schemas/mangle_mss",
            "title": "set MSS"
          },
          {
            "$ref": "#/components/schemas/mangle_clamp_mss",
            "title": "clamp MSS to MTU"
          },
          {
            "$ref": "#/components/schemas/mangle_tos",
            "title": "set ToS"
          },
          {
            "$ref": "#/components/schemas/mangle_skb_prio",
            "title": "set skb priority"
          }
        ]
      },
      "acl_ipv6_mangle_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/mangle_clone_v6",
            "title": "clone"
          },
          {
            "$ref": "#/components/schemas/mangle_permit",
            "title": "permit"
          },
          {
            "$ref": "#/components/schemas/mangle_deny",
            "title": "deny"
          },
          {
            "$ref": "#/components/schemas/mangle_dscp",
            "title": "set DSCP"
          },
          {
            "$ref": "#/components/schemas/mangle_flow_id",
            "title": "set Flow ID"
          },
          {
            "$ref": "#/components/schemas/mangle_tos",
            "title": "set Traffic Class"
          },
          {
            "$ref": "#/components/schemas/mangle_skb_prio",
            "title": "set skb priority"
          }
        ]
      },
      "acl_mangle_ipv4_chains": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "acl"
        ],
        "properties": {
          "policy": {
            "type": "string",
            "enum": [
              "permit",
              "deny"
            ],
            "description": "policy for the chain"
          },
          "acl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/acl_ipv4_mangle_chain"
            },
            "description": "acl chain"
          }
        }
      },
      "acl_mangle_ipv6_chains": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "acl"
        ],
        "properties": {
          "policy": {
            "type": "string",
            "enum": [
              "permit",
              "deny"
            ],
            "description": "policy for the chain"
          },
          "acl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/acl_ipv6_mangle_chain"
            },
            "description": "acl chain"
          }
        }
      },
      "out_acl_mangle_ipv4_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv4 ACL mangle lists",
        "description": "Result of reading IPv4 ACL mangle lists",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "vrf"
              ],
              "properties": {
                "vrf": {
                  "$ref": "#/components/schemas/VRF",
                  "description": "VRF name"
                },
                "prerouting": {
                  "$ref": "#/components/schemas/acl_mangle_ipv4_chains",
                  "description": "prerouting chains for this VRF"
                },
                "input": {
                  "$ref": "#/components/schemas/acl_mangle_ipv4_chains",
                  "description": "input chains for this VRF"
                },
                "forward": {
                  "$ref": "#/components/schemas/acl_mangle_ipv4_chains",
                  "description": "forward chains for this VRF"
                },
                "output": {
                  "$ref": "#/components/schemas/acl_mangle_ipv4_chains",
                  "description": "output chains for this VRF"
                },
                "postrouting": {
                  "$ref": "#/components/schemas/acl_mangle_ipv4_chains",
                  "description": "prerouting chains for this VRF"
                }
              }
            }
          }
        }
      },
      "out_acl_mangle_ipv6_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv6 ACL mangle lists",
        "description": "Result of reading IPv6 ACL mangle lists",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "vrf"
              ],
              "properties": {
                "vrf": {
                  "$ref": "#/components/schemas/VRF",
                  "description": "VRF name"
                },
                "prerouting": {
                  "$ref": "#/components/schemas/acl_mangle_ipv6_chains",
                  "description": "prerouting chains for this VRF"
                },
                "input": {
                  "$ref": "#/components/schemas/acl_mangle_ipv6_chains",
                  "description": "input chains for this VRF"
                },
                "forward": {
                  "$ref": "#/components/schemas/acl_mangle_ipv6_chains",
                  "description": "forward chains for this VRF"
                },
                "output": {
                  "$ref": "#/components/schemas/acl_mangle_ipv6_chains",
                  "description": "output chains for this VRF"
                },
                "postrouting": {
                  "$ref": "#/components/schemas/acl_mangle_ipv6_chains",
                  "description": "prerouting chains for this VRF"
                }
              }
            }
          }
        }
      },
      "acl_clone_ipv4_chain": {
        "type": "object",
        "additionalroperties": false,
        "required": [
          "acl_name",
          "gateway"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          },
          "gateway": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "gateway IPv4 address"
          }
        }
      },
      "acl_clone_ipv6_chain": {
        "type": "object",
        "additionalroperties": false,
        "required": [
          "acl_name",
          "gateway"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          },
          "gateway": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "gateway IPv6 address"
          }
        }
      },
      "out_acl_clone_ipv4_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv4 cloning chains",
        "description": "Result of reading IPv4 cloning chains",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "vrf"
              ],
              "properties": {
                "vrf": {
                  "$ref": "#/components/schemas/VRF",
                  "description": "VRF name"
                },
                "prerouting": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv4_chain"
                  },
                  "description": "prerouting cloning chains for this VRF"
                },
                "input": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv4_chain"
                  },
                  "description": "input cloning chains for this VRF"
                },
                "forward": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv4_chain"
                  },
                  "description": "forward cloning chains for this VRF"
                },
                "output": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv4_chain"
                  },
                  "description": "output cloning chains for this VRF"
                },
                "postrouting": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv4_chain"
                  },
                  "description": "prerouting cloning chains for this VRF"
                }
              }
            }
          }
        }
      },
      "out_acl_clone_ipv6_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv6 cloning chains",
        "description": "Result of reading IPv6 cloning chains",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "vrf"
              ],
              "properties": {
                "vrf": {
                  "$ref": "#/components/schemas/VRF",
                  "description": "VRF name"
                },
                "prerouting": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv6_chain"
                  },
                  "description": "prerouting cloning chains for this VRF"
                },
                "input": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv6_chain"
                  },
                  "description": "input cloning chains for this VRF"
                },
                "forward": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv6_chain"
                  },
                  "description": "forward cloning chains for this VRF"
                },
                "output": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv6_chain"
                  },
                  "description": "output cloning chains for this VRF"
                },
                "postrouting": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_clone_ipv6_chain"
                  },
                  "description": "prerouting cloning chains for this VRF"
                }
              }
            }
          }
        }
      },
      "in_acl_mangle_ipv4_write": {
        "description": "Modify IPv4 ACL mangle list",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add mangle list",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "mangle"
                    ],
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "mangle": {
                        "$ref": "#/components/schemas/acl_ipv4_mangle_chain",
                        "description": "mangle list"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify (policy only)",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "policy"
                    ],
                    "comment": "you can modify policy only ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "policy": {
                        "type": "string",
                        "enum": [
                          "permit",
                          "deny"
                        ],
                        "description": "policy for the chain"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete mangle list or whole chain",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "clear statistics",
                "required": [
                  "clear"
                ],
                "additionalProperties": false,
                "properties": {
                  "clear": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name (optional, if not given it clear statistics for all VRFs)"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name (optional, if not given it clear statistics for all chains)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_acl_mangle_ipv6_write": {
        "description": "Modify IPv6 ACL mangle list",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "mangle"
                    ],
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "mangle": {
                        "$ref": "#/components/schemas/acl_ipv6_mangle_chain",
                        "description": "mangle list"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify (policy only)",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "policy"
                    ],
                    "comment": "you can modify policy only ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "policy": {
                        "type": "string",
                        "enum": [
                          "permit",
                          "deny"
                        ],
                        "description": "policy for the chain"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "clear statistics",
                "required": [
                  "clear"
                ],
                "additionalProperties": false,
                "properties": {
                  "clear": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name (optional, if not given it clear statistics for all VRFs)"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN",
                        "description": "chain name (optional, if not given it clear statistics for all chains)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_acl_filter_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the list of ACL filters",
        "description": "Result of reading the list of ACL filters",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "anyOf": [
              {
                "required": [
                  "ipv4"
                ],
                "title": "IPv4"
              },
              {
                "required": [
                  "ipv6"
                ],
                "title": "IPv6"
              }
            ],
            "properties": {
              "ipv4": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VRF"
                },
                "description": "VRF names for which IPv6 ACLs are defined"
              },
              "ipv6": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VRF"
                },
                "description": "VRF names for which IPv6 ACLs are defined"
              }
            }
          }
        }
      },
      "filter_reject": {
        "type": "object",
        "title": "reject",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "reject"
          },
          "param": {
            "type": "string",
            "enum": [
              "icmp-net-unreachable",
              "icmp-host-unreachable",
              "icmp-port-unreachable",
              "icmp-proto-unreachable",
              "icmp-net-prohibited",
              "icmp-host-prohibited",
              "icmp-admin-prohibited"
            ]
          }
        }
      },
      "filter_reject_v6": {
        "type": "object",
        "title": "reject",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "reject"
          }
        }
      },
      "filter_permit": {
        "type": "object",
        "title": "permit",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "permit"
          }
        }
      },
      "filter_deny": {
        "type": "object",
        "title": "deny",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "const": "deny"
          }
        }
      },
      "acl_ipv4_filter_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/filter_reject",
            "title": "reject"
          },
          {
            "$ref": "#/components/schemas/filter_permit",
            "title": "permit"
          },
          {
            "$ref": "#/components/schemas/filter_deny",
            "title": "deny"
          }
        ]
      },
      "acl_ipv6_filter_chain": {
        "type": "object",
        "unevaluatedProperties": false,
        "required": [
          "acl_name"
        ],
        "properties": {
          "acl_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "ACL name"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/filter_reject_v6",
            "title": "reject"
          },
          {
            "$ref": "#/components/schemas/filter_permit",
            "title": "permit"
          },
          {
            "$ref": "#/components/schemas/filter_deny",
            "title": "deny"
          }
        ]
      },
      "acl_ipv4_chains": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "acl"
        ],
        "properties": {
          "policy": {
            "type": "string",
            "enum": [
              "permit",
              "deny"
            ],
            "description": "policy for the chain"
          },
          "acl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/acl_ipv4_filter_chain"
            },
            "description": "acl chain"
          }
        }
      },
      "acl_ipv6_chains": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "acl"
        ],
        "properties": {
          "policy": {
            "type": "string",
            "enum": [
              "permit",
              "deny"
            ],
            "description": "policy for the chain"
          },
          "acl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/acl_ipv6_filter_chain"
            },
            "description": "acl chain"
          }
        }
      },
      "out_acl_filter_ipv4_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv4 ACL filters",
        "description": "Result of reading IPv4 ACL filters",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "vrf"
              ],
              "properties": {
                "vrf": {
                  "$ref": "#/components/schemas/VRF",
                  "description": "VRF name"
                },
                "input": {
                  "$ref": "#/components/schemas/acl_ipv4_chains",
                  "description": "input chains for this VRF"
                },
                "forward": {
                  "$ref": "#/components/schemas/acl_ipv4_chains",
                  "description": "forward chains for this VRF"
                },
                "output": {
                  "$ref": "#/components/schemas/acl_ipv4_chains",
                  "description": "output chains for this VRF"
                }
              }
            }
          }
        }
      },
      "out_acl_filter_ipv6_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv6 ACL filters",
        "description": "Result of reading IPv6 ACL filters",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "vrf"
              ],
              "properties": {
                "vrf": {
                  "$ref": "#/components/schemas/VRF",
                  "description": "VRF name"
                },
                "input": {
                  "$ref": "#/components/schemas/acl_ipv6_chains",
                  "description": "input chains for this VRF"
                },
                "forward": {
                  "$ref": "#/components/schemas/acl_ipv6_chains",
                  "description": "forward chains for this VRF"
                },
                "output": {
                  "$ref": "#/components/schemas/acl_ipv6_chains",
                  "description": "output chains for this VRF"
                }
              }
            }
          }
        }
      },
      "in_acl_filter_ipv4_write": {
        "description": "Modify IPv4 ACL filter",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add filter",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "filter"
                    ],
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "filter": {
                        "$ref": "#/components/schemas/acl_ipv4_filter_chain",
                        "description": "filter"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify (policy only)",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "policy"
                    ],
                    "comment": "you can modify policy only ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "policy": {
                        "type": "string",
                        "enum": [
                          "permit",
                          "deny"
                        ],
                        "description": "policy for the chain"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete filter or whole chain",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "clear statistics",
                "required": [
                  "clear"
                ],
                "additionalProperties": false,
                "properties": {
                  "clear": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name (optional, if not given it clear statistics for all VRFs)"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name (optional, if not given it clear statistics for all chains)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_acl_filter_ipv6_write": {
        "description": "Modify IPv6 ACL filter",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "filter"
                    ],
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "filter": {
                        "$ref": "#/components/schemas/acl_ipv6_filter_chain",
                        "description": "filter"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify (policy only)",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain",
                      "policy"
                    ],
                    "comment": "you can modify policy only ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "policy": {
                        "type": "string",
                        "enum": [
                          "permit",
                          "deny"
                        ],
                        "description": "policy for the chain"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vrf",
                      "chain"
                    ],
                    "comment": "if acl_name is not given, all items from chain are deleted ",
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name"
                      },
                      "acl_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "clear statistics",
                "required": [
                  "clear"
                ],
                "additionalProperties": false,
                "properties": {
                  "clear": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name (optional, if not given it clear statistics for all VRFs)"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN",
                        "description": "chain name (optional, if not given it clear statistics for all chains)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_time_range_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the list of time ranges",
        "description": "Result of reading the list of time ranges",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WORD"
            },
            "description": "ranges"
          }
        }
      },
      "time_range_weekdays": {
        "type": "object",
        "title": "time range week days",
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "mon"
            ]
          },
          {
            "required": [
              "tue"
            ]
          },
          {
            "required": [
              "wed"
            ]
          },
          {
            "required": [
              "thu"
            ]
          },
          {
            "required": [
              "fri"
            ]
          },
          {
            "required": [
              "sat"
            ]
          },
          {
            "required": [
              "sun"
            ]
          }
        ],
        "properties": {
          "mon": {
            "type": "boolean",
            "const": true,
            "description": "Monday"
          },
          "tue": {
            "type": "boolean",
            "const": true,
            "description": "Tuesday"
          },
          "wed": {
            "type": "boolean",
            "const": true,
            "description": "Wednesday"
          },
          "thu": {
            "type": "boolean",
            "const": true,
            "description": "Thursday"
          },
          "fri": {
            "type": "boolean",
            "const": true,
            "description": "Friday"
          },
          "sat": {
            "type": "boolean",
            "const": true,
            "description": "Saturday"
          },
          "sun": {
            "type": "boolean",
            "const": true,
            "description": "Sunday"
          }
        }
      },
      "time_range_monthdays": {
        "type": "array",
        "items": {
          "type": "integer",
          "minimum": 1,
          "maximum": 31
        }
      },
      "time_range_configuration_r": {
        "type": "object",
        "title": "time range configuration for read",
        "additionalProperties": false,
        "properties": {
          "datestart": {
            "$ref": "#/components/schemas/DATE_TIME",
            "description": "date (with optional time) to start"
          },
          "datestop": {
            "$ref": "#/components/schemas/DATE_TIME",
            "description": "date (with optional time) to stop"
          },
          "timestart": {
            "$ref": "#/components/schemas/TIME",
            "description": "time to start"
          },
          "timestop": {
            "$ref": "#/components/schemas/TIME",
            "description": "time to end"
          },
          "monthdays": {
            "$ref": "#/components/schemas/time_range_monthdays",
            "description": "month days"
          },
          "weekdays": {
            "$ref": "#/components/schemas/time_range_weekdays",
            "description": "week days"
          }
        }
      },
      "time_range_configuration_w": {
        "type": "object",
        "title": "time range configuration for write",
        "additionalProperties": false,
        "properties": {
          "datestart": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DATE_TIME",
                "description": "date (with optional time) to start"
              },
              {
                "type": "null",
                "description": "to delete parameter"
              }
            ]
          },
          "datestop": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DATE_TIME",
                "description": "date (with optional time) to stop"
              },
              {
                "type": "null",
                "description": "to delete parameter"
              }
            ]
          },
          "timestart": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TIME",
                "description": "time to start"
              },
              {
                "type": "null",
                "description": "to delete parameter"
              }
            ]
          },
          "timestop": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TIME",
                "description": "time to end"
              },
              {
                "type": "null",
                "description": "to delete parameter"
              }
            ]
          },
          "monthdays": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/time_range_monthdays",
                "description": "month days"
              },
              {
                "type": "null",
                "description": "to delete parameter"
              }
            ]
          },
          "weekdays": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/time_range_weekdays",
                "description": "week days"
              },
              {
                "type": "null",
                "description": "to delete parameter"
              }
            ]
          }
        }
      },
      "out_time_range_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading time ranges",
        "description": "Result of reading time ranges",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "name": {
                  "$ref": "#/components/schemas/WORD",
                  "description": "time range name"
                },
                "configuration": {
                  "$ref": "#/components/schemas/time_range_configuration_r",
                  "description": "time range configuration"
                }
              }
            }
          }
        }
      },
      "in_time_range_write": {
        "description": "Modify time ranges",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "configuration"
                    ],
                    "properties": {
                      "name": {
                        "$ref": "#/components/schemas/WORD",
                        "description": "time range name"
                      },
                      "configuration": {
                        "$ref": "#/components/schemas/time_range_configuration_w",
                        "description": "time range configuration to add"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "configuration"
                    ],
                    "properties": {
                      "name": {
                        "$ref": "#/components/schemas/WORD",
                        "description": "time range name"
                      },
                      "configuration": {
                        "$ref": "#/components/schemas/time_range_configuration_w",
                        "description": "time range configuration to change"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "$ref": "#/components/schemas/WORD",
                        "description": "time range name to delete"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_acl_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading the list of ACLs",
        "description": "Result of reading the list of ACLs",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": false,
            "anyOf": [
              {
                "required": [
                  "ipv4"
                ],
                "title": "IPv4"
              },
              {
                "required": [
                  "ipv6"
                ],
                "title": "IPv6"
              }
            ],
            "properties": {
              "ipv4": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ACL_NAME"
                },
                "description": "IPv4 ACLs"
              },
              "ipv6": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ACL_NAME"
                },
                "description": "IPv6 ACLs"
              }
            }
          }
        }
      },
      "acl_dpi": {
        "type": "object",
        "title": "DPI protocol rule",
        "additionalProperties": false,
        "required": [
          "dpi_protocol"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert DPI rule"
          },
          "dpi_protocol": {
            "$ref": "#/components/schemas/DPI_PROTOCOL_TYPE",
            "description": "DPI protocol"
          }
        }
      },
      "acl_macsource": {
        "type": "object",
        "title": "MAC source rule",
        "additionalProperties": false,
        "required": [
          "mac_address"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert MAC source rule"
          },
          "mac_address": {
            "$ref": "#/components/schemas/MAC_ADDR",
            "description": "MAC address"
          }
        }
      },
      "acl_sourceip": {
        "type": "object",
        "title": "Source IP rule",
        "additionalProperties": false,
        "required": [
          "source_subnet"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert source IP rule"
          },
          "source_subnet": {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
            "description": "source IP subnet"
          }
        }
      },
      "acl_sourceip_mask": {
        "type": "object",
        "title": "Source IP mask rule",
        "additionalProperties": false,
        "required": [
          "source_address"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert source IP mask rule"
          },
          "source_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "source IP address"
          },
          "source_mask": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Network or wildcard mask. The type of mask is defined by the most significant bit set in it, for example, subnet `192.168.1.0/24` corresponds to the address with the network mask `192.168.1.0 255.255.255.0` and the address with the wildcard mask `192.168.1.0 0.0.0.255`"
          }
        }
      },
      "acl_sourceports": {
        "type": "object",
        "title": "Source ports rule",
        "additionalProperties": false,
        "required": [
          "source_ports"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert source ports rule"
          },
          "source_ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "source ports"
          }
        }
      },
      "acl_destinationip": {
        "type": "object",
        "title": "Destination IP rule",
        "additionalProperties": false,
        "required": [
          "destination_subnet"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert destination IP rule"
          },
          "destination_subnet": {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
            "description": "destination IP address"
          }
        }
      },
      "acl_destinationip_mask": {
        "type": "object",
        "title": "destination IP mask rule",
        "additionalProperties": false,
        "required": [
          "destination_address"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert destination IP mask rule"
          },
          "destination_address": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "destination IP address"
          },
          "destination_mask": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "Network or wildcard mask. The type of mask is defined by the most significant bit set in it, for example, subnet `192.168.1.0/24` corresponds to the address with the network mask `192.168.1.0 255.255.255.0` and the address with the wildcard mask `192.168.1.0 0.0.0.255`"
          }
        }
      },
      "acl_destinationports": {
        "type": "object",
        "title": "Destination ports rule",
        "additionalProperties": false,
        "required": [
          "destination_ports"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert destination ports rule"
          },
          "destination_ports": {
            "$ref": "#/components/schemas/FILTER_PORT_LISTING",
            "description": "destination ports"
          }
        }
      },
      "acl_tos": {
        "type": "object",
        "title": "Type of service rule",
        "additionalProperties": false,
        "required": [
          "tos_value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert ToS rule"
          },
          "tos_value": {
            "$ref": "#/components/schemas/UINT8",
            "description": "type of service field"
          }
        }
      },
      "acl_dscp": {
        "type": "object",
        "title": "DSCP rule",
        "additionalProperties": false,
        "required": [
          "dscp_value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert DSCP rule"
          },
          "dscp_value": {
            "$ref": "#/components/schemas/UINT6",
            "description": "DiffServ code point value"
          }
        }
      },
      "acl_length": {
        "type": "object",
        "title": "packet length rule",
        "additionalProperties": false,
        "required": [
          "start_length_value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert packet length rule"
          },
          "start_length_value": {
            "$ref": "#/components/schemas/UINT16",
            "description": "Exact/Minimum packet length value"
          },
          "stop_length_value": {
            "$ref": "#/components/schemas/UINT16",
            "description": "Maximum packet length. If not given it is assumed to be `start_length_value`"
          }
        }
      },
      "acl_ininterface": {
        "type": "object",
        "title": "input interface rule",
        "additionalProperties": false,
        "required": [
          "ininterface"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert input interface rule"
          },
          "ininterface": {
            "$ref": "#/components/schemas/STRING",
            "description": "input interface system name"
          }
        }
      },
      "acl_outinterface": {
        "type": "object",
        "title": "output interface rule",
        "additionalProperties": false,
        "required": [
          "outinterface"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert output interface rule"
          },
          "outinterface": {
            "$ref": "#/components/schemas/STRING",
            "description": "output interface system name"
          }
        }
      },
      "acl_tcp_flags": {
        "type": "object",
        "title": "TCP flags rule",
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "FIN"
            ],
            "title": "FIN flag"
          },
          {
            "required": [
              "ACK"
            ],
            "title": "ACK flag"
          },
          {
            "required": [
              "PSH"
            ],
            "title": "PSH flag"
          },
          {
            "required": [
              "RST"
            ],
            "title": "SYN flag"
          },
          {
            "required": [
              "SYN"
            ],
            "title": "RST flag"
          },
          {
            "required": [
              "URG"
            ],
            "title": "URG flag"
          }
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert TCP flags rule",
            "title": "invert rule"
          },
          "FIN": {
            "type": "boolean",
            "description": "FIN flag set or cleared (+FIN/-FIN)"
          },
          "ACK": {
            "type": "boolean",
            "description": "ACK flag set or cleared (+ACK/-ACK)"
          },
          "PSH": {
            "type": "boolean",
            "description": "PSH flag set or cleared (+PSH/-PSH)"
          },
          "RST": {
            "type": "boolean",
            "description": "RST flag set or cleared (+RST/-RST)"
          },
          "SYN": {
            "type": "boolean",
            "description": "SYN flag set or cleared (+SYN/-SYN)"
          },
          "URG": {
            "type": "boolean",
            "description": "URG flag set or cleared (+URG/-URG)"
          }
        }
      },
      "acl_fragment": {
        "type": "object",
        "title": "fragment rule",
        "additionalProperties": false,
        "required": [
          "fragment"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert fragment rule"
          },
          "fragment": {
            "type": "boolean",
            "description": "Matching fragmented packets"
          }
        }
      },
      "acl_skbprio": {
        "type": "object",
        "title": "SKB priority rule",
        "additionalProperties": false,
        "required": [
          "skbprio_value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert SKB priority rule"
          },
          "skbprio_value": {
            "$ref": "#/components/schemas/UINT",
            "description": "Matching SKB prio value"
          }
        }
      },
      "acl_conn_state": {
        "type": "object",
        "title": "connection state rule",
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "new"
            ],
            "title": "new"
          },
          {
            "required": [
              "invalid"
            ],
            "title": "invalid"
          },
          {
            "required": [
              "established"
            ],
            "title": "established"
          },
          {
            "required": [
              "related"
            ],
            "title": "related"
          }
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert connection state rule"
          },
          "new": {
            "type": "boolean",
            "const": true,
            "description": "Packet has started a new connection"
          },
          "invalid": {
            "type": "boolean",
            "const": true,
            "description": "Packet is associated with no known connection"
          },
          "established": {
            "type": "boolean",
            "const": true,
            "description": "Packet is associated with a connection which has seen packets in both directions"
          },
          "related": {
            "type": "boolean",
            "const": true,
            "description": "Packet is starting a new connection, but is associated with an existing connection"
          }
        }
      },
      "acl_hash_limit": {
        "type": "object",
        "title": "rate limiting rule using hash buckets",
        "additionalProperties": false,
        "required": [
          "rate_above_value",
          "hash_limit_name"
        ],
        "properties": {
          "rate_above_value": {
            "$ref": "#/components/schemas/UINT",
            "description": "Limiting match speed in kbit/s"
          },
          "h1_burst_value": {
            "$ref": "#/components/schemas/UINT",
            "description": "hashlimit burst value"
          },
          "hash_limit_name": {
            "$ref": "#/components/schemas/STRING",
            "description": "hashlimit name"
          }
        }
      },
      "acl_string": {
        "type": "object",
        "title": "Matching string rule",
        "additionalProperties": false,
        "required": [
          "matching_string"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert matching string rule"
          },
          "matching_string": {
            "$ref": "#/components/schemas/STRING",
            "description": "matching string in packet"
          }
        }
      },
      "acl_u32": {
        "type": "object",
        "title": "u32 filter parameters",
        "additionalProperties": false,
        "required": [
          "start_position_value",
          "mask_value",
          "start_comp_value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert u32 rule"
          },
          "start_position_value": {
            "$ref": "#/components/schemas/UINT",
            "description": "start position in bytes (beginning from 3rd)"
          },
          "mask_value": {
            "$ref": "#/components/schemas/HEX",
            "description": "hex value for mask (up to 4 bytes)"
          },
          "shift_value": {
            "$ref": "#/components/schemas/UINT",
            "description": "value of shift the byte sequence after appying the mask (optional, default 0)"
          },
          "start_comp_value": {
            "$ref": "#/components/schemas/UINT_HEX",
            "description": "start of comparision range"
          },
          "stop_comp_value": {
            "$ref": "#/components/schemas/UINT_HEX",
            "description": "end of comparision range (optional - `start_comp_value` if not given"
          }
        }
      },
      "dodso_class": {
        "oneOf": [
          {
            "title": "value with optional mask",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "value"
            ],
            "properties": {
              "not": {
                "type": "boolean",
                "description": "invert DoD SO class rule"
              },
              "value": {
                "$ref": "#/components/schemas/UINT_HEX",
                "description": "DoD SO class value"
              },
              "mask": {
                "$ref": "#/components/schemas/UINT_HEX",
                "description": "mask for DoD SO class value (optional)"
              }
            }
          },
          {
            "title": "less than",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "lt"
            ],
            "properties": {
              "not": {
                "type": "boolean",
                "description": "invert DoD SO class rule"
              },
              "lt": {
                "$ref": "#/components/schemas/UINT_HEX",
                "description": "DoD SO class to be less than value"
              }
            }
          },
          {
            "title": "greater than",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "gt"
            ],
            "properties": {
              "not": {
                "type": "boolean",
                "description": "invert DoD SO class rule"
              },
              "gt": {
                "$ref": "#/components/schemas/UINT_HEX",
                "description": "DoD SO class to be greater than value"
              }
            }
          },
          {
            "title": "range value",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "lt",
              "gt"
            ],
            "properties": {
              "not": {
                "type": "boolean",
                "description": "invert DoD SO class rule"
              },
              "lt": {
                "$ref": "#/components/schemas/UINT_HEX",
                "description": "DoD SO class to be less than value"
              },
              "gt": {
                "$ref": "#/components/schemas/UINT_HEX",
                "description": "DoD SO class to be greater than value"
              }
            }
          }
        ]
      },
      "dodso_exist": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "exist"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert rule"
          },
          "exist": {
            "type": "string",
            "const": "exist",
            "description": "check if label exist"
          }
        }
      },
      "dodso_paf": {
        "title": "DoD SO Protection Authority Flags(PAF)",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert DoD SO class rule"
          },
          "value": {
            "$ref": "#/components/schemas/UINT_HEX",
            "description": "DoD SO Protection Authority Flags(PAF) value"
          }
        }
      },
      "acl_dodso": {
        "type": "object",
        "title": "DoD security option filter",
        "additionalProperties": false,
        "anyOf": [
          {
            "reqired": [
              "dodso_exist"
            ],
            "title": "DoD DO exist flags"
          },
          {
            "reqired": [
              "dodso_class"
            ],
            "title": "DoD SO class"
          },
          {
            "reqired": [
              "dodso_prot_flags"
            ],
            "title": "protection flags"
          }
        ],
        "properties": {
          "dodso_exist": {
            "$ref": "#/components/schemas/dodso_exist",
            "description": "check if exist"
          },
          "dodso_class": {
            "$ref": "#/components/schemas/dodso_class",
            "description": "class parameters"
          },
          "dodso_prot_flags": {
            "$ref": "#/components/schemas/dodso_paf",
            "description": "DoD SO Protection Authority Flags(PAF)"
          }
        }
      },
      "dodeso_format_1": {
        "title": "DoD ESO first ASI format code ",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert rule"
          },
          "value": {
            "$ref": "#/components/schemas/UINT_HEX",
            "description": "first ASI format code"
          }
        }
      },
      "dodeso_format_2": {
        "title": "DoD ESO second ASI format code ",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert rule"
          },
          "value": {
            "$ref": "#/components/schemas/UINT_HEX",
            "description": "second ASI format code"
          }
        }
      },
      "dodeso_secinfo_1": {
        "title": "first ASI label ",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert rule"
          },
          "value": {
            "$ref": "#/components/schemas/FILTER_HEX",
            "description": "first ASI label"
          }
        }
      },
      "dodeso_secinfo_2": {
        "title": "second ASI label ",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert rule"
          },
          "value": {
            "$ref": "#/components/schemas/FILTER_HEX",
            "description": "second ASI label"
          }
        }
      },
      "acl_dodeso": {
        "type": "object",
        "title": "DoD extended security option filter",
        "additionalProperties": false,
        "anyOf": [
          {
            "reqired": [
              "dodeso_exist"
            ],
            "title": "DoD ESO exist flags"
          },
          {
            "reqired": [
              "dodeso_format_1"
            ],
            "title": "first ASI code"
          },
          {
            "reqired": [
              "dodeso_format_2"
            ],
            "title": "second ASI code"
          },
          {
            "reqired": [
              "dodeso_secinfo_1"
            ],
            "title": "first ASI label"
          },
          {
            "reqired": [
              "dodeso_secinfo_2"
            ],
            "title": "second ASI label"
          }
        ],
        "properties": {
          "dodeso_exist": {
            "$ref": "#/components/schemas/dodso_exist",
            "description": "check if exist"
          },
          "dodeso_format_1": {
            "$ref": "#/components/schemas/dodeso_format_1",
            "description": "first ASI format code"
          },
          "dodeso_format_2": {
            "$ref": "#/components/schemas/dodeso_format_2",
            "description": "second ASI format code"
          },
          "dodeso_secinfo_1": {
            "$ref": "#/components/schemas/dodeso_secinfo_1",
            "description": "first ASI label"
          },
          "dodeso_secinfo_2": {
            "$ref": "#/components/schemas/dodeso_secinfo_2",
            "description": "second ASI label"
          }
        }
      },
      "acl_icmp": {
        "type": "object",
        "title": "ICMP protocol rule",
        "additionalProperties": false,
        "required": [
          "icmp_type_value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert ICMP rule"
          },
          "icmp_type_value": {
            "$ref": "#/components/schemas/UINT",
            "description": "ICMP type"
          },
          "icmp_code": {
            "$ref": "#/components/schemas/UINT",
            "description": "ICMP code"
          }
        }
      },
      "acl_igmp_dest": {
        "type": "object",
        "title": "IGMP destination rule",
        "additionalProperties": false,
        "required": [
          "igmp_dest_addr"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert IGMP destination rule"
          },
          "igmp_dest_addr": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IGMP destination address"
          }
        }
      },
      "acl_igmp_src": {
        "type": "object",
        "title": "IGMP source rule",
        "additionalProperties": false,
        "required": [
          "igmp_src_addr"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert IGMP destination rule"
          },
          "igmp_src_addr": {
            "$ref": "#/components/schemas/IP_ADDR",
            "description": "IGMP source address"
          }
        }
      },
      "acl_protocol": {
        "type": "object",
        "title": "protocol rule",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "protocol_name"
            ]
          },
          {
            "required": [
              "protocol_num"
            ]
          }
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert protocol rule"
          },
          "protocol_name": {
            "$ref": "#/components/schemas/IP_PROTOCOL_TYPE",
            "description": "protocol type/name"
          },
          "protocol_num": {
            "$ref": "#/components/schemas/UINT",
            "description": "protocol number"
          }
        }
      },
      "acl_ipv4_rule": {
        "type": "object",
        "title": "access control list rule",
        "additionalProperties": false,
        "allOf": [
          {
            "not": {
              "required": [
                "sourceip",
                "sourceip_mask"
              ],
              "title": "sourceip and sourceip_mask are mutually exclusive"
            }
          },
          {
            "not": {
              "required": [
                "destinationip",
                "destinationip_mask"
              ],
              "title": "destinationip and destinationip_mask are mutually exclusive"
            }
          },
          {
            "anyOf": [
              {
                "required": [
                  "dpi"
                ],
                "title": "DPI protocol rule"
              },
              {
                "required": [
                  "macsource"
                ],
                "title": "MAC source rule"
              },
              {
                "required": [
                  "sourceip"
                ],
                "title": "Source IP rule"
              },
              {
                "required": [
                  "sourceip_mask"
                ],
                "title": "Source IP mask rule"
              },
              {
                "required": [
                  "sourceports"
                ],
                "title": "Source ports rule"
              },
              {
                "required": [
                  "destinationip"
                ],
                "title": "Destination IP rule"
              },
              {
                "required": [
                  "destinationip_mask"
                ],
                "title": "Destination IP mask rule"
              },
              {
                "required": [
                  "destinationports"
                ],
                "title": "Destination ports rule"
              },
              {
                "required": [
                  "tos"
                ],
                "title": "Type of service rule"
              },
              {
                "required": [
                  "dscp"
                ],
                "title": "DSCP rule"
              },
              {
                "required": [
                  "length"
                ],
                "title": "Packet length rule"
              },
              {
                "required": [
                  "ininterface"
                ],
                "title": "input interface rule"
              },
              {
                "required": [
                  "outinterface"
                ],
                "title": "output interface rule"
              },
              {
                "required": [
                  "tcp_flags"
                ],
                "title": "TCP flags rule"
              },
              {
                "required": [
                  "fragment"
                ],
                "title": "fragment rule"
              },
              {
                "required": [
                  "skbprio"
                ],
                "title": "SKB priority rule"
              },
              {
                "required": [
                  "conn_state"
                ],
                "title": "connection state rule"
              },
              {
                "required": [
                  "hash_limit"
                ],
                "title": "rate limiting rule"
              },
              {
                "required": [
                  "string"
                ],
                "title": "Matching string rule"
              },
              {
                "required": [
                  "u32"
                ],
                "title": "u32 filter parameters"
              },
              {
                "required": [
                  "protocol"
                ],
                "title": "protocol rule"
              },
              {
                "required": [
                  "icmp"
                ],
                "title": "ICMP protocol rule"
              },
              {
                "required": [
                  "igmp_dest"
                ],
                "title": "IGMP destination rule"
              },
              {
                "required": [
                  "igmp_src"
                ],
                "title": "IGMP source rule"
              },
              {
                "required": [
                  "limit_rate"
                ],
                "title": "limiting rule"
              }
            ]
          }
        ],
        "properties": {
          "dpi": {
            "$ref": "#/components/schemas/acl_dpi",
            "title": "DPI rule"
          },
          "macsource": {
            "$ref": "#/components/schemas/acl_macsource"
          },
          "sourceip": {
            "$ref": "#/components/schemas/acl_sourceip"
          },
          "sourceip_mask": {
            "$ref": "#/components/schemas/acl_sourceip_mask"
          },
          "sourceports": {
            "$ref": "#/components/schemas/acl_sourceports"
          },
          "destinationip": {
            "$ref": "#/components/schemas/acl_destinationip"
          },
          "destinationip_mask": {
            "$ref": "#/components/schemas/acl_destinationip_mask"
          },
          "destinationports": {
            "$ref": "#/components/schemas/acl_destinationports"
          },
          "tos": {
            "$ref": "#/components/schemas/acl_tos"
          },
          "dscp": {
            "$ref": "#/components/schemas/acl_dscp"
          },
          "length": {
            "$ref": "#/components/schemas/acl_length"
          },
          "ininterface": {
            "$ref": "#/components/schemas/acl_ininterface"
          },
          "outinterface": {
            "$ref": "#/components/schemas/acl_outinterface"
          },
          "tcp_flags": {
            "$ref": "#/components/schemas/acl_tcp_flags"
          },
          "fragment": {
            "$ref": "#/components/schemas/acl_fragment"
          },
          "skbprio": {
            "$ref": "#/components/schemas/acl_skbprio"
          },
          "conn_state": {
            "$ref": "#/components/schemas/acl_conn_state"
          },
          "hash_limit": {
            "$ref": "#/components/schemas/acl_hash_limit"
          },
          "string": {
            "$ref": "#/components/schemas/acl_string"
          },
          "u32": {
            "$ref": "#/components/schemas/acl_u32"
          },
          "dodso": {
            "$ref": "#/components/schemas/acl_dodso"
          },
          "dodeso": {
            "$ref": "#/components/schemas/acl_dodeso"
          },
          "protocol": {
            "$ref": "#/components/schemas/acl_protocol"
          },
          "icmp": {
            "$ref": "#/components/schemas/acl_icmp"
          },
          "igmp_dest": {
            "$ref": "#/components/schemas/acl_igmp_dest"
          },
          "igmp_src": {
            "$ref": "#/components/schemas/acl_igmp_src"
          },
          "limit_rate": {
            "$ref": "#/components/schemas/FILTER_UNTIL_RATE",
            "description": "R/{second|minute|hour|day}, *R* is a positive integer"
          },
          "time_range": {
            "$ref": "#/components/schemas/WORD",
            "description": "Time range name, see /acl/time_range/list"
          },
          "logging": {
            "type": "boolean",
            "const": true,
            "description": "logging enabled (optional)"
          }
        }
      },
      "acl_ipv6_sourceip": {
        "type": "object",
        "title": "Source IPv6 rule",
        "additionalProperties": false,
        "required": [
          "source_subnet"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert source IPv6 rule"
          },
          "source_subnet": {
            "$ref": "#/components/schemas/IPV6_ADDR_MAY_HAVE_BIT_MASK",
            "description": "source IPv6 address"
          }
        }
      },
      "acl_ipv6_destinationip": {
        "type": "object",
        "title": "Destination IPv6 rule",
        "additionalProperties": false,
        "required": [
          "destination_subnet"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert destination IPv6 rule"
          },
          "destination_subnet": {
            "$ref": "#/components/schemas/IPV6_ADDR_MAY_HAVE_BIT_MASK",
            "description": "destination IPv6 address"
          }
        }
      },
      "acl_ipv6_traffic_class": {
        "type": "object",
        "title": "Traffic class rule",
        "additionalProperties": false,
        "required": [
          "traffic_class_value"
        ],
        "properties": {
          "not": {
            "type": "boolean",
            "description": "invert Traffic class rule"
          },
          "traffic_class_value": {
            "$ref": "#/components/schemas/UINT8",
            "description": "traffic class value"
          }
        }
      },
      "acl_ipv6_rule": {
        "type": "object",
        "title": "access control list rule",
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "dpi"
            ],
            "title": "DPI protocol rule"
          },
          {
            "required": [
              "macsource"
            ],
            "title": "MAC source rule"
          },
          {
            "required": [
              "sourceip"
            ],
            "title": "Source IP rule"
          },
          {
            "required": [
              "sourceports"
            ],
            "title": "Source ports rule"
          },
          {
            "required": [
              "destinationip"
            ],
            "title": "Destination IP rule"
          },
          {
            "required": [
              "destinationports"
            ],
            "title": "Destination ports rule"
          },
          {
            "required": [
              "traffic_class"
            ]
          },
          {
            "required": [
              "dscp"
            ],
            "title": "DSCP rule"
          },
          {
            "required": [
              "length"
            ],
            "title": "Packet length rule"
          },
          {
            "required": [
              "ininterface"
            ],
            "title": "input interface rule"
          },
          {
            "required": [
              "outinterface"
            ],
            "title": "output interface rule"
          },
          {
            "required": [
              "tcp_flags"
            ],
            "title": "TCP flags rule"
          },
          {
            "required": [
              "skbprio"
            ],
            "title": "SKB priority rule"
          },
          {
            "required": [
              "hash_limit"
            ],
            "title": "rate limiting rule"
          },
          {
            "required": [
              "string"
            ],
            "title": "Matching string rule"
          },
          {
            "required": [
              "u32"
            ],
            "title": "u32 filter parameters"
          },
          {
            "required": [
              "protocol"
            ],
            "title": "protocol rule"
          },
          {
            "required": [
              "icmp"
            ],
            "title": "ICMP protocol rule"
          },
          {
            "required": [
              "limit_rate"
            ],
            "title": "limiting rule"
          }
        ],
        "properties": {
          "dpi": {
            "$ref": "#/components/schemas/acl_dpi"
          },
          "macsource": {
            "$ref": "#/components/schemas/acl_macsource"
          },
          "sourceip": {
            "$ref": "#/components/schemas/acl_ipv6_sourceip"
          },
          "sourceports": {
            "$ref": "#/components/schemas/acl_sourceports"
          },
          "destinationip": {
            "$ref": "#/components/schemas/acl_ipv6_destinationip"
          },
          "destinationports": {
            "$ref": "#/components/schemas/acl_destinationports"
          },
          "traffic_class": {
            "$ref": "#/components/schemas/acl_ipv6_traffic_class"
          },
          "dscp": {
            "$ref": "#/components/schemas/acl_dscp"
          },
          "length": {
            "$ref": "#/components/schemas/acl_length"
          },
          "ininterface": {
            "$ref": "#/components/schemas/acl_ininterface"
          },
          "outinterface": {
            "$ref": "#/components/schemas/acl_outinterface"
          },
          "tcp_flags": {
            "$ref": "#/components/schemas/acl_tcp_flags"
          },
          "skbprio": {
            "$ref": "#/components/schemas/acl_skbprio"
          },
          "hash_limit": {
            "$ref": "#/components/schemas/acl_hash_limit"
          },
          "string": {
            "$ref": "#/components/schemas/acl_string"
          },
          "u32": {
            "$ref": "#/components/schemas/acl_u32"
          },
          "protocol": {
            "$ref": "#/components/schemas/acl_protocol"
          },
          "icmp": {
            "$ref": "#/components/schemas/acl_icmp"
          },
          "limit_rate": {
            "$ref": "#/components/schemas/FILTER_UNTIL_RATE",
            "description": "R/{second|minute|hour|day}, *R* is a positive integer"
          },
          "time_range": {
            "$ref": "#/components/schemas/WORD",
            "description": "Time range name, see /acl/time_range/list"
          },
          "logging": {
            "type": "boolean",
            "const": true,
            "description": "logging enabled (optional)"
          }
        }
      },
      "out_acl_ipv4_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv4 ACL rules",
        "description": "Result of reading IPv4 ACL rules",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "list_name": {
                  "$ref": "#/components/schemas/ACL_NAME",
                  "description": "ACL name"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_ipv4_rule"
                  },
                  "description": "list of rules"
                }
              }
            }
          }
        }
      },
      "out_acl_ipv6_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading IPv6 ACL rules",
        "description": "Result of reading IPv6 ACL rules",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "list_name": {
                  "$ref": "#/components/schemas/ACL_NAME",
                  "description": "ACL name"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/acl_ipv6_rule"
                  },
                  "description": "list of rules"
                }
              }
            }
          }
        }
      },
      "in_acl_ipv4_write": {
        "description": "Modify IPv4 ACL rule",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name",
                      "rule"
                    ],
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/acl_ipv4_rule",
                        "description": "rule to add"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name"
                    ],
                    "comment": "rule and index are mutually exclusive. If none of them give while ACL is deleted",
                    "not": {
                      "required": [
                        "rule",
                        "index"
                      ]
                    },
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/acl_ipv4_rule",
                        "description": "rule to delete"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to delete"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_acl_ipv6_write": {
        "description": "Modify IPv6 ACL rule",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name",
                      "rule"
                    ],
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/acl_ipv6_rule",
                        "description": "rule to add"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to insert, if not given it will be inserted to the end of list"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "list_name"
                    ],
                    "comment": "rule and index are mutually exclusive. If none of them give while ACL is deleted",
                    "not": {
                      "required": [
                        "rule",
                        "index"
                      ]
                    },
                    "properties": {
                      "list_name": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "ACL name"
                      },
                      "rule": {
                        "$ref": "#/components/schemas/acl_ipv6_rule",
                        "description": "rule to delete"
                      },
                      "index": {
                        "$ref": "#/components/schemas/UINT_1_1000",
                        "description": "one-based index to delete"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "in_acl_log_write": {
        "description": "Change ACL logging options on one rule or on whole ACL",
        "type": "object",
        "required": [
          "proto",
          "list_name",
          "logging"
        ],
        "additionalProperties": false,
        "properties": {
          "proto": {
            "$ref": "#/components/schemas/IP_PROTO",
            "description": "ipv4/ipv6 rule"
          },
          "list_name": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "access list name"
          },
          "logging": {
            "type": "boolean",
            "description": "new logging option for rules"
          },
          "index": {
            "$ref": "#/components/schemas/UINT_1_1000",
            "description": "one-based index of rule in ACL, if not given all the rules inside of ACL will be changed"
          }
        }
      },
      "out_acl_show_iptables_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response display IP tables",
        "description": "Result of reading IP tables",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "strings to display"
          }
        }
      },
      "nat_port": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UINT_1_65535",
            "title": "specific port"
          },
          {
            "type": "array",
            "title": "range of ports",
            "items": {
              "$ref": "#/components/schemas/UINT_1_65535"
            },
            "minItems": 2,
            "maxItems": 2
          }
        ]
      },
      "nat_ip": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IP_ADDR",
            "title": "specific IP address"
          },
          {
            "type": "array",
            "title": "range of IP addresses",
            "items": {
              "$ref": "#/components/schemas/IP_ADDR"
            },
            "minItems": 2,
            "maxItems": 2
          }
        ]
      },
      "out_nat_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading NAT capability",
        "description": "Result of reading results of reading NAT capability",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/nat_capabilities_r",
            "description": "capabilities to read"
          }
        }
      },
      "nat_chain": {
        "type": "string",
        "enum": [
          "prerouting",
          "output",
          "postrouting"
        ],
        "description": "NAT chain"
      },
      "nat_prerouting": {
        "type": "object",
        "title": "prerouting chain",
        "additionalProperties": false,
        "required": [
          "acl",
          "ip"
        ],
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "access list name"
          },
          "persistent": {
            "type": "boolean",
            "description": " (optional)"
          },
          "ip": {
            "$ref": "#/components/schemas/nat_ip",
            "description": "ip or range"
          },
          "port": {
            "$ref": "#/components/schemas/nat_port",
            "description": "port or range (optional)"
          }
        }
      },
      "nat_output": {
        "type": "object",
        "title": "output chain",
        "additionalProperties": false,
        "required": [
          "acl",
          "ip"
        ],
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/ACL_NAME",
            "description": "access list name"
          },
          "persistent": {
            "type": "boolean",
            "description": " (optional)"
          },
          "ip": {
            "$ref": "#/components/schemas/nat_ip",
            "description": "ip or range"
          },
          "port": {
            "$ref": "#/components/schemas/nat_port",
            "description": "port or range (optional)"
          }
        }
      },
      "nat_postrouting": {
        "type": "object",
        "title": "postrouting chain",
        "oneOf": [
          {
            "title": "snat",
            "additionalProperties": false,
            "required": [
              "acl",
              "ip"
            ],
            "properties": {
              "acl": {
                "$ref": "#/components/schemas/ACL_NAME",
                "description": "access list name"
              },
              "persistent": {
                "type": "boolean",
                "description": " (optional)"
              },
              "ip": {
                "$ref": "#/components/schemas/nat_ip",
                "description": "ip or range"
              },
              "port": {
                "$ref": "#/components/schemas/nat_port",
                "description": "port or range (optional)"
              }
            }
          },
          {
            "title": "masquerade",
            "additionalProperties": false,
            "required": [
              "acl"
            ],
            "properties": {
              "acl": {
                "$ref": "#/components/schemas/ACL_NAME",
                "description": "access list name"
              },
              "pure_nat": {
                "type": "boolean",
                "description": "use pure NAT (optional)"
              }
            }
          }
        ]
      },
      "out_nat_chains_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading NAT chains",
        "description": "Result of reading NAT chains",
        "properties": {
          "result": {
            "type": "object",
            "description": "chains",
            "additionalProperties": false,
            "required": [
              "prerouting",
              "output",
              "postrouting"
            ],
            "properties": {
              "prerouting": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/nat_prerouting"
                }
              },
              "output": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/nat_output"
                }
              },
              "postrouting": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/nat_postrouting"
                }
              }
            }
          }
        }
      },
      "in_nat_chains_write": {
        "description": "Modify NAT chains",
        "type": "object",
        "required": [
          "action"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "chain",
                          "item"
                        ],
                        "additionalProperties": false,
                        "title": "prerouting",
                        "properties": {
                          "chain": {
                            "type": "string",
                            "const": "prerouting"
                          },
                          "item": {
                            "$ref": "#/components/schemas/nat_prerouting",
                            "description": "prerouting chain"
                          },
                          "position": {
                            "$ref": "#/components/schemas/UINT_1_65535",
                            "description": "index to insert (optional, if not set it is inserted to the end)"
                          },
                          "vrf": {
                            "$ref": "#/components/schemas/VRF",
                            "description": "vrf name (optional)"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "chain",
                          "item"
                        ],
                        "title": "output",
                        "properties": {
                          "chain": {
                            "type": "string",
                            "const": "output"
                          },
                          "item": {
                            "$ref": "#/components/schemas/nat_output",
                            "description": "output chain"
                          },
                          "position": {
                            "$ref": "#/components/schemas/UINT_1_65535",
                            "description": "index to insert (optional, if not set it is inserted to the end)"
                          },
                          "vrf": {
                            "$ref": "#/components/schemas/VRF",
                            "description": "vrf name (optional)"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "chain",
                          "item"
                        ],
                        "title": "postrouting",
                        "properties": {
                          "chain": {
                            "type": "string",
                            "const": "postrouting"
                          },
                          "item": {
                            "$ref": "#/components/schemas/nat_postrouting",
                            "description": "postrouting chain"
                          },
                          "position": {
                            "$ref": "#/components/schemas/UINT_1_65535",
                            "description": "index to insert (optional, if not set it is inserted to the end)"
                          },
                          "vrf": {
                            "$ref": "#/components/schemas/VRF",
                            "description": "vrf name (optional)"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "type": "object",
                    "required": [
                      "chain",
                      "acl"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "chain": {
                        "$ref": "#/components/schemas/nat_chain",
                        "description": "chain"
                      },
                      "acl": {
                        "$ref": "#/components/schemas/ACL_NAME",
                        "description": "access list name"
                      },
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "vrf name (optional)"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "title": "clear statistics",
                "required": [
                  "clear"
                ],
                "additionalProperties": false,
                "properties": {
                  "clear": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "vrf": {
                        "$ref": "#/components/schemas/VRF",
                        "description": "VRF name (optional, if not given it clear statistics for all VRFs)"
                      },
                      "chain": {
                        "$ref": "#/components/schemas/nat_chain",
                        "description": "chain (optional, if not given it clear statistics for all chains)"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "nat_conntrack_r": {
        "type": "object",
        "oneOf": [
          {
            "additionalProperties": false,
            "required": [
              "connection_tracking"
            ],
            "properties": {
              "connection_tracking": {
                "type": "boolean",
                "const": false,
                "description": "statistics tracking disabled (see `/acl/nat/capabilities` endpoint)"
              }
            }
          },
          {
            "additionalProperties": false,
            "required": [
              "connection_tracking"
            ],
            "properties": {
              "connection_tracking": {
                "type": "boolean",
                "const": true,
                "description": "statistics tracking enabled (see `/acl/nat/capabilities` endpoint)"
              },
              "max_sessions_number": {
                "$ref": "#/components/schemas/UINT",
                "description": "actual maximum number of NAT sessions (optional)"
              },
              "hash_table_size": {
                "$ref": "#/components/schemas/UINT",
                "description": "actual hash table size (optional)"
              }
            }
          }
        ]
      },
      "nat_capabilities_r": {
        "type": "object",
        "required": [
          "connection_tracking"
        ],
        "additionalProperties": false,
        "properties": {
          "connection_tracking": {
            "type": "boolean",
            "description": "enable statistics tracking (see `/acl/nat/connections`, `/acl/nat/conntrack` endpoints)"
          },
          "max_sessions_number": {
            "$ref": "#/components/schemas/UINT",
            "description": "maximum number of NAT sessions (administrative value - set automatically once enabling statistics) "
          }
        }
      },
      "nat_capabilities_w": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {
          "connection_tracking": {
            "type": "boolean",
            "description": "enable statistics tracking (see `/acl/nat/connections`, `/acl/nat/conntrack` endpoint)"
          },
          "max_sessions_number": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT",
                "description": "maximum number of NAT sessions"
              },
              {
                "type": "null",
                "description": "reset to default value"
              }
            ]
          }
        }
      },
      "out_nat_conntrack_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading NAT conntrack values",
        "description": "Result of reading results of reading actual NAT conntrack values",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/nat_conntrack_r",
            "description": "conntrack values"
          }
        }
      },
      "in_nat_capability_write": {
        "description": "Modify NAT capabilities",
        "type": "object",
        "required": [
          "capabilities"
        ],
        "additionalProperties": false,
        "properties": {
          "capabilities": {
            "$ref": "#/components/schemas/nat_capabilities_w",
            "description": "capabilities to write"
          }
        }
      },
      "nf_conntrack_entry": {
        "comment": "NAT conntrack record, see /proc/net/nf_conntrack",
        "type": "object",
        "required": [
          "name",
          "num",
          "tname",
          "tnum",
          "till"
        ],
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "network protocol name, i.e. ipv4"
          },
          "num": {
            "type": "integer",
            "description": "network protocol number"
          },
          "tname": {
            "type": "string",
            "description": "transmission layer protocol name, i.e. tcp"
          },
          "tnum": {
            "type": "integer",
            "description": "transmission layer protocol number"
          },
          "till": {
            "type": "integer",
            "description": "The seconds until the entry is invalidated"
          },
          "state": {
            "type": "string",
            "description": "connection state (optional)"
          },
          "flags": {
            "type": "array",
            "description": "connection flags/named values (optional)",
            "items": {
              "type": "string",
              "description": "flag or key=value pair"
            }
          }
        }
      },
      "nf_session_entry": {
        "type": "array",
        "prefixItems": [
          {
            "type": "string",
            "description": "Proto"
          },
          {
            "type": "integer",
            "description": "Recv-Q"
          },
          {
            "type": "integer",
            "description": "Send-Q"
          },
          {
            "type": "string",
            "description": "Local Address"
          },
          {
            "type": "string",
            "description": "Foreigh Address"
          },
          {
            "type": "string",
            "description": "State"
          }
        ],
        "minItems": 6,
        "maxItems": 6,
        "description": "NAT session entry as shown in netstat -nt -A inet"
      },
      "out_nat_sessions_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading NAT sessions table",
        "description": "Result of reading NAT sessions table",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nf_session_entry",
              "description": "NAT session entries"
            }
          }
        }
      },
      "out_nat_connections_count_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading number of records in nf conntrack table",
        "description": "Result of reading number of records in nf conntrack table",
        "properties": {
          "result": {
            "type": "integer",
            "description": "number of NAT connection entries"
          }
        }
      },
      "out_nat_connections_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response to reading nf conntrack table",
        "description": "Result of reading nf conntrack table",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nf_conntrack_entry",
              "description": "NAT connection entries"
            }
          }
        }
      },
      "interfaces_bond_ifname": {
        "description": "bonding interface name",
        "type": "string",
        "pattern": "^bond(0|[1-9][0-9]{0,3})$"
      },
      "bond_settings_r": {
        "required": [
          "mode",
          "link_monitor_period",
          "hash_policy",
          "enslave"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "description": "Bonding mode",
            "oneOf": [
              {
                "title": "balance-rr/balance-xor/broadcast",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "enum": [
                      "balance-rr",
                      "balance-xor",
                      "broadcast"
                    ],
                    "description": "balance-rr/balance-xor/broadcast"
                  }
                }
              },
              {
                "title": "802.3ad",
                "required": [
                  "mode_type",
                  "lacp_rate"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "802.3ad",
                    "description": "IEEE 802.3ad Dynamic link aggregation"
                  },
                  "lacp_rate": {
                    "description": "LACPDU transmission rate",
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "slow",
                        "description": "Transmit LACPDUs every 30 seconds"
                      },
                      {
                        "type": "string",
                        "const": "fast",
                        "description": "Transmit LACPDUs every 1 second"
                      }
                    ]
                  }
                }
              },
              {
                "title": "active-backup/balance-tlb/balance-alb",
                "required": [
                  "mode_type",
                  "primary_interface"
                ],
                "properties": {
                  "mode_type": {
                    "enum": [
                      "active-backup",
                      "balance-tlb",
                      "balance-alb"
                    ],
                    "description": "active-backup/balance-tlb/balance-alb"
                  },
                  "primary_interface": {
                    "description": "Primary interface",
                    "oneOf": [
                      {
                        "title": "ethernet",
                        "$ref": "#/components/schemas/interfaces_ethernet_ifname",
                        "description": "Ethernet interface"
                      },
                      {
                        "title": "eth-vlan",
                        "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
                      },
                      {
                        "title": "vlan",
                        "$ref": "#/components/schemas/interfaces_vlan_ifname",
                        "description": "Vlan interface"
                      },
                      {
                        "$ref": "#/components/schemas/null",
                        "description": "No primary interface"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "link_monitor_period": {
            "$ref": "#/components/schemas/UINT_0_2147483647",
            "description": "MII link monitoring frequency"
          },
          "hash_policy": {
            "description": "Hash policy.",
            "type": "string",
            "oneOf": [
              {
                "const": "layer2",
                "description": "Use only MAC addresses. (by default)"
              },
              {
                "const": "layer2+3",
                "description": "Use MAC and IP addresses"
              },
              {
                "const": "layer3+4",
                "description": "Use IP addresses and upper protocol information"
              }
            ]
          },
          "enslave": {
            "type": "array",
            "description": "list of connected ethernet and vlan interfaces",
            "items": {
              "oneOf": [
                {
                  "title": "ethernet",
                  "$ref": "#/components/schemas/interfaces_ethernet_ifname"
                },
                {
                  "title": "eth-vlan",
                  "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
                },
                {
                  "title": "vlan",
                  "$ref": "#/components/schemas/interfaces_vlan_ifname"
                }
              ]
            }
          }
        }
      },
      "bond_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hash_policy": {
            "description": "Set hash policy.",
            "type": "string",
            "oneOf": [
              {
                "const": "layer2",
                "description": "Use only MAC addresses. (by default)"
              },
              {
                "const": "layer2+3",
                "description": "Use MAC and IP addresses"
              },
              {
                "const": "layer3+4",
                "description": "Use IP addresses and upper protocol information"
              }
            ]
          },
          "link_monitor_period": {
            "description": "Set the MII link monitoring frequency",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_0_2147483647",
                "description": "Milliseconds"
              },
              {
                "$ref": "#/components/schemas/null",
                "description": "Default value: 100 ms"
              }
            ]
          },
          "enslave": {
            "type": "array",
            "description": "list of connected ethernet and vlan interfaces",
            "items": {
              "oneOf": [
                {
                  "title": "ethernet",
                  "$ref": "#/components/schemas/interfaces_ethernet_ifname"
                },
                {
                  "title": "eth-vlan",
                  "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
                },
                {
                  "title": "vlan",
                  "$ref": "#/components/schemas/interfaces_vlan_ifname"
                }
              ]
            }
          }
        }
      },
      "in_interfaces_bond_add_write": {
        "description": "Add bonding interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bond_ifname"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name - omit to create in default VRF"
          }
        }
      },
      "in_interfaces_bond_delete_write": {
        "description": "Delete bonding interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bond_ifname"
          }
        }
      },
      "out_interfaces_bond_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read bonding capabilities",
            "required": [
              "ifname",
              "capability"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_bond_ifname"
              },
              "capability": {
                "$ref": "#/components/schemas/bond_settings_r"
              }
            }
          }
        }
      },
      "in_interfaces_bond_capability_write": {
        "description": "Write bonding capabilities, missing parameters are not touched, null parameters sets values to their default state",
        "type": "object",
        "required": [
          "ifname",
          "capability"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bond_ifname"
          },
          "capability": {
            "$ref": "#/components/schemas/bond_settings_w"
          }
        }
      },
      "in_interfaces_bond_mode_write": {
        "description": "Set bonding mode",
        "required": [
          "ifname",
          "mode"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bond_ifname"
          },
          "mode": {
            "description": "Bonding mode",
            "oneOf": [
              {
                "title": "balance-rr",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "balance-rr",
                    "description": "Round-robin policy"
                  }
                }
              },
              {
                "title": "balance-xor",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "balance-xor",
                    "description": "XOR policy"
                  }
                }
              },
              {
                "title": "broadcast",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "broadcast",
                    "description": "Broadcast policy"
                  }
                }
              },
              {
                "title": "802.3ad",
                "required": [
                  "mode_type",
                  "lacp_rate"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "802.3ad",
                    "description": "IEEE 802.3ad Dynamic link aggregation"
                  },
                  "lacp_rate": {
                    "description": "Set LACPDU transmission rate",
                    "oneOf": [
                      {
                        "type": "string",
                        "const": "slow",
                        "description": "Transmit LACPDUs every 30 seconds"
                      },
                      {
                        "type": "string",
                        "const": "fast",
                        "description": "Transmit LACPDUs every 1 second"
                      },
                      {
                        "$ref": "#/components/schemas/null",
                        "description": "Default rate: slow"
                      }
                    ]
                  }
                }
              },
              {
                "title": "active-backup",
                "required": [
                  "mode_type",
                  "primary_interface"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "active-backup",
                    "description": "Active-backup policy"
                  },
                  "primary_interface": {
                    "description": "Set primary interface",
                    "oneOf": [
                      {
                        "title": "ethernet",
                        "$ref": "#/components/schemas/interfaces_ethernet_ifname",
                        "description": "Ethernet interface"
                      },
                      {
                        "title": "vlan",
                        "$ref": "#/components/schemas/interfaces_vlan_ifname",
                        "description": "Vlan interface"
                      },
                      {
                        "title": "eth-vlan",
                        "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
                      },
                      {
                        "$ref": "#/components/schemas/null",
                        "description": "No primary interface"
                      }
                    ]
                  }
                }
              },
              {
                "title": "balance-tlb",
                "required": [
                  "mode_type",
                  "primary_interface"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "balance-tlb",
                    "description": "Adaptive transmit load balancing"
                  },
                  "primary_interface": {
                    "description": "Set primary interface",
                    "oneOf": [
                      {
                        "title": "ethernet",
                        "$ref": "#/components/schemas/interfaces_ethernet_ifname",
                        "description": "Ethernet interface"
                      },
                      {
                        "title": "vlan",
                        "$ref": "#/components/schemas/interfaces_vlan_ifname",
                        "description": "Vlan interface"
                      },
                      {
                        "title": "eth-vlan",
                        "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
                      },
                      {
                        "$ref": "#/components/schemas/null",
                        "description": "No primary interface"
                      }
                    ]
                  }
                }
              },
              {
                "title": "balance-alb",
                "required": [
                  "mode_type",
                  "primary_interface"
                ],
                "properties": {
                  "mode_type": {
                    "type": "string",
                    "const": "balance-alb",
                    "description": "Adaptive load balancing"
                  },
                  "primary_interface": {
                    "description": "Set primary interface",
                    "oneOf": [
                      {
                        "title": "ethernet",
                        "$ref": "#/components/schemas/interfaces_ethernet_ifname",
                        "description": "Ethernet interface"
                      },
                      {
                        "title": "vlan",
                        "$ref": "#/components/schemas/interfaces_vlan_ifname",
                        "description": "Vlan interface"
                      },
                      {
                        "title": "eth-vlan",
                        "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
                      },
                      {
                        "$ref": "#/components/schemas/null",
                        "description": "No primary interface"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "interfaces_eth_vlan_ifname": {
        "description": "Ethernet VLAN subinterface name",
        "type": "string",
        "pattern": "^eth(0|[1-9][0-9]{0,3})([\\.](0|[1-9][0-9]{0,3}))$"
      },
      "interfaces_eth_vlan_ethertype": {
        "description": "Ethernet frame type",
        "type": "string",
        "oneOf": [
          {
            "type": "string",
            "const": "0x8100",
            "title": "802.1q",
            "description": "802.1q"
          },
          {
            "type": "string",
            "const": "0x88a8",
            "title": "Q-in-Q",
            "description": "Q-in-Q"
          }
        ]
      },
      "interfaces_eth_vlan_inner_vid": {
        "description": "inner VID array",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "vid"
          ],
          "additionalProperties": false,
          "properties": {
            "vid": {
              "$ref": "#/components/schemas/VLAN_ID"
            },
            "ethertype": {
              "$ref": "#/components/schemas/interfaces_eth_vlan_ethertype"
            }
          }
        }
      },
      "in_interfaces_eth_vlan_add_write": {
        "description": "Add Ethernet VLAN subinterface",
        "required": [
          "ifname",
          "vid"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
          },
          "vid": {
            "$ref": "#/components/schemas/VLAN_ID"
          },
          "ethertype": {
            "$ref": "#/components/schemas/interfaces_eth_vlan_ethertype"
          },
          "inner_vid": {
            "$ref": "#/components/schemas/interfaces_eth_vlan_inner_vid"
          }
        }
      },
      "in_interfaces_eth_vlan_delete_write": {
        "description": "Delete Ethernet VLAN subinterface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
          }
        }
      },
      "interfaces_vlan_common_ifname": {
        "description": "interfaces name allowed for a Ethernet VLAN/switchport VLAN endpoints",
        "type": "string",
        "oneOf": [
          {
            "$ref": "#/components/schemas/interfaces_vlan_ifname"
          },
          {
            "$ref": "#/components/schemas/interfaces_eth_vlan_ifname"
          }
        ]
      },
      "interfaces_vlan_common_egress_map": {
        "description": "Egress QoS mapping - SKB value vs VLAN priority",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "0": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "1": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "2": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "3": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "4": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "5": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "6": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "7": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "8": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "9": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "10": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "11": {
            "$ref": "#/components/schemas/UINT_0_7"
          },
          "12": {
            "$ref": "#/components/schemas/UINT_0_7"
          }
        }
      },
      "interfaces_vlan_common_ingress_map": {
        "description": "Ingress QoS mapping - VLAN priority vs SKB value",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "0": {
            "$ref": "#/components/schemas/UINT_0_12"
          },
          "1": {
            "$ref": "#/components/schemas/UINT_0_12"
          },
          "2": {
            "$ref": "#/components/schemas/UINT_0_12"
          },
          "3": {
            "$ref": "#/components/schemas/UINT_0_12"
          },
          "4": {
            "$ref": "#/components/schemas/UINT_0_12"
          },
          "5": {
            "$ref": "#/components/schemas/UINT_0_12"
          },
          "6": {
            "$ref": "#/components/schemas/UINT_0_12"
          },
          "7": {
            "$ref": "#/components/schemas/UINT_0_12"
          }
        }
      },
      "in_interfaces_vlan_common_egress_map_write": {
        "description": "Set egress mapping",
        "required": [
          "ifname",
          "egress_map"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
          },
          "egress_map": {
            "$ref": "#/components/schemas/interfaces_vlan_common_egress_map"
          }
        }
      },
      "in_interfaces_vlan_common_ingress_map_write": {
        "description": "Set ingress mapping",
        "required": [
          "ifname",
          "ingress_map"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
          },
          "ingress_map": {
            "$ref": "#/components/schemas/interfaces_vlan_common_ingress_map"
          }
        }
      },
      "out_interfaces_vlan_common_egress_map_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "responce to reading egress mapping",
        "description": "Result of reading egress mapping",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ifname",
              "egress_map"
            ],
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
              },
              "egress_map": {
                "$ref": "#/components/schemas/interfaces_vlan_common_egress_map"
              }
            }
          }
        }
      },
      "out_interfaces_vlan_common_ingress_map_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "responce to reading ingress mapping",
        "description": "Result of reading ingress mapping",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ifname",
              "ingress_map"
            ],
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
              },
              "ingress_map": {
                "$ref": "#/components/schemas/interfaces_vlan_common_ingress_map"
              }
            }
          }
        }
      },
      "out_interfaces_vlan_common_vid_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "responce to reading VID parameters",
        "description": "Result of reading VID parameters",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ifname",
              "vid"
            ],
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
              },
              "vid": {
                "$ref": "#/components/schemas/VLAN_ID"
              },
              "ethertype": {
                "$ref": "#/components/schemas/interfaces_eth_vlan_ethertype"
              },
              "inner_vid": {
                "$ref": "#/components/schemas/interfaces_eth_vlan_inner_vid",
                "description": "inner vid is optional"
              }
            }
          }
        }
      },
      "interfaces_tunnel_ifname": {
        "description": "Tunnel interface name",
        "type": "string",
        "pattern": "^tunnel(0|[1-9][0-9]{0,3})$"
      },
      "_tunnel_iface_base": {
        "type": "object",
        "description": "Settings needed for tunnel creation",
        "properties": {
          "mode": {
            "description": "Tunnel mode. `gre` by default if omitted",
            "type": "string",
            "enum": [
              "gre",
              "ipip",
              "gretap",
              "vti"
            ]
          },
          "source": {
            "description": "Source for a tunnel. Either ip address or a local interface name.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_ADDR"
              },
              {
                "$ref": "#/components/schemas/IFNAME"
              }
            ]
          },
          "dst_address": {
            "description": "Destination ip address for a tunnel. Omit to create a multipoint tunnel",
            "$ref": "#/components/schemas/IP_ADDR"
          },
          "key": {
            "description": "Tunnel key. Not applicable for `ipip` tunnel, must be omitted for this case",
            "$ref": "#/components/schemas/UINT_1_4294967295"
          },
          "tos": {
            "oneOf": [
              {
                "type": "string",
                "const": "inherit"
              },
              {
                "$ref": "#/components/schemas/UINT8"
              }
            ]
          }
        }
      },
      "in_interfaces_tunnel_add_write": {
        "description": "Add tunnel interface",
        "additionalProperties": false,
        "required": [
          "ifname",
          "settings"
        ],
        "type": "object",
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_tunnel_ifname"
          },
          "vrf_name": {
            "description": "VRF instance name - omit to create in `default` VRF",
            "$ref": "#/components/schemas/VRF"
          },
          "settings": {
            "unevaluatedProperties": false,
            "required": [
              "source"
            ],
            "$ref": "#/components/schemas/_tunnel_iface_base"
          }
        }
      },
      "in_interfaces_tunnel_delete_write": {
        "description": "Delete tunnel interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_tunnel_ifname"
          }
        }
      },
      "in_tunnel_ip_address_write": {
        "required": [
          "ifname",
          "ip_addr"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_tunnel_ifname"
          },
          "ip_addr": {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
          },
          "peer_address": {
            "description": "Optional peer address for point-to-point tunnels",
            "$ref": "#/components/schemas/IP_ADDR"
          }
        }
      },
      "in_tunnel_ttl_write": {
        "required": [
          "ifname",
          "ttl"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_tunnel_ifname"
          },
          "ttl": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_1_255"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "in_tunnel_multicast_write": {
        "required": [
          "ifname",
          "action"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_tunnel_ifname"
          },
          "action": {
            "$ref": "#/components/schemas/ON_OFF"
          }
        }
      },
      "out_interfaces_tunnel_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "unevaluatedProperties": false,
            "required": [
              "ifname",
              "source",
              "mode",
              "multicast"
            ],
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "ifname": {
                    "$ref": "#/components/schemas/interfaces_tunnel_ifname"
                  },
                  "ttl": {
                    "$ref": "#/components/schemas/UINT_1_255"
                  },
                  "multicast": {
                    "$ref": "#/components/schemas/ON_OFF"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/_tunnel_iface_base"
              }
            ]
          }
        }
      },
      "switchport_stp_priority": {
        "type": "integer",
        "enum": [
          0,
          4096,
          8192,
          12288,
          16384,
          20480,
          24576,
          28672,
          32768,
          36864,
          40960,
          45056,
          49152,
          53248,
          57344,
          61440
        ],
        "description": "STP priority"
      },
      "switchport_msti": {
        "$ref": "#/components/schemas/UINT_1_4094",
        "title": "1-4094",
        "description": "MST instance number"
      },
      "switchport_mstiex": {
        "type": "integer",
        "oneOf": [
          {
            "type": "integer",
            "const": 0,
            "title": "IST (0)",
            "description": "IST - internal spanning tree"
          },
          {
            "$ref": "#/components/schemas/UINT_1_4094",
            "title": "1-4094",
            "description": "MST instance number"
          }
        ]
      },
      "switchport_mstp_root": {
        "type": "string",
        "oneOf": [
          {
            "const": "primary",
            "title": "primary",
            "description": "primary root priority"
          },
          {
            "const": "secondary",
            "title": "secondary",
            "description": "secondary root priority"
          }
        ]
      },
      "switchport_stp_mode": {
        "type": "string",
        "oneOf": [
          {
            "const": "stp",
            "title": "stp",
            "description": "STP algorithm"
          },
          {
            "const": "rstp",
            "title": "rstp",
            "description": "RSTP algorithm"
          },
          {
            "const": "mstp",
            "title": "mstp",
            "description": "MSTP algorithm"
          }
        ]
      },
      "switchport_stp_region": {
        "type": "object",
        "required": [
          "name",
          "revision"
        ],
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "region name"
          },
          "revision": {
            "$ref": "#/components/schemas/UINT_0_65535",
            "description": "revision number"
          }
        }
      },
      "switchport_mst_instance_opt_r": {
        "type": "object",
        "required": [
          "instance",
          "vlan"
        ],
        "additionalProperties": false,
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/switchport_msti",
            "description": "instance number"
          },
          "vlan": {
            "$ref": "#/components/schemas/VID_RANGE_LIST",
            "description": "VLAN list"
          },
          "priority": {
            "$ref": "#/components/schemas/switchport_stp_priority",
            "description": "STP priority"
          }
        }
      },
      "switchport_mst_instance_opt_w": {
        "type": "object",
        "required": [
          "instance",
          "vlan"
        ],
        "additionalProperties": false,
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/switchport_msti",
            "description": "instance number"
          },
          "vlan": {
            "$ref": "#/components/schemas/VID_RANGE_LIST",
            "description": "VLAN list"
          },
          "priority": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/switchport_stp_priority",
                "title": "set specific value",
                "description": "STP priority"
              },
              {
                "$ref": "#/components/schemas/switchport_mstp_root",
                "title": "set root",
                "description": "root device priority"
              }
            ]
          }
        }
      },
      "switchport_mst_instance_opt_d": {
        "type": "object",
        "required": [
          "instance"
        ],
        "additionalProperties": false,
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/switchport_msti",
            "description": "instance number"
          }
        }
      },
      "switchport_stp_cost_r": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "auto/manual settings"
          },
          "value": {
            "$ref": "#/components/schemas/UINT_1_4294967295",
            "description": "external port link cost"
          }
        }
      },
      "switchport_stp_cost_w": {
        "oneOf": [
          {
            "title": "auto",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "auto",
                "description": "auto settings (depending on the port bitrate"
              }
            }
          },
          {
            "title": "manual",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type",
              "value"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "manual",
                "description": "manual settings"
              },
              "value": {
                "$ref": "#/components/schemas/UINT_1_4294967295",
                "description": "external port link cost"
              }
            }
          }
        ]
      },
      "switchport_stp_link_type_manual_r": {
        "description": "auto spanning-tree link type",
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "const": "auto",
            "description": "auto settings"
          },
          "value": {
            "type": "string",
            "enum": [
              "point-to-point",
              "shared"
            ],
            "description": "real link type "
          }
        }
      },
      "switchport_stp_link_type_r": {
        "description": "spanning-tree link type for the switchport",
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "auto/manual settings"
          },
          "value": {
            "type": "string",
            "enum": [
              "point-to-point",
              "shared"
            ],
            "description": "real link type "
          }
        }
      },
      "switchport_stp_link_type_w": {
        "oneOf": [
          {
            "title": "auto",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "auto",
                "description": "auto settings (depending on the port duplex mode)"
              }
            }
          },
          {
            "type": "object",
            "title": "manual",
            "additionalProperties": false,
            "required": [
              "type",
              "value"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "manual",
                "description": "manual settings"
              },
              "value": {
                "type": "string",
                "enum": [
                  "point-to-point",
                  "shared"
                ],
                "description": "link type to set"
              }
            }
          }
        ]
      },
      "out_interfaces_switchport_stp_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read switchport STP capabilities",
            "required": [
              "port",
              "forward_delay",
              "hello_time",
              "transmit_hold_count",
              "priority",
              "max_age"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "port": {
                "type": "array",
                "minItems": 8,
                "maxItems": 8,
                "description": "port parameters",
                "items": {
                  "required": [
                    "ifname",
                    "link_type",
                    "cost",
                    "edge_port",
                    "bpdu_guard",
                    "bpdu_filter",
                    "restrict_root"
                  ],
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ifname": {
                      "$ref": "#/components/schemas/interfaces_switchport_ifname",
                      "description": "interface name"
                    },
                    "link_type": {
                      "$ref": "#/components/schemas/switchport_stp_link_type_r",
                      "description": "spanning-tree link type for the switchport"
                    },
                    "cost": {
                      "$ref": "#/components/schemas/switchport_stp_cost_r",
                      "description": "link cost"
                    },
                    "edge_port": {
                      "type": "boolean",
                      "description": "edge mode"
                    },
                    "bpdu_guard": {
                      "type": "boolean",
                      "description": "BPDU guard mode"
                    },
                    "bpdu_filter": {
                      "type": "boolean",
                      "description": "True to disable forwarding BPDU packets"
                    },
                    "restrict_root": {
                      "type": "boolean",
                      "description": "True to disable root mode"
                    }
                  }
                }
              },
              "forward_delay": {
                "$ref": "#/components/schemas/UINT_4_30",
                "description": "STP forward delay, seconds"
              },
              "hello_time": {
                "$ref": "#/components/schemas/UINT_1_10",
                "description": "STP HELLO interval, seconds"
              },
              "transmit_hold_count": {
                "$ref": "#/components/schemas/UINT_1_10",
                "description": "STP BPDU count before pause in the HELLO transmissions"
              },
              "priority": {
                "$ref": "#/components/schemas/switchport_stp_priority",
                "description": "STP priority"
              },
              "max_age": {
                "$ref": "#/components/schemas/UINT_6_40",
                "description": "STP max age of FDB records, seconds"
              }
            }
          }
        }
      },
      "in_interfaces_switchport_stp_capability_write": {
        "description": "Write switchport capabilities, missing parameters are not touched, null parameters sets values to their default state",
        "required": [],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "port": {
            "type": "array",
            "minItems": 0,
            "maxItems": 8,
            "description": "port parameters",
            "items": {
              "required": [
                "ifname"
              ],
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ifname": {
                  "$ref": "#/components/schemas/interfaces_switchport_ifname",
                  "description": "interface name"
                },
                "link_type": {
                  "$ref": "#/components/schemas/switchport_stp_link_type_w",
                  "description": "spanning-tree link type for the switchport"
                },
                "cost": {
                  "$ref": "#/components/schemas/switchport_stp_cost_w",
                  "description": "link cost"
                },
                "edge_port": {
                  "type": "boolean",
                  "description": "edge mode"
                },
                "bpdu_guard": {
                  "type": "boolean",
                  "description": "BPDU guard mode"
                },
                "bpdu_filter": {
                  "type": "boolean",
                  "description": "True to disable forwarding BPDU packets"
                },
                "restrict_root": {
                  "type": "boolean",
                  "description": "True to disable root mode"
                }
              }
            }
          },
          "forward_delay": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT_4_30",
                "title": "set value",
                "description": "STP forward delay, seconds"
              }
            ]
          },
          "hello_time": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT_1_10",
                "title": "set value",
                "description": "STP HELLO interval, seconds"
              }
            ]
          },
          "transmit_hold_count": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT_1_10",
                "description": "STP BPDU count before pause in the HELLO transmissions"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/switchport_stp_priority",
                "title": "set value",
                "description": "STP priority"
              }
            ]
          },
          "max_age": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/UINT_6_40",
                "title": "set value",
                "description": "STP max age of FDB records, seconds"
              }
            ]
          }
        }
      },
      "out_interfaces_switchport_stp_mode_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read switchport STP mode and running state",
            "required": [
              "on",
              "mode"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "on": {
                "type": "boolean",
                "description": "Running state"
              },
              "mode": {
                "$ref": "#/components/schemas/switchport_stp_mode",
                "description": "STP mode"
              }
            }
          }
        }
      },
      "in_interfaces_switchport_stp_mode_write": {
        "description": "Start/stop STP engine or change mode",
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean",
            "description": "true to run, false to stop"
          },
          "mode": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/switchport_stp_mode",
                "description": "STP mode"
              }
            ]
          }
        }
      },
      "out_interfaces_switchport_stp_msti_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read all switchport MSTI parameters",
            "required": [],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "settings": {
                "type": "object",
                "required": [
                  "region",
                  "max_hops"
                ],
                "additionalProperties": false,
                "properties": {
                  "region": {
                    "$ref": "#/components/schemas/switchport_stp_region",
                    "description": "MST region"
                  },
                  "max_hops": {
                    "$ref": "#/components/schemas/UINT_6_40",
                    "description": "maximum hops number for MST-enabled"
                  }
                }
              },
              "inst": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/switchport_mst_instance_opt_r",
                  "description": "MST region"
                }
              }
            }
          }
        }
      },
      "in_interfaces_switchport_stp_msti_write": {
        "description": "Update switchport MSTI parameters",
        "required": [],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "settings": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "default",
                    "description": "set to default"
                  },
                  {
                    "$ref": "#/components/schemas/switchport_stp_region",
                    "title": "set region",
                    "description": "MST region"
                  }
                ]
              },
              "max_hops": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "default",
                    "description": "set to default"
                  },
                  {
                    "$ref": "#/components/schemas/UINT_6_40",
                    "title": "set value",
                    "description": "maximum hops number for MST-enabled"
                  }
                ]
              }
            }
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/switchport_mst_instance_opt_w",
                    "description": "add MST instance"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/switchport_mst_instance_opt_d",
                    "description": "delete MST instance by its number"
                  }
                }
              },
              {
                "type": "object",
                "title": "modify",
                "required": [
                  "modify"
                ],
                "additionalProperties": false,
                "properties": {
                  "modify": {
                    "$ref": "#/components/schemas/switchport_mst_instance_opt_w",
                    "description": "modify MST instance"
                  }
                }
              }
            ]
          }
        }
      },
      "out_interfaces_switchport_stp_show_stp_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Display MST protocol configuration as log",
            "required": [
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "out_interfaces_switchport_stp_show_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Display MST instance configuration and state as log",
            "required": [
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_switchport_ifname"
              },
              "detail": {
                "type": "boolean"
              },
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "out_interfaces_switchport_stp_show_mstp_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Display MST protocol configuration as log",
            "required": [
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "out_interfaces_switchport_stp_show_msti_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Display MST instance configuration and state as log",
            "required": [
              "instance",
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "instance": {
                "$ref": "#/components/schemas/switchport_mstiex",
                "description": "MST instance number"
              },
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "out_interfaces_switchport_stp_show_mst_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Display MSTI state for given interface as log",
            "required": [
              "ifname",
              "instance",
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_switchport_ifname"
              },
              "instance": {
                "$ref": "#/components/schemas/switchport_msti",
                "description": "MST instance number"
              },
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "interfaces_vlan_ifname": {
        "description": "vlan interface name",
        "type": "string",
        "pattern": "^vlan([0-9]|[1-9][0-9]{1,2}|[1-3][0-9]{3}|40[0-8][0-9]|409[0-5])$"
      },
      "in_interfaces_vlan_add_write": {
        "description": "Add switchport VLAN interface",
        "required": [
          "ifname",
          "vid"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_vlan_ifname"
          },
          "vid": {
            "$ref": "#/components/schemas/VLAN_ID"
          }
        }
      },
      "in_interfaces_vlan_delete_write": {
        "description": "Delete switchport VLAN interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_vlan_ifname"
          }
        }
      },
      "interfaces_switchport_ifname": {
        "description": "switchport interface name",
        "type": "string",
        "pattern": "^switchport[1-8]$"
      },
      "switchport_cpu": {
        "type": "string",
        "oneOf": [
          {
            "$ref": "#/components/schemas/interfaces_switchport_ifname",
            "title": "switchport"
          },
          {
            "type": "string",
            "const": "cpu",
            "title": "common CPU port",
            "description": "common CPU port for all switchports"
          }
        ]
      },
      "switchport_learn_limit": {
        "oneOf": [
          {
            "type": "string",
            "const": "no limit",
            "title": "unlimited",
            "description": "unlimited number of learned MAC addresses"
          },
          {
            "$ref": "#/components/schemas/UINT_1_1023",
            "title": "value",
            "description": "Learn limit value"
          }
        ]
      },
      "switchport_aging_time": {
        "description": "aging time in seconds",
        "type": "number",
        "multipleOf": 3.75,
        "minValue": 0,
        "maxValue": 956.25
      },
      "switchport_vlan": {
        "description": "VLAN for switchport",
        "oneOf": [
          {
            "type": "string",
            "const": "untagged",
            "title": "untagged",
            "description": "untagged mode (VLAN ID==1)"
          },
          {
            "$ref": "#/components/schemas/UINT_2_4094",
            "title": "VLAN tag value",
            "description": "VLAN for this port"
          }
        ]
      },
      "switchport_mac_entry_in": {
        "type": "object",
        "description": "MAC table entry for input",
        "additionalProperties": false,
        "required": [
          "mac_addr",
          "vlan"
        ],
        "properties": {
          "mac_addr": {
            "$ref": "#/components/schemas/MAC_ADDR"
          },
          "vlan": {
            "$ref": "#/components/schemas/VLAN_ID"
          }
        }
      },
      "switchport_mac_entry_out": {
        "type": "object",
        "description": "MAC table entry for input",
        "additionalProperties": false,
        "required": [
          "ifnum",
          "mac_addr",
          "vlan"
        ],
        "properties": {
          "ifnum": {
            "type": "integer"
          },
          "mac_addr": {
            "$ref": "#/components/schemas/MAC_ADDR"
          },
          "vlan": {
            "$ref": "#/components/schemas/VLAN_ID"
          },
          "state": {
            "type": "string",
            "description": "state"
          },
          "age": {
            "type": "string",
            "description": "age"
          }
        }
      },
      "switchport_autonegotiation": {
        "oneOf": [
          {
            "type": "object",
            "title": "on",
            "description": "autonegotiation on",
            "required": [
              "on"
            ],
            "additionalProperties": false,
            "properties": {
              "on": {
                "type": "boolean",
                "const": true
              }
            }
          },
          {
            "type": "object",
            "title": "off",
            "description": "autonegotiation off",
            "required": [
              "on",
              "duplex",
              "speed"
            ],
            "additionalProperties": false,
            "properties": {
              "on": {
                "type": "boolean",
                "const": false
              },
              "duplex": {
                "$ref": "#/components/schemas/DUPLEX_MODE"
              },
              "speed": {
                "type": "integer",
                "enum": [
                  10,
                  100,
                  1000
                ],
                "description": "in Mbit/sec"
              }
            }
          }
        ]
      },
      "switchport_storm_control_rates": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "min_rate",
          "max_rate"
        ],
        "description": "information rates, in kBit/sec",
        "properties": {
          "min_rate": {
            "type": "integer",
            "description": "Committed information rate for this traffic type, Kbit/sec",
            "minimum": 306,
            "maximum": 1000000
          },
          "max_rate": {
            "oneOf": [
              {
                "type": "string",
                "const": "unlimited",
                "title": "unlimited",
                "description": "no upper limit"
              },
              {
                "type": "integer",
                "title": "value",
                "description": "Committed information rate for this traffic type, Kbit/sec",
                "minimum": 306,
                "maximum": 1000000
              }
            ]
          }
        }
      },
      "switchport_storm_control_action": {
        "description": "start/stop/clear storm control",
        "oneOf": [
          {
            "type": "object",
            "title": "start",
            "description": "start storm control limiting",
            "additionalProperties": false,
            "required": [
              "action",
              "rates"
            ],
            "properties": {
              "action": {
                "type": "string",
                "const": "start",
                "description": "start storm control limiting"
              },
              "rates": {
                "$ref": "#/components/schemas/switchport_storm_control_rates"
              }
            }
          },
          {
            "type": "object",
            "title": "stop",
            "description": "stop storm control limiting",
            "additionalProperties": false,
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "type": "string",
                "const": "stop",
                "description": "stop storm control limiting"
              }
            }
          },
          {
            "type": "object",
            "title": "clear",
            "description": "clear storm control conuters",
            "additionalProperties": false,
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "type": "string",
                "const": "clear",
                "description": "clear storm control counters"
              }
            }
          }
        ]
      },
      "switchport_storm_control_cntr": {
        "description": "Storm control cyclic counter and settings",
        "oneOf": [
          {
            "type": "object",
            "title": "on",
            "description": "counters when counting is on",
            "additionalProperties": false,
            "required": [
              "on",
              "rates",
              "received",
              "dropped"
            ],
            "properties": {
              "on": {
                "type": "boolean",
                "const": true,
                "description": "started"
              },
              "rates": {
                "$ref": "#/components/schemas/switchport_storm_control_rates"
              },
              "received": {
                "type": "integer",
                "description": "received bytes"
              },
              "dropped": {
                "type": "integer",
                "description": "dropped bytes"
              }
            }
          },
          {
            "type": "object",
            "title": "off",
            "description": "no counters when counting is off",
            "additionalProperties": false,
            "required": [
              "on"
            ],
            "properties": {
              "on": {
                "type": "boolean",
                "const": false,
                "description": "stopped"
              }
            }
          }
        ]
      },
      "switchport_mode_access_r": {
        "description": "Switchport mode and VLAN: access mode",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vlan",
          "mode"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "const": "access"
          },
          "vlan": {
            "$ref": "#/components/schemas/switchport_vlan",
            "description": "VLAN for this port"
          }
        }
      },
      "switchport_mode_access_w": {
        "description": "Switchport mode and VLAN: access mode",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "mode"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "const": "access"
          },
          "vlan": {
            "$ref": "#/components/schemas/switchport_vlan",
            "description": "VLAN for this port"
          }
        }
      },
      "switchport_allowed": {
        "oneOf": [
          {
            "type": "string",
            "const": "all",
            "title": "all",
            "description": "Allow all VLANs for switchport"
          },
          {
            "type": "string",
            "const": "none",
            "title": "none",
            "description": "Forbid all VLANs for switchport"
          },
          {
            "$ref": "#/components/schemas/VID_RANGE_LIST",
            "title": "VLAN list",
            "description": "VLAN id list (e.g. 2,45-68,4091)"
          }
        ]
      },
      "switchport_mode_trunk_r": {
        "description": "Switchport mode and VLAN: trunk mode",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "allowed",
          "mode",
          "native_vlan"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "const": "trunk"
          },
          "allowed": {
            "$ref": "#/components/schemas/switchport_allowed",
            "description": "allowed VLANs"
          },
          "native_vlan": {
            "$ref": "#/components/schemas/switchport_vlan",
            "description": "Native VLAN for this port (optional)"
          }
        }
      },
      "switchport_mode_trunk_w": {
        "description": "Switchport mode and VLAN: trunk mode",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "mode"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "const": "trunk"
          },
          "allowed": {
            "$ref": "#/components/schemas/switchport_allowed",
            "description": "allowed VLANs"
          },
          "native_vlan": {
            "$ref": "#/components/schemas/switchport_vlan",
            "description": "Native VLAN for this port (optional)"
          }
        }
      },
      "out_interfaces_switchport_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read switchport capabilities",
            "required": [
              "port",
              "cpu",
              "mac_address_table_aging_time"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "port": {
                "type": "array",
                "description": "port parameters",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "ifname",
                    "autonegotiation",
                    "mtu",
                    "igmp_snooping",
                    "port_security",
                    "mac_address_table_learn_limit"
                  ],
                  "properties": {
                    "ifname": {
                      "$ref": "#/components/schemas/interfaces_switchport_ifname"
                    },
                    "autonegotiation": {
                      "$ref": "#/components/schemas/switchport_autonegotiation"
                    },
                    "mtu": {
                      "$ref": "#/components/schemas/SW_PORT_MTU",
                      "description": "MTU size for this port"
                    },
                    "igmp_snooping": {
                      "type": "boolean",
                      "description": "igmp snooping state"
                    },
                    "port_security": {
                      "description": "port security",
                      "oneOf": [
                        {
                          "type": "object",
                          "title": "disabled",
                          "description": "port security disabled",
                          "additionalProperties": false,
                          "required": [
                            "on"
                          ],
                          "properties": {
                            "on": {
                              "type": "boolean",
                              "const": false,
                              "description": "disabled"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "title": "enabled",
                          "description": "port security enabled",
                          "required": [
                            "on",
                            "total",
                            "static"
                          ],
                          "properties": {
                            "on": {
                              "type": "boolean",
                              "const": true,
                              "description": "enabled"
                            },
                            "total": {
                              "type": "integer",
                              "description": "total MAC addresses"
                            },
                            "static": {
                              "type": "integer",
                              "description": "configured static MAC addresses"
                            }
                          }
                        }
                      ]
                    },
                    "mac_address_table_learn_limit": {
                      "$ref": "#/components/schemas/switchport_learn_limit",
                      "description": "Learn limit value"
                    }
                  }
                },
                "minItems": 8,
                "maxItems": 8
              },
              "cpu": {
                "type": "object",
                "required": [
                  "mac_address_table_learn_limit"
                ],
                "properties": {
                  "mac_address_table_learn_limit": {
                    "$ref": "#/components/schemas/switchport_learn_limit",
                    "description": "Learn limit value"
                  }
                }
              },
              "mac_address_table_aging_time": {
                "$ref": "#/components/schemas/switchport_aging_time",
                "description": "MAC-addresses aging time (Sec, mulitple of 3.75)"
              }
            }
          }
        }
      },
      "in_interfaces_switchport_capability_write": {
        "description": "Write switchport capabilities, missing parameters are not touched, null parameters sets values to their default state",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "port": {
            "type": "array",
            "description": "port parameters",
            "items": {
              "type": "object",
              "required": [
                "ifname"
              ],
              "additionalProperties": false,
              "properties": {
                "ifname": {
                  "$ref": "#/components/schemas/interfaces_switchport_ifname"
                },
                "autonegotiation": {
                  "$ref": "#/components/schemas/switchport_autonegotiation"
                },
                "mtu": {
                  "$ref": "#/components/schemas/SW_PORT_MTU",
                  "description": "MTU size for this port"
                },
                "igmp_snooping": {
                  "type": "boolean",
                  "description": "igmp snooping state"
                },
                "port_security": {
                  "type": "boolean",
                  "description": "port security"
                },
                "mac_address_table_learn_limit": {
                  "oneOf": [
                    {
                      "type": "null",
                      "title": "default",
                      "description": "set to default"
                    },
                    {
                      "$ref": "#/components/schemas/switchport_learn_limit",
                      "title": "set value",
                      "description": "Learn limit value"
                    }
                  ]
                }
              }
            },
            "minItems": 0,
            "maxItems": 8
          },
          "cpu": {
            "type": "object",
            "properties": {
              "mac_address_table_learn_limit": {
                "oneOf": [
                  {
                    "type": "null",
                    "title": "default",
                    "description": "set to default"
                  },
                  {
                    "$ref": "#/components/schemas/switchport_learn_limit",
                    "title": "set value",
                    "description": "Learn limit value"
                  }
                ]
              }
            }
          },
          "mac_address_table_aging_time": {
            "oneOf": [
              {
                "type": "null",
                "title": "default",
                "description": "set to default"
              },
              {
                "$ref": "#/components/schemas/switchport_aging_time",
                "title": "set value",
                "description": "MAC-addresses aging time (Sec, mulitple of 3.75)"
              }
            ]
          }
        }
      },
      "out_interfaces_switchport_mode_read": {
        "$ref": "#/components/schemas/out_generic",
        "description": "Read switchport mode and VLAN",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ifname",
              "settings"
            ],
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_switchport_ifname"
              },
              "settings": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/switchport_mode_access_r",
                    "title": "access"
                  },
                  {
                    "$ref": "#/components/schemas/switchport_mode_trunk_r",
                    "title": "trunk"
                  }
                ]
              }
            }
          }
        }
      },
      "in_interfaces_switchport_mode_write": {
        "description": "Write switchport mode and VLAN",
        "type": "object",
        "required": [
          "ifname",
          "settings"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_switchport_ifname"
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/switchport_mode_access_w",
                "title": "access"
              },
              {
                "$ref": "#/components/schemas/switchport_mode_trunk_w",
                "title": "trunk"
              }
            ]
          }
        }
      },
      "in_interfaces_switchport_vlandb_write": {
        "description": "Manage VLAN database",
        "type": "object",
        "required": [
          "action",
          "vlan"
        ],
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "add",
              "delete"
            ]
          },
          "vlan": {
            "$ref": "#/components/schemas/VID_RANGE_LIST",
            "description": "VLAN id list (e.g. 2,45-68,4091)"
          }
        }
      },
      "out_interfaces_switchport_vlandb_read": {
        "description": "Display VLAN database",
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "vlan": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VLAN_ID"
              }
            },
            "name": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "symbolic name"
            },
            "native": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "port numbers for which this vid is a native vlan"
            },
            "ports": {
              "type": "array",
              "items": {
                "type": "array",
                "prefixItems": [
                  {
                    "type": "integer",
                    "description": "port number"
                  },
                  {
                    "type": "boolean",
                    "description": "true for tagged mode, false for untagged"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            }
          }
        }
      },
      "out_interfaces_switchport_mac_address_table_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read static mac address table (with pagination)",
            "required": [
              "ifname",
              "vlan",
              "startidx",
              "page",
              "size"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "oneOf": [
                  {
                    "type": "string",
                    "const": "all",
                    "title": "all",
                    "description": "all ports, including CPU"
                  },
                  {
                    "$ref": "#/components/schemas/switchport_cpu"
                  }
                ]
              },
              "vlan": {
                "oneOf": [
                  {
                    "type": "string",
                    "const": "all",
                    "title": "all",
                    "description": "all VLANs"
                  },
                  {
                    "title": "vlan",
                    "$ref": "#/components/schemas/VLAN_ID"
                  }
                ]
              },
              "startidx": {
                "type": "integer",
                "minimum": 0,
                "description": "starting index (zero-based)"
              },
              "page": {
                "type": "object",
                "required": [
                  "mac_addr",
                  "vlan",
                  "port",
                  "type",
                  "age"
                ],
                "description": "part of table(page)",
                "properties": {
                  "mac_addr": {
                    "type": "array",
                    "description": "mac-address",
                    "items": {
                      "type": "string"
                    }
                  },
                  "vlan": {
                    "type": "array",
                    "description": "VLAN IDs",
                    "items": {
                      "type": "string"
                    }
                  },
                  "port": {
                    "type": "array",
                    "description": "port list",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "array",
                    "description": "type (S-static,D-dynamic,M-multicast)",
                    "items": {
                      "type": "string"
                    }
                  },
                  "age": {
                    "type": "array",
                    "description": "aging time, seconds",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "size": {
                "type": "integer",
                "description": "resulted size of mac-address table"
              }
            }
          }
        }
      },
      "in_interfaces_switchport_mac_address_table_static_write": {
        "description": "Update static mac address table",
        "required": [
          "ifnames",
          "action"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifnames": {
            "oneOf": [
              {
                "type": "string",
                "title": "all",
                "const": "all",
                "description": "all interfaces"
              },
              {
                "type": "array",
                "title": "switchports",
                "description": "interface names",
                "items": {
                  "$ref": "#/components/schemas/interfaces_switchport_ifname"
                }
              }
            ]
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "add",
                "required": [
                  "add"
                ],
                "additionalProperties": false,
                "description": "add this entry",
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/switchport_mac_entry_in"
                  }
                }
              },
              {
                "type": "object",
                "title": "delete",
                "required": [
                  "delete"
                ],
                "additionalProperties": false,
                "description": "delete this entry",
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/switchport_mac_entry_in"
                  }
                }
              }
            ]
          }
        }
      },
      "in_interfaces_switchport_mac_address_table_acq_write": {
        "description": "Update acquired mac address table",
        "required": [
          "ifnames",
          "action"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifnames": {
            "oneOf": [
              {
                "type": "string",
                "title": "all",
                "const": "all",
                "description": "all interfaces, including CPU"
              },
              {
                "type": "array",
                "title": "switchports",
                "description": "interface names",
                "items": {
                  "$ref": "#/components/schemas/switchport_cpu"
                }
              }
            ]
          },
          "action": {
            "oneOf": [
              {
                "type": "object",
                "title": "clear",
                "required": [
                  "clear"
                ],
                "additionalProperties": false,
                "description": "remove all entries",
                "properties": {
                  "clear": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vlan"
                    ],
                    "properties": {
                      "vlan": {
                        "$ref": "#/components/schemas/VLAN_ID"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "out_interfaces_switchport_storm_control_counters_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Result of reading storm control cyclic counters for specific kind of frames",
            "required": [
              "ifname"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_switchport_ifname"
              },
              "unknown_multicast": {
                "$ref": "#/components/schemas/switchport_storm_control_cntr",
                "description": "Multicast frames with unknown destination address"
              },
              "unknown_broadcast": {
                "$ref": "#/components/schemas/switchport_storm_control_cntr",
                "description": "Broadcast frames with unknown destination address"
              },
              "known_broadcast_multicast": {
                "$ref": "#/components/schemas/switchport_storm_control_cntr",
                "description": "Broadcast frames with unknown destination address"
              },
              "arp": {
                "$ref": "#/components/schemas/switchport_storm_control_cntr",
                "description": "ARP frames"
              }
            }
          }
        }
      },
      "in_interfaces_switchport_storm_control_counters_write": {
        "description": "Command to start/stop/clear storm control cyclic counters, add entry with specific name with true to clear",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_switchport_ifname"
          },
          "unknown_multicast": {
            "$ref": "#/components/schemas/switchport_storm_control_action",
            "description": "Multicast frames with unknown destination address"
          },
          "unknown_broadcast": {
            "$ref": "#/components/schemas/switchport_storm_control_action",
            "description": "Broadcast frames with unknown destination address"
          },
          "known_broadcast_multicast": {
            "$ref": "#/components/schemas/switchport_storm_control_action",
            "description": "Broadcast frames with unknown destination address"
          },
          "arp": {
            "$ref": "#/components/schemas/switchport_storm_control_action",
            "description": "ARP frames"
          }
        }
      },
      "out_interfaces_switchport_igmp_multicast_groups_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Result of reading IGMP multicast groups",
            "required": [
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/switchport_cpu"
              },
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "out_interfaces_switchport_igmp_snooping_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Result of reading IGMP/MLD snooping control records",
            "required": [
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "interfaces_loopback_ifname": {
        "description": "loopback interface name",
        "type": "string",
        "pattern": "^lo(0|[1-9][0-9]{0,3})$"
      },
      "in_interfaces_loopback_add_write": {
        "description": "Add loopback interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_loopback_ifname"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name - omit to create in default VRF"
          }
        }
      },
      "in_interfaces_loopback_delete_write": {
        "description": "Delete loopback interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_loopback_ifname"
          }
        }
      },
      "interfaces_ethernet_ifname": {
        "description": "ethernet interface name",
        "type": "string",
        "pattern": "^eth(0|[1-9][0-9]{0,3})$"
      },
      "ethernet_autonegotiation": {
        "oneOf": [
          {
            "type": "object",
            "title": "on",
            "description": "autonegotiation on",
            "required": [
              "on"
            ],
            "additionalProperties": false,
            "properties": {
              "on": {
                "type": "boolean",
                "const": true
              }
            }
          },
          {
            "type": "object",
            "title": "off",
            "description": "autonegotiation off",
            "required": [
              "on",
              "duplex",
              "speed"
            ],
            "additionalProperties": false,
            "properties": {
              "on": {
                "type": "boolean",
                "const": false
              },
              "duplex": {
                "$ref": "#/components/schemas/DUPLEX_MODE"
              },
              "speed": {
                "type": "integer",
                "enum": [
                  10,
                  100,
                  1000
                ],
                "description": "in Mbit/sec"
              }
            }
          }
        ]
      },
      "ethernet_settings_r": {
        "required": [
          "allmulti",
          "promiscuous",
          "autonegotiation",
          "mac_address"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "allmulti": {
            "type": "boolean",
            "description": "ALLMULTI mode for interface. In this mode, driver forwards all multicast packets to the kernel for handling"
          },
          "promiscuous": {
            "type": "boolean",
            "description": "promiscuous mode on interface"
          },
          "autonegotiation": {
            "$ref": "#/components/schemas/ethernet_autonegotiation"
          },
          "mac_address": {
            "$ref": "#/components/schemas/MAC_ADDR"
          }
        }
      },
      "ethernet_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "allmulti": {
            "type": "boolean",
            "description": "ALLMULTI mode for interface. In this mode, driver forwards all multicast packets to the kernel for handling"
          },
          "promiscuous": {
            "type": "boolean",
            "description": "promiscuous mode on interface"
          },
          "autonegotiation": {
            "$ref": "#/components/schemas/ethernet_autonegotiation"
          },
          "mac_address": {
            "$ref": "#/components/schemas/MAC_ADDR"
          }
        }
      },
      "out_interfaces_ethernet_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read ethernet capabilities",
            "required": [
              "ifname",
              "capability"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_ethernet_ifname"
              },
              "capability": {
                "$ref": "#/components/schemas/ethernet_settings_r"
              }
            }
          }
        }
      },
      "in_interfaces_ethernet_capability_write": {
        "description": "Write ethernet capabilities, missing parameters are not touched, null parameters sets values to their default state",
        "type": "object",
        "required": [
          "ifname"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_ethernet_ifname"
          },
          "capability": {
            "$ref": "#/components/schemas/ethernet_settings_w"
          }
        }
      },
      "in_interfaces_ethernet_blink": {
        "description": "Blink by led",
        "type": "object",
        "required": [
          "ifname"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_ethernet_ifname"
          }
        }
      },
      "interfaces_common_hold": {
        "description": "Hold client on shutdown (optional)",
        "oneOf": [
          {
            "$ref": "#/components/schemas/UINT_5_60",
            "title": "hold time",
            "description": "Hold time in seconds"
          },
          {
            "const": "forever",
            "title": "forever"
          }
        ]
      },
      "interfaces_common_ifname": {
        "description": "interfaces name allowed for a list of categories from interfaces/common endpoints",
        "type": "string",
        "oneOf": [
          {
            "$ref": "#/components/schemas/IFNAME"
          }
        ]
      },
      "interfaces_common_client_id": {
        "description": "client-id for IPv4",
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "title": "Client ID in ASCII",
            "description": "Client ID in ASCII string form",
            "properties": {
              "ascii": {
                "$ref": "#/components/schemas/SIMPLE_ASCII"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "title": "Client ID in hex",
            "description": "Client ID in hex string form",
            "properties": {
              "hex": {
                "$ref": "#/components/schemas/HEX_STRING"
              }
            }
          }
        ]
      },
      "interfaces_common_arp_announce": {
        "description": "different restriction levels for announcing the local source IP address from IP packets in ARP requests sent on interface",
        "oneOf": [
          {
            "type": "string",
            "const": "any",
            "title": "any",
            "description": "Use any local address, configured on any interface"
          },
          {
            "type": "string",
            "const": "best",
            "title": "best",
            "description": "Always use the best local address for this target"
          },
          {
            "type": "string",
            "const": "subnet",
            "title": "subnet",
            "description": "Try to avoid local addresses that are not in the target's subnet for this interface"
          }
        ]
      },
      "interfaces_common_arp_reply": {
        "description": "different modes for sending replies in response to received ARP requests that resolve local target IP addresses",
        "oneOf": [
          {
            "type": "string",
            "const": "any",
            "title": "any",
            "description": "Reply for any local target IP address, configured on any interface"
          },
          {
            "type": "string",
            "const": "global",
            "title": "global",
            "description": "Do not reply for local addresses configured with scope host, only resolutions for global and link addresses are replied"
          },
          {
            "type": "string",
            "const": "interface",
            "title": "interface",
            "description": "Reply only if the target IP address is local address configured on the incoming interface and both with the sender's IP address are part from same subnet on this interface"
          },
          {
            "type": "string",
            "const": "local",
            "title": "local",
            "description": "Reply only if the target IP address is local address configured on the incoming interface"
          },
          {
            "type": "string",
            "const": "no",
            "title": "no",
            "description": "Do not reply for all local addresses"
          }
        ]
      },
      "in_interfaces_common_ip_address_write": {
        "description": "set static ipv4 address",
        "required": [
          "ifname",
          "ip_addr"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "ip_addr": {
            "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
          }
        }
      },
      "in_interfaces_common_ip_address_dhcp_write": {
        "description": "run dhcp client",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "client_id": {
            "$ref": "#/components/schemas/interfaces_common_client_id",
            "description": "Specify client-id (optional)"
          },
          "config": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCP config to use (optional)"
          },
          "hold": {
            "description": "Hold client on shutdown (optional)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UINT_5_60",
                "title": "hold time",
                "description": "Hold time in seconds"
              },
              {
                "type": "string",
                "const": "forever",
                "title": "forever"
              }
            ]
          }
        }
      },
      "in_interfaces_common_ipv6_address_write": {
        "description": "set static ipv6 address",
        "required": [
          "ifname",
          "ipv6_addr"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "ipv6_addr": {
            "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
          }
        }
      },
      "in_interfaces_common_ipv6_address_dhcp_write": {
        "description": "run dhcpv6 client",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "duid": {
            "$ref": "#/components/schemas/DUID",
            "description": "Specify DUID for this interface (optional)"
          },
          "config": {
            "$ref": "#/components/schemas/STRING",
            "description": "DHCP config to use (optional)"
          },
          "hold": {
            "$ref": "#/components/schemas/interfaces_common_hold",
            "description": "Hold client on shutdown (optional)"
          }
        }
      },
      "in_interfaces_common_noip_address_write": {
        "description": "remove ipv4 address",
        "required": [
          "ifname",
          "ip_addr"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "ip_addr": {
            "description": "remove specific ip address, all static or dhcp addresses",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "all",
                  "dhcp"
                ],
                "title": "remove all/dhcp only"
              },
              {
                "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK",
                "title": "remove specific address"
              }
            ]
          }
        }
      },
      "in_interfaces_common_noipv6_address_write": {
        "description": "remove ipv6 address",
        "required": [
          "ifname",
          "ipv6_addr"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "ipv6_addr": {
            "description": "remove specific IPv6 address, all static or dhcp addresses",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "all",
                  "dhcp"
                ],
                "title": "remove all/dhcp only"
              },
              {
                "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
                "title": "remove specific address"
              }
            ]
          }
        }
      },
      "in_interfaces_common_ip_mtu_write": {
        "description": "Set the MTU size for interface",
        "required": [
          "ifname",
          "mtu"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "mtu": {
            "$ref": "#/components/schemas/UINT_68_65535",
            "description": "MTU size"
          }
        }
      },
      "in_interfaces_common_queue_tx_write": {
        "description": "Set transmit queue size",
        "required": [
          "ifname",
          "tx_queue_len"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "tx_queue_len": {
            "$ref": "#/components/schemas/UINT",
            "description": "Transmit queue length in packets"
          }
        }
      },
      "in_interfaces_common_reset_interface_write": {
        "description": "Reset interface configuration",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          }
        }
      },
      "in_interfaces_common_reset_stats_write": {
        "description": "Reset interface statistics",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          }
        }
      },
      "in_interfaces_common_ip_forwarding_write": {
        "description": "Associate interface with specific VRF, use null value to move to default vrf",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "vrf_name": {
            "description": "move interface to specific VRF or get it back (if vrf_name is null)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/VRF",
                "title": "to VRF",
                "description": "VRF instance name"
              },
              {
                "type": "null",
                "title": "to default VRF"
              }
            ]
          }
        }
      },
      "out_interfaces_common_dhcp_client_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response reading status of running DHCP clients",
        "description": "Result of reading status of running DHCP clients",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "ifname",
                "vrf_name",
                "proto",
                "hold",
                "status"
              ],
              "additionalProperties": false,
              "properties": {
                "ifname": {
                  "$ref": "#/components/schemas/interfaces_common_ifname"
                },
                "vrf_name": {
                  "$ref": "#/components/schemas/VRF"
                },
                "proto": {
                  "type": "string",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "description": "IP protocol"
                },
                "hold": {
                  "$ref": "#/components/schemas/interfaces_common_hold",
                  "description": "Hold client on shutdown"
                },
                "status": {
                  "type": "string",
                  "description": "running status"
                },
                "client_id": {
                  "$ref": "#/components/schemas/interfaces_common_client_id",
                  "description": "IPv4 client-id (optional)"
                },
                "duid": {
                  "$ref": "#/components/schemas/DUID",
                  "description": "IPv6 DUID for this interface (optional)"
                },
                "leases": {
                  "type": "string",
                  "description": "leases file - optional"
                },
                "config": {
                  "type": "string",
                  "description": "config file - optional"
                }
              }
            }
          }
        }
      },
      "in_interfaces_common_arp_write": {
        "description": "Update ARP parameters",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_common_ifname"
          },
          "announce": {
            "description": "update announce parameters (null to set default)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/interfaces_common_arp_announce"
              },
              {
                "type": "null",
                "title": "set default",
                "description": "set default"
              }
            ]
          },
          "reply": {
            "description": "update reply parameters (null to set default)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/interfaces_common_arp_reply"
              },
              {
                "type": "null",
                "title": "set default",
                "description": "set default"
              }
            ]
          },
          "pvlan": {
            "description": "update pvlan parameter (null to set default)",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null",
                "title": "set default",
                "description": "set default"
              }
            ]
          }
        }
      },
      "out_interfaces_common_arp_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "responce to reading ARP parameters",
        "description": "Result of reading ARP parameters",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ifname",
              "announce",
              "reply",
              "pvlan"
            ],
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_common_ifname"
              },
              "announce": {
                "$ref": "#/components/schemas/interfaces_common_arp_announce"
              },
              "reply": {
                "$ref": "#/components/schemas/interfaces_common_arp_reply"
              },
              "pvlan": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "iface_category": {
        "description": "interface category",
        "type": "string",
        "enum": [
          "bonding",
          "bridge",
          "ethernet",
          "eth-vlan",
          "loopback",
          "switchport",
          "tunnel",
          "vlan",
          "wlan"
        ]
      },
      "boolean": {
        "description": "boolean flag",
        "type": "boolean"
      },
      "iface_description": {
        "description": "interface description string (up to 50 characters)",
        "oneOf": [
          {
            "$ref": "#/components/schemas/LINE_UP_TO_50",
            "title": "description line"
          },
          {
            "type": "string",
            "title": "empty line",
            "const": ""
          }
        ]
      },
      "in_interfaces_shutdown_write": {
        "title": "request to shutdown",
        "description": "Shutdown network interface",
        "required": [
          "adm_state",
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/IFNAME"
          },
          "adm_state": {
            "type": "boolean",
            "description": "administrative state"
          }
        }
      },
      "in_interfaces_description_write": {
        "title": "request to set description",
        "description": "Set description of network interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/IFNAME"
          },
          "description": {
            "$ref": "#/components/schemas/iface_description"
          }
        }
      },
      "out_interfaces_state_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read interface state",
        "description": "Result of reading network interface state",
        "properties": {
          "result": {
            "required": [
              "ifname",
              "adm_state",
              "state",
              "vrf"
            ],
            "type": "object",
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/IFNAME"
              },
              "adm_state": {
                "type": "boolean",
                "description": "administrative state"
              },
              "state": {
                "type": "boolean",
                "description": "state"
              },
              "vrf": {
                "$ref": "#/components/schemas/WORD",
                "description": "VRF name"
              },
              "ip_addr": {
                "type": "array",
                "description": "IPv4 addresses - might not be present",
                "items": {
                  "$ref": "#/components/schemas/IP_ADDR_WITH_BIT_MASK"
                }
              },
              "ipv6_addr": {
                "type": "array",
                "description": "IPv6 addresses - might not be present",
                "items": {
                  "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK"
                }
              },
              "link_local": {
                "$ref": "#/components/schemas/IPV6_ADDR_WITH_BIT_MASK",
                "description": "link local IPv6 address - might not be present"
              },
              "mtu": {
                "type": "integer",
                "description": "MTU size - might not be present"
              },
              "address": {
                "type": "string",
                "description": "HW address - might not be present"
              },
              "duplex": {
                "type": "string",
                "description": "duplex mode - might not be present"
              },
              "speed": {
                "type": "number",
                "description": "speed in Mbytes/sec - might not be present"
              },
              "autonegotiation": {
                "type": "string",
                "description": "Autonegotiation mode - might not be present"
              },
              "tx_queue_len": {
                "type": "integer",
                "description": "TX queue size - might not be present"
              },
              "rx_bytes": {
                "type": "integer",
                "description": "number of received bytes (for detail=true)"
              },
              "rx_packets": {
                "type": "integer",
                "description": "number of received packets (for detail=true)"
              },
              "rx_dropped": {
                "type": "integer",
                "description": "number of rx dropped packets (for detail=true)"
              },
              "rx_errors": {
                "type": "integer",
                "description": "number of rx errors (for detail=true)"
              },
              "tx_bytes": {
                "type": "integer",
                "description": "number of transmitted bytes (for detail=true)"
              },
              "tx_packets": {
                "type": "integer",
                "description": "number of transmitted packets (for detail=true)"
              },
              "tx_dropped": {
                "type": "integer",
                "description": "number of tx dropped packets (for detail=true)"
              },
              "tx_errors": {
                "type": "integer",
                "description": "number of tx errors (for detail=true)"
              }
            }
          }
        }
      },
      "out_interfaces_description_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read interface description",
        "description": "Result of reading network interface description",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ifname",
              "description"
            ],
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/IFNAME"
              },
              "description": {
                "$ref": "#/components/schemas/iface_description"
              }
            }
          }
        }
      },
      "out_interfaces_list_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "response read interfaces list",
        "description": "Result of reading network interface list",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "interfaces"
            ],
            "properties": {
              "interfaces": {
                "type": "array",
                "description": "Array of interface categories",
                "items": {
                  "required": [
                    "category",
                    "ifname"
                  ],
                  "additionalProperties": false,
                  "description": "category and interface name for it",
                  "type": "object",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/iface_category"
                    },
                    "ifname": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IFNAME"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "interfaces_bridge_ifname": {
        "description": "bridge interface name",
        "type": "string",
        "pattern": "^br(0|[1-9][0-9]{0,3})$"
      },
      "br_settings_r": {
        "required": [
          "mode",
          "stp",
          "ageing_time",
          "max_mac_addresses",
          "included_interfaces"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bridge_type": {
            "oneOf": [
              {
                "type": "string",
                "const": "brctl",
                "description": "Bridge Control"
              },
              {
                "type": "string",
                "const": "ovs",
                "description": "Open vSwitch"
              }
            ]
          },
          "mode": {
            "description": "Mac address FDB mode",
            "oneOf": [
              {
                "title": "0",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "type": "integer",
                    "const": 0,
                    "description": "Mode 0"
                  }
                }
              },
              {
                "title": "1",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "type": "integer",
                    "const": 1,
                    "description": "Mode 1"
                  }
                }
              },
              {
                "title": "2",
                "required": [
                  "mode_type",
                  "down_time"
                ],
                "additionalProperties": false,
                "properties": {
                  "mode_type": {
                    "type": "integer",
                    "const": 2,
                    "description": "Mode 2"
                  },
                  "down_time": {
                    "description": "Down time for interface when maximum MAC number acceded",
                    "oneOf": [
                      {
                        "title": "set",
                        "$ref": "#/components/schemas/UINT",
                        "description": "Down time for interface when maximum MAC number acceded"
                      },
                      {
                        "title": "not set",
                        "$ref": "#/components/schemas/null",
                        "description": "Down time not set"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "ageing_time": {
            "$ref": "#/components/schemas/UINT",
            "description": "MAC address ageing time, in seconds"
          },
          "max_mac_addresses": {
            "oneOf": [
              {
                "title": "number",
                "$ref": "#/components/schemas/MAC_TABLE_SIZE",
                "description": "Maximum number of MAC addresses on this interface"
              },
              {
                "title": "no limit",
                "type": "integer",
                "const": 0
              }
            ]
          },
          "stp": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "status",
              "priority",
              "forward_delay",
              "hello_time",
              "max_age"
            ],
            "properties": {
              "status": {
                "$ref": "#/components/schemas/ON_OFF",
                "description": "`on` to enable, `off` to disable"
              },
              "priority": {
                "oneOf": [
                  {
                    "title": "set",
                    "$ref": "#/components/schemas/UINT16",
                    "description": "STP priority for the bridge"
                  },
                  {
                    "title": "not set",
                    "$ref": "#/components/schemas/null",
                    "description": "STP priority for the bridge not set"
                  }
                ]
              },
              "forward_delay": {
                "$ref": "#/components/schemas/UINT_4_30",
                "description": "STP forward delay for the bridge"
              },
              "hello_time": {
                "$ref": "#/components/schemas/UINT_1_10",
                "description": "STP `hello` time interval for the bridge"
              },
              "max_age": {
                "$ref": "#/components/schemas/UINT_6_40",
                "description": "STP BPDU ageing time for the bridge"
              }
            }
          },
          "included_interfaces": {
            "type": "array",
            "description": "List of connected interfaces. Allowed interfaces: ethernet, vlan, bond, vxlan, l2tp, tunnel",
            "items": {
              "required": [
                "ifname",
                "stp_priority",
                "stp_path_cost"
              ],
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ifname": {
                  "$ref": "#/components/schemas/IFNAME"
                },
                "stp_priority": {
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/UINT6",
                      "description": "STP port priority"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null",
                      "description": "STP port priority not set"
                    }
                  ]
                },
                "stp_path_cost": {
                  "oneOf": [
                    {
                      "title": "set",
                      "$ref": "#/components/schemas/UINT_1_65535",
                      "description": "STP port path-cost"
                    },
                    {
                      "title": "not set",
                      "$ref": "#/components/schemas/null",
                      "description": "STP port path-cost not set"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "br_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "description": "Mac address FDB mode",
            "oneOf": [
              {
                "title": "0",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "type": "integer",
                    "const": 0,
                    "description": "Mode 0"
                  }
                }
              },
              {
                "title": "1",
                "required": [
                  "mode_type"
                ],
                "properties": {
                  "mode_type": {
                    "type": "integer",
                    "const": 1,
                    "description": "Mode 1"
                  }
                }
              },
              {
                "title": "2",
                "required": [
                  "mode_type",
                  "down_time"
                ],
                "properties": {
                  "mode_type": {
                    "type": "integer",
                    "const": 2,
                    "description": "Mode 2"
                  },
                  "down_time": {
                    "description": "Down time for interface when maximum MAC number acceded",
                    "oneOf": [
                      {
                        "title": "set",
                        "$ref": "#/components/schemas/UINT",
                        "description": "Down time for interface when maximum MAC number acceded"
                      },
                      {
                        "title": "not set",
                        "$ref": "#/components/schemas/null",
                        "description": "Down time not set"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "ageing_time": {
            "$ref": "#/components/schemas/UINT",
            "description": "MAC address ageing time, in seconds"
          },
          "max_mac_addresses": {
            "oneOf": [
              {
                "title": "number",
                "$ref": "#/components/schemas/MAC_TABLE_SIZE",
                "description": "Maximum number of MAC addresses on this interface"
              },
              {
                "title": "no limit",
                "type": "integer",
                "const": 0
              }
            ]
          },
          "included_interfaces": {
            "type": "array",
            "description": "List of connected interfaces. Allowed interfaces: ethernet, vlan, bond, vxlan, l2tp, tunnel",
            "items": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        }
      },
      "br_stp_settings_w": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priority": {
            "oneOf": [
              {
                "title": "set",
                "$ref": "#/components/schemas/UINT16",
                "description": "STP priority for the bridge"
              },
              {
                "title": "reset",
                "$ref": "#/components/schemas/null",
                "description": "Reset STP priority for the bridge"
              }
            ]
          },
          "hello_time": {
            "oneOf": [
              {
                "title": "set",
                "$ref": "#/components/schemas/UINT_1_10",
                "description": "STP `hello` time interval for the bridge"
              },
              {
                "title": "default",
                "$ref": "#/components/schemas/null",
                "description": "Default `hello` time interval (2 seconds)"
              }
            ]
          },
          "max_age": {
            "oneOf": [
              {
                "title": "set",
                "$ref": "#/components/schemas/UINT_6_40",
                "description": "STP BPDU ageing time for the bridge"
              },
              {
                "title": "default",
                "$ref": "#/components/schemas/null",
                "description": "Default STP BPDU ageing time (20 seconds)"
              }
            ]
          },
          "forward_delay": {
            "oneOf": [
              {
                "title": "set",
                "$ref": "#/components/schemas/UINT_4_30",
                "description": "STP forward delay for the bridge"
              },
              {
                "title": "default",
                "$ref": "#/components/schemas/null",
                "description": "Default STP forward delay (15 seconds)"
              }
            ]
          },
          "port": {
            "description": "STP port parameters for the port of bridge",
            "type": "object",
            "required": [
              "port_name"
            ],
            "oneOf": [
              {
                "title": "priority",
                "required": [
                  "priority"
                ],
                "properties": {
                  "port_name": {
                    "$ref": "#/components/schemas/IFNAME",
                    "description": "name of the included interface"
                  },
                  "priority": {
                    "oneOf": [
                      {
                        "title": "set",
                        "$ref": "#/components/schemas/UINT6",
                        "description": "STP port priority"
                      },
                      {
                        "title": "reset",
                        "$ref": "#/components/schemas/null",
                        "description": "Reset STP port priority"
                      }
                    ]
                  }
                }
              },
              {
                "title": "path-cost",
                "required": [
                  "path_cost"
                ],
                "properties": {
                  "port_name": {
                    "$ref": "#/components/schemas/IFNAME",
                    "description": "name of the included interface"
                  },
                  "path_cost": {
                    "oneOf": [
                      {
                        "title": "set",
                        "$ref": "#/components/schemas/UINT_1_65535",
                        "description": "STP port path-cost"
                      },
                      {
                        "title": "reset",
                        "$ref": "#/components/schemas/null",
                        "description": "Reset STP port path-cost"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "in_interfaces_bridge_add_write": {
        "description": "Add bridge interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bridge_ifname"
          },
          "vrf_name": {
            "$ref": "#/components/schemas/VRF",
            "description": "VRF instance name - omit to create in default VRF"
          }
        }
      },
      "in_interfaces_bridge_delete_write": {
        "description": "Delete bridge interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bridge_ifname"
          }
        }
      },
      "in_interfaces_bridge_flush_write": {
        "description": "Flush forwarding database for this interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bridge_ifname"
          }
        }
      },
      "out_interfaces_bridge_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read bridge capabilities",
            "required": [
              "ifname",
              "capability"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_bridge_ifname"
              },
              "capability": {
                "$ref": "#/components/schemas/br_settings_r"
              }
            }
          }
        }
      },
      "in_interfaces_bridge_capability_write": {
        "description": "Write bridge capabilities, missing parameters are not touched, null parameters sets values to their default state",
        "type": "object",
        "required": [
          "ifname",
          "capability"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bridge_ifname"
          },
          "capability": {
            "$ref": "#/components/schemas/br_settings_w"
          }
        }
      },
      "in_interfaces_bridge_stp_write": {
        "description": "Enable/disable STP for the bridge",
        "required": [
          "ifname"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bridge_ifname"
          },
          "action": {
            "$ref": "#/components/schemas/ON_OFF",
            "description": "`on` to enable, `off` to disable"
          }
        }
      },
      "in_interfaces_bridge_stp_capability_write": {
        "description": "Write bridge STP capabilities, missing parameters are not touched, null parameters sets values to their default state",
        "type": "object",
        "required": [
          "ifname",
          "capability"
        ],
        "additionalProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_bridge_ifname"
          },
          "capability": {
            "$ref": "#/components/schemas/br_stp_settings_w"
          }
        }
      },
      "out_interfaces_bridge_stp_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Read bridge capabilities",
            "required": [
              "ifname",
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_bridge_ifname"
              },
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "out_interfaces_bridge_stp_mac_read": {
        "$ref": "#/components/schemas/out_generic",
        "properties": {
          "result": {
            "description": "Get list of learned MAC addresses",
            "required": [
              "ifname",
              "count",
              "log"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ifname": {
                "$ref": "#/components/schemas/interfaces_bridge_ifname"
              },
              "count": {
                "$ref": "#/components/schemas/UINT",
                "description": "Number of learned MAC addresses for this bridge"
              },
              "log": {
                "type": "string",
                "description": "multiline log"
              }
            }
          }
        }
      },
      "interfaces_wifi_ifname": {
        "description": "wifi interface name",
        "type": "string",
        "pattern": "^wlan(0|[1-9][0-9]{0,3})$"
      },
      "in_interfaces_wifi_add_write": {
        "description": "Add wifi interface",
        "required": [
          "ifname",
          "mode"
        ],
        "type": "object",
        "unevaluatedProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_wifi_ifname"
          },
          "mode": {
            "description": "wifi interface mode",
            "$ref": "#/components/schemas/WIFI_MODE"
          },
          "phy": {
            "description": "Set parent phy",
            "$ref": "#/components/schemas/INTERFACE_NUMBER"
          }
        }
      },
      "in_interfaces_wifi_delete_write": {
        "description": "Delete wifi interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "unevaluatedProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_wifi_ifname"
          }
        }
      },
      "in_interfaces_wifi_capability_write": {
        "description": "Set capabilities for wifi interface",
        "required": [
          "ifname"
        ],
        "type": "object",
        "unevaluatedProperties": false,
        "properties": {
          "ifname": {
            "$ref": "#/components/schemas/interfaces_wifi_ifname"
          },
          "ssid": {
            "description": "SSID (network name)",
            "$ref": "#/components/schemas/STRING"
          },
          "channel": {
            "oneOf": [
              {
                "description": "radio channel number",
                "$ref": "#/components/schemas/UINT"
              },
              {
                "description": "Automatic channel selection",
                "const": "auto"
              }
            ]
          },
          "hide_ssid": {
            "description": "SSID hidden",
            "type": "boolean"
          },
          "band": {
            "oneOf": [
              {
                "description": "hardware mode",
                "const": "802.11a"
              },
              {
                "description": "hardware mode",
                "const": "802.11g"
              },
              {
                "description": "hardware mode",
                "const": "802.11b"
              },
              {
                "description": "hardware mode",
                "const": "802.11n 2.4Ghz"
              },
              {
                "description": "hardware mode",
                "const": "802.11n 5Ghz"
              },
              {
                "description": "hardware mode",
                "const": "802.11ac"
              }
            ]
          },
          "ht_capability": {
            "type": "object",
            "description": "Set HighThroughput (802.11n) capability flags",
            "unevaluatedProperties": false,
            "properties": {
              "HT40-": {
                "description": "Set channel width to 40MHz (secondary channel below)",
                "type": "boolean"
              },
              "HT40+": {
                "description": "Set channel width to 40MHz (secondary channel above)",
                "type": "boolean"
              },
              "GF": {
                "description": "Enable GreenField mode",
                "type": "boolean"
              }
            }
          },
          "encryption": {
            "oneOf": [
              {
                "description": "encryption type",
                "const": "WEP64"
              },
              {
                "description": "encryption type",
                "const": "WEP128"
              },
              {
                "description": "encryption type",
                "const": "WPA"
              },
              {
                "description": "encryption type",
                "const": "WPA2"
              }
            ]
          },
          "wep_key": {
            "description": "WiFi wep-key",
            "$ref": "#/components/schemas/HEX"
          },
          "wpa_password": {
            "type": "object",
            "description": "Set WiFi WPA-password",
            "unevaluatedProperties": false,
            "required": [
              "password",
              "hash"
            ],
            "properties": {
              "password": {
                "description": "password phrase or hash",
                "$ref": "#/components/schemas/STRING"
              },
              "hash": {
                "description": "If true, password will be considered to be in a form of hash",
                "type": "boolean"
              }
            }
          }
        }
      },
      "out_interfaces_wifi_capability_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "responce to reading wifi capabilities",
        "description": "Result of reading wifi capabilities",
        "type": "object",
        "unevaluatedProperties": false,
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "ssid",
              "channel",
              "hide_ssid",
              "band",
              "ht_capability",
              "encryption",
              "wep_key",
              "wpa_password"
            ],
            "unevaluatedProperties": false,
            "properties": {
              "ssid": {
                "oneOf": [
                  {
                    "description": "SSID (network name)",
                    "$ref": "#/components/schemas/STRING"
                  },
                  {
                    "description": "SSID is not set",
                    "type": "null"
                  }
                ]
              },
              "channel": {
                "description": "radio channel number",
                "$ref": "#/components/schemas/UINT"
              },
              "hide_ssid": {
                "description": "SSID hidden",
                "type": "boolean"
              },
              "band": {
                "oneOf": [
                  {
                    "description": "hardware mode",
                    "const": "802.11a"
                  },
                  {
                    "description": "hardware mode",
                    "const": "802.11g"
                  },
                  {
                    "description": "hardware mode",
                    "const": "802.11b"
                  },
                  {
                    "description": "hardware mode",
                    "const": "802.11n 2.4Ghz"
                  },
                  {
                    "description": "hardware mode",
                    "const": "802.11n 5Ghz"
                  },
                  {
                    "description": "hardware mode",
                    "const": "802.11ac"
                  }
                ]
              },
              "ht_capability": {
                "type": "object",
                "description": "HighThroughput (802.11n) capability flags",
                "unevaluatedProperties": false,
                "properties": {
                  "HT40-": {
                    "description": "channel width to 40MHz (secondary channel below)",
                    "type": "boolean"
                  },
                  "HT40+": {
                    "description": "channel width to 40MHz (secondary channel above)",
                    "type": "boolean"
                  },
                  "GF": {
                    "description": "Enable GreenField mode",
                    "type": "boolean"
                  }
                }
              },
              "encryption": {
                "oneOf": [
                  {
                    "description": "encryption type",
                    "const": "WEP64"
                  },
                  {
                    "description": "encryption type",
                    "const": "WEP128"
                  },
                  {
                    "description": "encryption type",
                    "const": "WPA"
                  },
                  {
                    "description": "encryption type",
                    "const": "WPA2"
                  }
                ]
              },
              "wep_key": {
                "oneOf": [
                  {
                    "description": "WiFi wep-key",
                    "$ref": "#/components/schemas/HEX"
                  },
                  {
                    "description": "WiFiwep-key is not set",
                    "type": "null"
                  }
                ]
              },
              "wpa_password": {
                "oneOf": [
                  {
                    "description": "WiFi WPA-password hash",
                    "$ref": "#/components/schemas/STRING"
                  },
                  {
                    "description": "WiFi WPA-password is not set",
                    "type": "null"
                  }
                ]
              }
            }
          }
        }
      },
      "out_interfaces_wifi_phy_read": {
        "$ref": "#/components/schemas/out_generic",
        "title": "responce to reading wifi phy",
        "description": "Result of reading wifi phy",
        "type": "object",
        "unevaluatedProperties": false,
        "properties": {
          "result": {
            "type": "string",
            "description": "Wi-Fi PHY interfaces confuguration"
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer_token": []
    },
    {
      "Basic_auth": []
    },
    {
      "API_key": []
    }
  ],
  "paths": {
    "/aaa": {
      "get": {
        "tags": [
          "aaa"
        ],
        "description": "Get AAA settings. \n\nCLI commands: `show aaa`.",
        "summary": "Get AAA settings",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_aaa_read"
                }
              }
            }
          }
        }
      }
    },
    "/aaa/ssh": {
      "post": {
        "tags": [
          "aaa"
        ],
        "description": "Set SSH authentication method. \n\nCLI commands: `system ssh authentication-method`. \n\nNOTE: `ssh` needs to be enabled (usually enabled by default). `Tacacs` or `radius` methods require additional settings in corresponding modules for them to work properly, otherwise you won't be able to login via `ssh`.",
        "summary": "Set SSH authentication method",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_aaa_ssh_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/aaa/telnet": {
      "post": {
        "tags": [
          "aaa"
        ],
        "description": "Set telnet authentication method. \n\nCLI commands: `system telnet authentication-method`. \n\nNOTE: `telnet` needs to be enabled (usually disabled by default). `Tacacs` or `radius` methods require additional settings in corresponding modules for them to work properly, otherwise you won't be able to login via `telnet`.",
        "summary": "Set telnet authentication method",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_aaa_telnet_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/acl_ipv4": {
      "get": {
        "tags": [
          "acl"
        ],
        "summary": "get IPv4 ACL rules",
        "description": "get IPv4 ACL rules\n\nCLI commands: `show running-config access-control-list`, `show ip access-list`",
        "parameters": [
          {
            "name": "acl",
            "description": "Specify the ACL name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ACL_NAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_ipv4_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl"
        ],
        "summary": "Change IPv4 ACL rule",
        "description": "Change IPv4 ACL rule\n\nCLI commands: `[no] ip access-list`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_acl_ipv4_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/acl_ipv6": {
      "get": {
        "tags": [
          "acl"
        ],
        "summary": "get IPv6 ACL rules",
        "description": "get IPv6 ACL rules\n\nCLI commands: `show running-config access-control-list`, `show ipv6 access-list`",
        "parameters": [
          {
            "name": "acl",
            "description": "Specify the ACL name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ACL_NAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_ipv6_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl"
        ],
        "summary": "Change IPv6 ACL rule",
        "description": "Change IPv6 ACL rule\n\nCLI commands: `[no] ipv6 access-list`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_acl_ipv6_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/list": {
      "get": {
        "tags": [
          "acl"
        ],
        "summary": "get list of IPv4/IPv6 ACLs",
        "description": "get list of ACLs\n\nCLI commands: `show running-config access-control-list`",
        "parameters": [
          {
            "name": "proto",
            "description": "Specify protocol (ipv4/ipv6)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/logging": {
      "post": {
        "tags": [
          "acl"
        ],
        "summary": "Change ACL rule logging",
        "description": "Change IPv4/IPv6 ACL rule logging\n\nCLI command: `log ip access-list`, `log ipv6 access-list`\n\nThis requiests changes logging option on rule or on all existing rules in specific ACL",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_acl_log_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/filter/filter_ipv4": {
      "get": {
        "tags": [
          "acl/filter"
        ],
        "summary": "get IPv4 ACL filters",
        "description": "get IPv4 ACL filters\n\nCLI commands: `show running-config filtering`, `show ip filter`",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_filter_ipv4_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/filter"
        ],
        "summary": "Change IPv4 ACL filter",
        "description": "Change IPv4 ACL filter\n\nCLI commands: `[no] ip filter`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_acl_filter_ipv4_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/filter/filter_ipv6": {
      "get": {
        "tags": [
          "acl/filter"
        ],
        "summary": "get IPv6 ACL filters",
        "description": "get IPv6 ACL filters\n\nCLI commands: `show running-config filtering`, `show ipv6 filter`",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_filter_ipv6_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/filter"
        ],
        "summary": "Change IPv6 ACL filter",
        "description": "Change IPv6 ACL filter\n\nCLI commands: `[no] ipv6 filter`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_acl_filter_ipv6_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/filter/list": {
      "get": {
        "tags": [
          "acl/filter"
        ],
        "summary": "get list of IPv4/IPv6 ACL filters",
        "description": "get list of ACLs filters\n\nCLI commands: `show running-config filtering`",
        "parameters": [
          {
            "name": "proto",
            "description": "Specify protocol (ipv4/ipv6)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          },
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_filter_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/filter/show_iptables": {
      "get": {
        "tags": [
          "acl/filter"
        ],
        "summary": "display IP tables for filters",
        "description": "display IP tables and statistics for filters\n\nCLI commands: `show ip/ipv6 filter`",
        "parameters": [
          {
            "name": "proto",
            "description": "Specify protocol (ipv4/ipv6)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          },
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          },
          {
            "name": "chain",
            "description": "Specify the chain name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FILTERING_VIRT_CHAIN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_show_iptables_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/mangle/list": {
      "get": {
        "tags": [
          "acl/mangle"
        ],
        "summary": "get list of IPv4/IPv6 ACL mangle lists",
        "description": "get list of ACLs mangle lists\n\nCLI commands: `show running-config mangle-list`",
        "parameters": [
          {
            "name": "proto",
            "description": "Specify protocol (ipv4/ipv6)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          },
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_mangle_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/mangle/mangle_ipv4": {
      "get": {
        "tags": [
          "acl/mangle"
        ],
        "summary": "get IPv4 ACL mangle lists",
        "description": "get IPv4 ACL mangle lists\n\nCLI commands: `show running-config mangle-list`, `show ip mangle-list`",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_mangle_ipv4_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/mangle"
        ],
        "summary": "Change IPv4 ACL mangle",
        "description": "Change IPv4 ACL mangle\n\nCLI commands: `[no] ip mangle`, `[no] ip clone`, `clear ip mangle`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_acl_mangle_ipv4_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/mangle/mangle_ipv6": {
      "get": {
        "tags": [
          "acl/mangle"
        ],
        "summary": "get IPv6 ACL mangle lists",
        "description": "get IPv6 ACL mangle lists\n\nCLI commands: `show running-config mangle-list`, `show ipv6 mangle-list`",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_mangle_ipv6_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/mangle"
        ],
        "summary": "Change IPv6 ACL mangle",
        "description": "Change IPv6 ACL mangle\n\nCLI commands: `[no] ipv6 mangle-list`, `[no] ipv6 clone`, `clear ipv6 mangle`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_acl_mangle_ipv6_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/mangle/show_iptables": {
      "get": {
        "tags": [
          "acl/mangle"
        ],
        "summary": "display IP tables for mangle lists",
        "description": "display IP tables and statistics for mangle lists\n\nCLI commands: `show ip/ipv6 mangle-list`",
        "parameters": [
          {
            "name": "proto",
            "description": "Specify protocol (ipv4/ipv6)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          },
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          },
          {
            "name": "chain",
            "description": "Specify the chain name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MANGLE_VIRT_CHAIN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_show_iptables_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/nat/capabilities": {
      "get": {
        "tags": [
          "acl/nat"
        ],
        "summary": "get NAT settings",
        "description": "get NAT settings\n\nCLI commands: `show running-config nat`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_nat_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/nat"
        ],
        "summary": "Change NAT settings",
        "description": "Change NAT settings\n\nCLI commands: `ip connections statistics`,`ip tcp connections max-sessions`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_nat_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/nat/chains": {
      "get": {
        "tags": [
          "acl/nat"
        ],
        "summary": "get NAT chains",
        "description": "get NAT chains\n\nCLI commands: `show running-config nat`",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify the VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_nat_chains_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/nat"
        ],
        "summary": "Change NAT chains",
        "description": "Change NAT chains\n\nCLI commands: `[no] ip nat`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_nat_chains_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/nat/connections": {
      "get": {
        "tags": [
          "acl/nat"
        ],
        "summary": "display NAT connection statistics",
        "description": "display NAT connection statistics\n\nCLI command: `show ip connections statistics`\n\nIt displays records with pagination. If parameter `from` is not given it display the last `lines` records. If `lines` is not given it uses 1000 as default value",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify the VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          },
          {
            "name": "from",
            "description": "Specify the first record",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT"
            }
          },
          {
            "name": "lines",
            "description": "Specify number of records to display",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_1000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_nat_connections_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/nat/connections_count": {
      "get": {
        "tags": [
          "acl/nat"
        ],
        "summary": "display NAT connection count",
        "description": "display NAT connection statistics\n\nCLI command: `show ip connections count`",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify the VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_nat_connections_count_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/nat/conntrack": {
      "get": {
        "tags": [
          "acl/nat"
        ],
        "summary": "display NAT actual connection tracking values",
        "description": "display NAT conntrack values\n\nNOTE:\n\nin contrast to `/acl/nat/capabilities` this endpoint displays actual conntrack values from operating system,so `max_sessions_number` and `hash_table_size` are not available if connection statistics is disabled, while `/acl/nat/capabilities` specifies administrative values which available as soon as they set\n\nCLI command: `show ip connections max-sessions`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_nat_conntrack_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/nat/show_iptables": {
      "get": {
        "tags": [
          "acl/nat"
        ],
        "summary": "display IP tables for NAT",
        "description": "display IP tables and statistics for NAT\n\nCLI commands: `show ip nat`",
        "parameters": [
          {
            "name": "vrf",
            "description": "Specify VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          },
          {
            "name": "chain",
            "description": "Specify the chain name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/nat_chain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_show_iptables_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/pbr/chains": {
      "get": {
        "tags": [
          "acl/pbr"
        ],
        "summary": "get PBR chains",
        "description": "get PBR chains\n\nCLI commands: `show running-config policy-routing`",
        "parameters": [
          {
            "name": "proto",
            "description": "Specify protocol (ipv4/ipv6)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_pbr_chains_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/pbr"
        ],
        "summary": "Change PBR chains",
        "description": "Change PBR chains\n\nCLI commands: `[no] ip policy rule, [no] ipv6 policy rule`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_pbr_chains_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/pbr/show_iptables": {
      "get": {
        "tags": [
          "acl/pbr"
        ],
        "summary": "display IP tables for PBR",
        "description": "display IP tables for PBR\n\nCLI commands: `show ip policy rule`, `show ipv6 policy rule`",
        "parameters": [
          {
            "name": "proto",
            "description": "Specify protocol",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_acl_show_iptables_read"
                }
              }
            }
          }
        }
      }
    },
    "/acl/time_range/configuration": {
      "get": {
        "tags": [
          "acl/time_range"
        ],
        "summary": "get time range parameters",
        "description": "get time range configuration\n\nCLI commands: `show running-config access-control-list`, `show time-range`",
        "parameters": [
          {
            "name": "name",
            "description": "Specify time range name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/WORD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_time_range_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "acl/time_range"
        ],
        "summary": "Change time range configuration",
        "description": "Change time range configuration\n\nCLI commands: `[no]time-range`, `[no]datestart`, `[no]datestop`, `[no]timestart`, `[no]timestop`, `[no]weekdays`, `[no]monthdays`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_time_range_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/acl/time_range/list": {
      "get": {
        "tags": [
          "acl/time_range"
        ],
        "summary": "get list of time ranges",
        "description": "get list of time-ranges\n\nCLI commands: `show running-config access-control-list`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_time_range_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/arp/announce": {
      "post": {
        "tags": [
          "arp"
        ],
        "summary": "Set ARP announce mode",
        "description": "CLI analog: `arp announce [vrf <vrf_name>] (any | best | subnet)`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_arp_announce_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "announce set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/arp/config": {
      "get": {
        "tags": [
          "arp"
        ],
        "summary": "Get ARP configuration",
        "description": "CLI analog: `show running-config arp`",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_arp_config_read"
                }
              }
            }
          }
        }
      }
    },
    "/arp/ipMaxNeigh": {
      "get": {
        "tags": [
          "arp"
        ],
        "summary": "Get IP ARP GC thresholds",
        "description": "CLI analog: `show ip max-neigh`, `show ipv6 max-neigh`",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_arp_ipmaxneigh_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "arp"
        ],
        "summary": "Set IP ARP GC thresholds",
        "description": "CLI analog: `ip max-neigh <gc1> [<gc2> [<gc3>]]`, `ipv6 max-neigh <gc1> [gc2 [gc3]]`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_arp_ipmaxneigh_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thresholds set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/arp/proxy": {
      "post": {
        "tags": [
          "arp"
        ],
        "summary": "Enable/disable ARP proxy",
        "description": "CLI analog: `[no] arp proxy [vrf <vrf_name>] [pvlan]`\n\nIf you don't want to change one of the params, just skip it",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_arp_proxy_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "proxy/pvlan enabled/disabled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/arp/reply": {
      "post": {
        "tags": [
          "arp"
        ],
        "summary": "Set ARP reply mode/disable ARP reply",
        "description": "CLI analog: `arp reply [vrf <vrf_name>] (any|global|interface|local)`, `no arp reply [vrf <vrf_name>]`\n\n`null` disables arp reply",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_arp_reply_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reply set/disabled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/arp/show/iface": {
      "get": {
        "tags": [
          "arp"
        ],
        "summary": "Get ARP table filtered by interface",
        "description": "Fetch the ARP table.\nCLI analog: `show arp [all] [vrf (<vrf_name> | all)] [interface <iface_name>] [full]`",
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          },
          {
            "name": "iface",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          },
          {
            "name": "full",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_arp_read"
                }
              }
            }
          }
        }
      }
    },
    "/arp/show/ip": {
      "get": {
        "tags": [
          "arp"
        ],
        "summary": "Get ARP table filtered by ip",
        "description": "Fetch the ARP table.\nCLI analog: `show arp [all] [vrf (<vrf_name> | all)] [ip-address <ip_addr>] [full]`",
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          },
          {
            "name": "ip_adress",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_ADDR"
            }
          },
          {
            "name": "full",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_arp_read"
                }
              }
            }
          }
        }
      }
    },
    "/arp/show/mac": {
      "get": {
        "tags": [
          "arp"
        ],
        "summary": "Get ARP table filtered by mac",
        "description": "Fetch the ARP table.\nCLI analog: `show arp [all] [vrf (<vrf_name> | all)] [hardware-address <hw_addr>] [full]`",
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          },
          {
            "name": "mac_adress",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MAC_ADDR"
            }
          },
          {
            "name": "full",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_arp_read"
                }
              }
            }
          }
        }
      }
    },
    "/arp/table/add": {
      "post": {
        "tags": [
          "arp"
        ],
        "summary": "Add a static ARP entry",
        "description": "Add a static ARP entry\nCLI analog: `arp  [vrf <vrf_name>] <ip> <mac> [<interface>]`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_arp_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ARP entry added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/arp/table/delete": {
      "post": {
        "tags": [
          "arp"
        ],
        "summary": "Delete a static ARP entry",
        "description": "Delete a static ARP entry\nCLI analog: `no arp  [vrf <vrf_name>] <ip>`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_arp_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ARP entry added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/arp/timeout": {
      "post": {
        "tags": [
          "arp"
        ],
        "summary": "Set/reset ARP timeout",
        "description": "CLI analog: `arp timeout [vrf <vrf_name>] <iface> <time_value> <units>`, `no arp timeout [vrf <vrf_name>] <iface>`\n\nIf you want to reset timeout, skip `time_value` and `units` parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_arp_timeout_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "timeout set/reset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/bgp/vrf/config": {
      "get": {
        "tags": [
          "bgp"
        ],
        "summary": "get BGP VRF config",
        "description": "get BGP VRF config\n\nCLI commands: `show running-config vrf-management`",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_bgp_vrf_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bgp"
        ],
        "summary": "set BGP VRF config",
        "description": "set BGP VRF config\n\nCLI commands (from `ip vrf` mode):`[no] description`, `[no] rd`, `[no] import map`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_bgp_vrf_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/bgp/vrf/route_target": {
      "get": {
        "tags": [
          "bgp"
        ],
        "summary": "get BGP import/export route targets",
        "description": "get BGP import/export route targets\n\nCLI commands: `show running-config vrf-management`",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_vrf_route_target_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bgp"
        ],
        "summary": "add/delete BGP import/export route targets",
        "description": "manage BGP import/export route targets\n\nCLI commands (from `ip vrf` mode):`[no] route-target`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_vrf_route_target_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/carp": {
      "get": {
        "tags": [
          "carp"
        ],
        "summary": "get carp params for specific interface",
        "description": "get params for specific interface. \n\nCLI commands (for specific interface): `show carp`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_carp_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "carp"
        ],
        "summary": "Enable/Disable CARP on this interface",
        "description": "Use command to enable/disable Common Address Redundacy Protocol (CARP) on this interface\n\nCLI commands: `[no] carp id address  (password | secret)  [timer]`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_carp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/datetime/datetime": {
      "get": {
        "tags": [
          "datetime"
        ],
        "summary": "get date/time info",
        "description": "CLI commands: `show clock`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_datetime_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "datetime"
        ],
        "summary": "set date/time info",
        "description": "set date,time,timezone\n\nCLI commands: `[no]system clock`.\n\nNOTES: \n\n- setting the date might be critical because if selected date is in a future, existing API keys will be treated as exipred after this requiest and further API requrests will be rejected. So, this shoulld be done with care\n\n- if several parameters are selected for change they changed in following order: timezone, date, time",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_datetime_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/datetime/dst": {
      "get": {
        "tags": [
          "datetime"
        ],
        "summary": "get DST info",
        "description": "get daylight saving time change info\n\nCLI commands: `show clock dst`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_datetime_dst_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "datetime"
        ],
        "summary": "modify DST info",
        "description": "modify daylight saving time change info\n\nCLI commands: `[no]system clock dst`.\n\nNOTES: \n\n- the timezone should be selected from the list returned by the `datetime/tz`\n- for deleting DST the date (and optionnaly the time) field might select specific entry. In they are not specified, all the DST entries will be removed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_datetime_dst_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/datetime/tz": {
      "get": {
        "tags": [
          "datetime"
        ],
        "summary": "get timezone list",
        "description": "get timezone list. \n\n No CLI command equivalent, bu this information is returned as a `Tab` hint in the commands `system clock dst`, `system clock timezone`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_datetime_tz_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/add": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Create pool of IPv4-addresses. \n\nCLI commands: `ip dhcp pool`, `network`.",
        "summary": "Add pool",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/default-lease-time": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get dhcp default lease time for pool/group/host. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get default lease time",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_default_lease_time_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Set dhcp default lease time for pool/group/host. \n\nCLI commands: `default-lease-time`.",
        "summary": "Set default lease time",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_default_lease_time_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/delete": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Delete pool of IPv4-addresses with all settings. \n\nCLI commands: `no ip dhcp pool`.",
        "summary": "Delete pool",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/groups/add": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Add group of hosts for specific DHCP pool. \n\nCLI commands: `group`.",
        "summary": "Add group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_groups_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/groups/delete": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Delete group of hosts for specific DHCP pool. \n\nCLI commands: `no group`.",
        "summary": "Delete group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_groups_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/groups/list": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get a list of DHCP pool groups. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get a list of groups",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_groups_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/hosts": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Create or edit DHCPv4-host for pool/group with specified MAC address or client id. \n\nCLI commands: `host`, `ip`, `identity`.",
        "summary": "Add or edit host",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_hosts_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get information about host from pool/group. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get host",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_hosts_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/hosts/delete": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Delete DHCPv4-host from pool/group. \n\nCLI commands: `no host`.",
        "summary": "Delete host",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_hosts_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/hosts/list": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get a list of DHCP pool/group hosts. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get a list of hosts",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_hosts_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/list": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get a list of DHCP pools. \n\nCLI commands: `show ip dhcp`.",
        "summary": "Get a list of pools",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/max-lease-time": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get dhcp max lease time for pool/group/host. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get max lease time",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_max_lease_time_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Set dhcp max lease time for pool/group/host. \n\nCLI commands: `max-lease-time`.",
        "summary": "Set max lease time",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_max_lease_time_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/options": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get DHCP option for pool/group/host. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get option",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          },
          {
            "name": "option_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/common_dhcp_option_names",
              "description": "Option name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_options_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/options/add": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Add DHCP option for pool/group/host. \n\nCLI commands: `option bootfile-name`, `option classless-static-routes`, `option default-ip-ttl`, `option dhcp-message-type`, `option domain-name`, `option domain-name-server`, `option host-name`, `option interface-mtu`, `option ip-forwarding`, `option lpr-servers`, `option max-dgram-reassembly`, `option mobile-ip-home-agent`, `option non-local-source-routing`, `option ntp-servers`, `option policy-filter`, `option routers`, `option static-routes`, `option subnet-mask`, `option tftp-server-address`, `option tftp-server-name`, `option time-offset`, `option time-servers`, `option ip-tele-voicesrvr`, `option ip-tele-datasrvr`, `option vendor-class-identifier`, `option vendor-encapsulated-options`",
        "summary": "Add option",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_options_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/options/delete": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Delete DHCP option for pool/group/host. \n\nCLI commands: `no option bootfile-name`, `no option classless-static-routes`, `no option default-ip-ttl`, `no option dhcp-message-type`, `no option domain-name`, `no option domain-name-server`, `no option host-name`, `no option interface-mtu`, `no option ip-forwarding`, `no option lpr-servers`, `no option max-dgram-reassembly`, `no option mobile-ip-home-agent`, `no option non-local-source-routing`, `no option ntp-servers`, `no option policy-filter`, `no option routers`, `no option static-routes`, `no option subnet-mask`, `no option tftp-server-address`, `no option tftp-server-name`, `no option time-offset`, `no option time-servers`, `no option ip-tele-voicesrvr`, `no option ip-tele-datasrvr`, `no option vendor-class-identifier`, `no option vendor-encapsulated-options`",
        "summary": "Delete option",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_options_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/options/list": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get a list of DHCP options for pool/group/host. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get list of options",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_options_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/range/add": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Add range of IPv4 addresses for DHCP pool. \n\nCLI commands: `range`.",
        "summary": "Add range",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_range_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/range/delete": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Delete range of IPv4 addresses for DHCP pool. \n\nCLI commands: `no range`",
        "summary": "Delete range",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_range_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/range/list": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get a list of DHCP pool ranges. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get a list of ranges",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_range_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/pools/vrf": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get VRF for DHCP pool. \n\nCLI commands: `show ip dhcp pool`.",
        "summary": "Get VRF",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_pools_vrf_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Set VRF for DHCP pool. \n\nCLI commands: `vrf`.",
        "summary": "Set VRF",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_pools_vrf_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/server": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get DHCP server status. \n\nCLI commands: `show ip dhcp`.",
        "summary": "Get server status",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_server_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Turn on/turn off/restart DHCPv4 server. \n\nCLI commands: `ip dhcp server`.",
        "summary": "ON/OFF/Restart server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_server_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/server/clear-leases": {
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Clear DHCPv4 server-leases for specified VRF instance. \n\nCLI commands: `clear ip dhcp server-leases`.",
        "summary": "Clear server-leases",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_server_clear_leases_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/server/default-lease-time": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get global DHCPv4 default lease time for specific VRF. \n\nCLI commands: `show ip dhcp`.",
        "summary": "Get global default lease time",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_server_default_lease_time_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcp"
        ],
        "description": "Set global DHCPv4 default lease time for specific VRF. \n\nCLI commands: `ip dhcp default-lease-time`.",
        "summary": "Set global default lease time",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_server_default_lease_time_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/server/leases": {
      "get": {
        "tags": [
          "dhcp"
        ],
        "description": "Get DHCPv4 server-leases for specific VRF. \n\nCLI commands: `show ip dhcp server-leases`.",
        "summary": "Get server-leases",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_server_leases_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/client/config": {
      "get": {
        "tags": [
          "dhcp client"
        ],
        "description": "Get DHCP client config. \n\nCLI commands: `show ip dhcp client`.",
        "summary": "Get DHCP client config",
        "parameters": [
          {
            "name": "config_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Config name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_client_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcp client"
        ],
        "description": "Add new or edit existing DHCP client config. \n\nCLI commands:  `ip dhcp client`, `initial-interval`, `reboot`, `retry`, `select-timeout`, `timeout`.",
        "summary": "Add or edit DHCP client config",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_client_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/client/config/delete": {
      "post": {
        "tags": [
          "dhcp client"
        ],
        "description": "Delete DHCP client config. \n\nCLI commands: `no ip dhcp client`.",
        "summary": "Delete DHCP client config",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_client_config_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/client/config/interfaces/list": {
      "get": {
        "tags": [
          "dhcp client"
        ],
        "description": "Get a list of interfaces that has DHCP client with given config. \n\nCLI commands: `show dhcp client`.",
        "summary": "Get a list of interfaces for config",
        "parameters": [
          {
            "name": "config_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Config name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_client_config_interfaces_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/client/config/list": {
      "get": {
        "tags": [
          "dhcp client"
        ],
        "description": "Get DHCP client configs list. \n\nCLI commands: `show dhcp client`.",
        "summary": "Get DHCP client configs list",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_client_config_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/client/interfaces/clear-leases": {
      "post": {
        "tags": [
          "dhcp client"
        ],
        "description": "Clear DHCP client leases. \n\nCLI commands: `p address dhcp clear-leases`, `ipv6 address dhcp clear-leases`.",
        "summary": "Clear leases",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_client_interfaces_clear_leases_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay": {
      "get": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Get DHCPv4 relay configuration settings. \n\nCLI commands: `show ip dhcp relay`.",
        "summary": "Get relay",
        "parameters": [
          {
            "name": "relay_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv4 relay name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_relay_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/add": {
      "post": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Create DHCPv4 relay configuration. \n\nCLI commands: `ip dhcp relay`.",
        "summary": "Add relay",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_relay_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/delete": {
      "post": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Delete DHCPv4 relay configuration. \n\nCLI commands: `no ip dhcp relay`.",
        "summary": "Delete relay",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_relay_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/edit": {
      "post": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Edit DHCPv4 relay configuration. \n\nCLI commands: `append-agent-option`, `manage-agent-option`, `option 82`, `shutdown`, `vrf`.",
        "summary": "Edit relay",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_relay_edit_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/interfaces/add": {
      "post": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Add DHCPv4 interface to relay configuration. \n\nCLI commands: `interface`.",
        "summary": "Add interface",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_relay_interface_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/interfaces/delete": {
      "post": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Remove DHCPv4 interface from relay configuration. \n\nCLI commands: `no interface`.",
        "summary": "Delete interface",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_relay_interface_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/interfaces/list": {
      "get": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Get a list of DHCPv4 interfaces for relay. \n\nCLI commands: `show ip dhcp relay`.",
        "summary": "Get a list of interfaces",
        "parameters": [
          {
            "name": "relay_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv4 relay name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_relay_interface_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/list": {
      "get": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Get DHCPv4 relay list. \n\nCLI commands: `show ip dhcp relay`.",
        "summary": "Get realy list",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_relay_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/servers/add": {
      "post": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Add DHCPv4 server to relay configuration. \n\nCLI commands: `server`.",
        "summary": "Add server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_relay_server_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/servers/delete": {
      "post": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Remove DHCPv4 server from relay configuration. \n\nCLI commands: `no server`.",
        "summary": "Delete server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv4_relay_server_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv4/relay/servers/list": {
      "get": {
        "tags": [
          "dhcp relay"
        ],
        "description": "Get a list of DHCPv4 servers for relay. \n\nCLI commands: `show ip dhcp relay`.",
        "summary": "Get a list of servers",
        "parameters": [
          {
            "name": "relay_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv4 relay name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv4_relay_server_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/add": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Create pool of IPv6-addresses. \n\nCLI commands: `ipv6 dhcp pool`, `network`.",
        "summary": "Add pool",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/delete": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Delete pool of IPv6-addresses with all settings. \n\nCLI commands: `no ipv6 dhcp pool`.",
        "summary": "Delete pool",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/groups/add": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Add group of hosts for specific DHCPv6 pool. \n\nCLI commands: `group`.",
        "summary": "Add group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_groups_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/groups/delete": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Delete group of hosts for specific DHCPv6 pool. \n\nCLI commands: `no group`.",
        "summary": "Delete group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_groups_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/groups/list": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get a list of DHCPv6 pool groups. \n\nCLI commands: `show ipv6 dhcp pool`.",
        "summary": "Get a list of groups",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_groups_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/hosts": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Create or edit DHCPv6-host for pool/group with specified MAC address or client id. \n\nCLI commands: `host`, `ipv6`, `identity`.",
        "summary": "Add or edit host",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_hosts_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get information about host from pool/group. \n\nCLI commands: `show ipv6 dhcp pool`.",
        "summary": "Get host",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_hosts_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/hosts/delete": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Delete DHCPv6-host from pool/group. \n\nCLI commands: `no host`.",
        "summary": "Delete host",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_hosts_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/hosts/list": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get a list of DHCPv6 pool/group hosts. \n\nCLI commands: `show ipv6 dhcp pool`.",
        "summary": "Get a list of hosts",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_hosts_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/list": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get a list of DHCPv6 pools. \n\nCLI commands: `show ipv6 dhcp`.",
        "summary": "Get a list of pools",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/max-lease-time": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get dhcp max lease time for pool/group/host. \n\nCLI commands: `show ipv6 dhcp pool`.",
        "summary": "Get max lease time",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_max_lease_time_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Set dhcp max lease time for pool/group/host. \n\nCLI commands: `max-lease-time`.",
        "summary": "Set max lease time",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_max_lease_time_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/options": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get DHCPv6 option for pool/group/host. \n\nCLI commands: `show ipv6 dhcp pool`",
        "summary": "Get option",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          },
          {
            "name": "option_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/common_dhcp_ipv6_option_names",
              "description": "Option name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_options_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/options/add": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Add DHCPv6 option for pool/group/host. \n\nCLI commands: `option name-servers`.",
        "summary": "Add option",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_options_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/options/delete": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Delete DHCPv6 option for pool/group/host. \n\nCLI commands: `no option name-servers`.",
        "summary": "Delete option",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_options_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/options/list": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get a list of DHCPv6 options for pool/group/host. \n\nCLI commands: `show ipv6 dhcp pool`.",
        "summary": "Get a list of options",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          },
          {
            "name": "host_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Host name"
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Group name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_options_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/range/add": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Add range of IPv6 addresses for DHCPv6 pool. \n\nCLI commands: `range`.",
        "summary": "Add range",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_range_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/range/delete": {
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Delete range of IPv6 addresses for DHCPv6 pool. \n\nCLI commands: `no range`.",
        "summary": "Delete range",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_range_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/range/list": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get a list of DHCPv6 pool ranges. \n\nCLI commands: `show ipv6 dhcp pool`.",
        "summary": "Get a list of ranges",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_range_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/pools/vrf": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get VRF for DHCPv6 pool. \n\nCLI commands: `show ipv6 dhcp pool`.",
        "summary": "Get VRF",
        "parameters": [
          {
            "name": "pool_number",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_65535",
              "description": "Pool number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_pools_vrf_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Set VRF for DHCPv6 pool. \n\nCLI commands: `vrf`.",
        "summary": "Set VRF",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_pools_vrf_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/server": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get DHCPv6 server status. \n\nCLI commands: `show ipv6 dhcp`.",
        "summary": "Get server status",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_server_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Turn on/turn off/restart DHCPv6 server. \n\nCLI commands: `ipv6 dhcp server`.",
        "summary": "ON/OFF/Restart server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_server_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/server/default-lease-time": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get global DHCPv6 default lease time for specific VRF. \n\nCLI commands: `show ipv6 dhcp`.",
        "summary": "Get global default lease time",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_server_default_lease_time_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Set global DHCPv6 default lease time for specific VRF. \n\nCLI commands: `ipv6 dhcp default-lease-time`.",
        "summary": "Set global default lease time",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_server_default_lease_time_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/server/leases": {
      "get": {
        "tags": [
          "dhcpv6"
        ],
        "description": "Get DHCPv6 server-leases for specific VRF. \n\nCLI commands: `show ipv6 dhcp server-leases`.",
        "summary": "Get server-leases",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF instance name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_server_leases_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay": {
      "get": {
        "tags": [
          "dhcpv6 relay"
        ],
        "summary": "Get relay",
        "description": "Get DHCPv6 relay configuration settings. \n\nCLI commands: `show ipv6 dhcp relay`.",
        "parameters": [
          {
            "name": "relay_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv6 relay name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_relay_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/add": {
      "post": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Create DHCPv6 relay configuration. \n\nCLI commands: `ipv6 dhcp relay`.",
        "summary": "Add relay",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_relay_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/clients/add": {
      "post": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Add to DHCPv6 Relay configuration interface address on which queries from clients will be received. \n\nCLI commands: `client-interface`.",
        "summary": "Add client interface",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_relay_client_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/clients/delete": {
      "post": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Remove DHCPv6 client interface from relay configuration. \n\nCLI commands: `no client-interface`.",
        "summary": "Remove client interface",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_relay_client_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/clients/list": {
      "get": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Get a list of DHCPv6 client interfaces for relay. \n\nCLI commands: `show ipv6 dhcp relay`.",
        "summary": "Get a list of client interfaces",
        "parameters": [
          {
            "name": "relay_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv6 relay name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_relay_client_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/delete": {
      "post": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Delete DHCPv6 relay configuration. \n\nCLI commands: `no ipv6 dhcp relay`.",
        "summary": "Delete relay",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_relay_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/edit": {
      "post": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Edit DHCPv6 relay configuration. \n\nCLI commands: `shutdown`, `vrf`.",
        "summary": "edit relay",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_relay_edit_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/list": {
      "get": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Get DHCPv6 relay list. \n\nCLI commands: `show ipv6 dhcp relay`",
        "summary": "Get realy list",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_relay_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/servers/add": {
      "post": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Add DHCPv6 server interface to relay configuration. \n\nCLI commands: `server-interface`.",
        "summary": "Add server interface",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_relay_server_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/servers/delete": {
      "post": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Remove DHCPv6 server interface from relay configuration. \n\nCLI commands: `no server-interface`.",
        "summary": "Remove server interface",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dhcp_ipv6_relay_server_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dhcp/ipv6/relay/servers/list": {
      "get": {
        "tags": [
          "dhcpv6 relay"
        ],
        "description": "Get a list of DHCPv6 server interfaces for relay. \n\nCLI commands: `show ipv6 dhcp relay`.",
        "summary": "Get a list of server interfaces",
        "parameters": [
          {
            "name": "relay_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "DHCPv6 relay name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dhcp_ipv6_relay_server_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dns/client": {
      "get": {
        "tags": [
          "dns client"
        ],
        "description": "Get name server addresses. \n\nCLI commands: `show name-servers`. \n\nMOTE: While you can only add ip addresses, some default entries might have different format.",
        "summary": "Get name server addresses",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dns_client_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dns client"
        ],
        "description": "Add or delete name server address. \n\nCLI commands: `name-server`. \n\nNOTE: Default entries cannot be deleted.",
        "summary": "Add or delete name server address",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_client_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/proxy": {
      "get": {
        "tags": [
          "dns proxy"
        ],
        "description": "Get DNS proxy configuration. \n\nCLI commands: `show dns-proxy`. \n\nNOTE: If `vrf_name` parameter is not specified it displays all configured DNS-proxies.",
        "summary": "Get DNS proxy",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF for proxy server"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dns_proxy_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dns proxy"
        ],
        "description": "Add or edit DNS proxy configuration. \n\nCLI commands: `dns-proxy`, `option`. \n\nYou can create configuration for non-existent VRF, but you will need to eventually create VRF for it to work.",
        "summary": "Add or edit DNS proxy",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_proxy_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/proxy/auto": {
      "post": {
        "tags": [
          "dns proxy"
        ],
        "description": "Automatically detect current DNS server and proxy queries to it. \n\nCLI commands: `auto`. \n\nNOTE: This is not a fixed setting, instead it will change some options once. Only works for default VRF.",
        "summary": "Auto detect settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_proxy_auto_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/proxy/control": {
      "post": {
        "tags": [
          "dns proxy"
        ],
        "description": "ON/OFF/restart DNS proxy. \n\nCLI commands: `dns-proxy`.",
        "summary": "ON/OFF/restart DNS proxy",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_proxy_control_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/proxy/delete": {
      "post": {
        "tags": [
          "dns proxy"
        ],
        "description": "Delete DNS proxy configuration. \n\nCLI commands: `no dns-proxy`.",
        "summary": "Delete DNS proxy",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_proxy_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/proxy/list": {
      "get": {
        "tags": [
          "dns proxy"
        ],
        "description": "Get a list of configured DNS proxy. \n\nCLI commands: `show dns-proxy`. \n\nNOTE: This list contains VRF names because there is one DNS proxy configuration per VRF.",
        "summary": "Get list of DNS proxy",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dns_proxy_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server": {
      "get": {
        "tags": [
          "dns server"
        ],
        "description": "Get DNS server configuration. \n\nCLI commands: `show dns-server`.",
        "summary": "Get DNS server configuration",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dns_server_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Configure DNS server. \n\nCLI commands: `dns-server`, `allow-query`, `allow-transfer`, `listen-address`, `listen-port`, `recursion`.",
        "summary": "Configure DNS server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/control": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Control the DNS-server (ON/OFF/restart/reload). \n\nCLI commands: `dns-server`.",
        "summary": "Control the DNS-server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_control_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/serial": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Set serial for DNS-server. \n\nCLI commands: `serial`. \n\nNOTE: This will apply to every master zone.",
        "summary": "Set serial for DNS-server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_serial_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/master": {
      "get": {
        "tags": [
          "dns server"
        ],
        "description": "Get specified master zone configuration. \n\nCLI commands: `show dns-server`.",
        "summary": "Get master zone configuration",
        "parameters": [
          {
            "name": "zone_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Master zone name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dns_server_zone_master_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Configure master zone. \n\nCLI commands: `set`. \n\nNOTE: Master zone needs to be added via `/dns/server/zone/master/add` before configuring.",
        "summary": "Configure master zone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_zone_master_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/master/add": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Add master zone. \n\nCLI commands: `zone master`.",
        "summary": "Add master zone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_zone_master_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/master/delete": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Delete master zone. \n\nCLI commands: `no zone master`.",
        "summary": "Delete master zone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_zone_master_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/master/entry/add": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Add a A/AAAA/NX/MX record to the master zone. \n\nCLI commands: `entry`.",
        "summary": "Add a A/AAAA/NX/MX record to the master zone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_zone_master_entry_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/master/entry/delete": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Remove A/AAAA/NX/MX record from the master zone. \n\nCLI commands: `no entry`.",
        "summary": "Remove A/AAAA/NX/MX record from the master zone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_zone_master_entry_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/master/list": {
      "get": {
        "tags": [
          "dns server"
        ],
        "description": "Get a list of DNS master zones. \n\nCLI commands: `show dns-server`.",
        "summary": "List of DNS master zones",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dns_server_zone_master_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/slave/add": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Add slave zone. \n\nCLI commands: `zone slave`.",
        "summary": "Add slave zone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_zone_slave_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/slave/delete": {
      "post": {
        "tags": [
          "dns server"
        ],
        "description": "Delete slave zone. \n\nCLI commands: `no zone slave`.",
        "summary": "Delete slave zone",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_dns_server_zone_slave_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/dns/server/zone/slave/list": {
      "get": {
        "tags": [
          "dns server"
        ],
        "description": "Get a list of DNS slave zones. \n\nCLI commands: `show dns-server`.",
        "summary": "List of DNS slave zones",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_dns_server_zone_slave_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/emon/capabilities": {
      "get": {
        "tags": [
          "emon"
        ],
        "summary": "get monitoring settings",
        "description": "get settings of monitoring server\n\nCLI command: `show running-config monitoring`, `show monitoring`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_emon_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "emon"
        ],
        "summary": "Change monitoring settings",
        "description": "Change monitoring server settings\n\nCLI commands: `alert`,`warning`,`info`, `logging`, `cpu`, `disk`, `fan`, `memory`, `network`, `smart`, `temperature`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_emon_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/emon/list_disk": {
      "get": {
        "tags": [
          "emon"
        ],
        "summary": "get list of disk partitions",
        "description": "get list disk partitions\n\nCLI command: `show disks`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_emon_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/emon/list_fanname": {
      "get": {
        "tags": [
          "emon"
        ],
        "summary": "get list of fans",
        "description": "get list of fans\n\nCLI command: `show fans`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_emon_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/emon/list_ifname": {
      "get": {
        "tags": [
          "emon"
        ],
        "summary": "get list of network interfaces",
        "description": "get list of network interfaces\n",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_emon_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/emon/list_smart": {
      "get": {
        "tags": [
          "emon"
        ],
        "summary": "get list of S.M.A.R.T. disks",
        "description": "get list of S.M.A.R.T. disks\n\nCLI command: `show smart`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_emon_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/emon/sensors": {
      "get": {
        "tags": [
          "emon"
        ],
        "summary": "get sensors values",
        "description": "get sensors values\n\nCLI command: `show power volage`, `show temperature`, `show fans`",
        "parameters": [
          {
            "name": "sensor",
            "description": "sensor type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "power voltage",
                "temperature",
                "fans"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_emon_sensors_read"
                }
              }
            }
          }
        }
      }
    },
    "/emon/status": {
      "get": {
        "tags": [
          "emon"
        ],
        "summary": "get monitoring server running status",
        "description": "get running status\n\nCLI commands: `show monitoring`, `show running-config monitoring`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_emon_status_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "emon"
        ],
        "summary": "change monitoting server running status",
        "description": "change running status\n\nCLI commands: `monitoring on`, `monitoring off`, `monitoring restart`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_emon_status_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/description": {
      "get": {
        "tags": [
          "interfaces",
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/tunnel"
        ],
        "summary": "display description of network interface",
        "description": "get description of network interface\n\nCLI command: `show interfaces`",
        "parameters": [
          {
            "name": "ifname",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_description_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces",
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/tunnel"
        ],
        "summary": "set description of network interface",
        "description": "set description of network interface\n\nCLI commands: `[no]description`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_description_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/list": {
      "get": {
        "tags": [
          "interfaces",
          "interfaces/bonding",
          "interfaces/bridge"
        ],
        "summary": "get list of interfaces",
        "description": "get list of interfaces for given category or for all categories\n\nAlso there is no direct equivalent of this command in CLI, this request should be used widely for selection of the interfaces from the list everywhere where `IFNAME` type is used. \n\nNOTES: \n- the list of interfaces is returned by categories so use returned list for all requests in `interfaces` endpoints \n- some interfaces are statically defined, some (i.e. VLAN, tunnel, etc.) - dynamically. So the list of interfaces should be reget after add/delete operations with interfaces of specific category \n- if API does not return switchport interfaces, all the operations with `/interfaces/vlan` , `/interfaces/switchport` , `/interfaces/switchport/stp` shouldbe disabled and will return the error \n- the number of ethernet interfaces may vary depending on the hardware model",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/iface_category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/shutdown": {
      "post": {
        "tags": [
          "interfaces",
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/tunnel"
        ],
        "summary": "up/down interface",
        "description": "set up/down administrative state for the interface\n\nCLI commands: `[no]shutdown`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_shutdown_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/state": {
      "get": {
        "tags": [
          "interfaces",
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/tunnel"
        ],
        "summary": "get state of network interface",
        "description": "get administrative and real state of network interface, if `detail` is `true` it also returns a number of statistical stuff. Since statistics is changed continiously, this command should be polled by web-appication to display actual state of specific interface\n\nCLI command: `show interfaces`",
        "parameters": [
          {
            "name": "ifname",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          },
          {
            "name": "detail",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_state_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bonding/add": {
      "post": {
        "tags": [
          "interfaces/bonding"
        ],
        "summary": "Add bonding interface",
        "description": "Add bonding interface\n\nCLI command: `interface bond`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bond_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bonding/capability": {
      "get": {
        "tags": [
          "interfaces/bonding"
        ],
        "summary": "Get bonding capabilities",
        "description": "Get bonding capabilities\n\nCLI commands: `show interfaces bond`, `show running-config bonding`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_bond_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_bond_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding"
        ],
        "summary": "Set bonding capabilities",
        "description": "Set bonding capabilities\n\nCLI commands: `enslave`, `no enslave `,`hash-policy`, `link_monitor_period`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bond_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bonding/delete": {
      "post": {
        "tags": [
          "interfaces/bonding"
        ],
        "summary": "Delete bonding interface",
        "description": "Delete bonding interface\n\nCLI command: `no interface bond`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bond_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bonding/mode": {
      "post": {
        "tags": [
          "interfaces/bonding"
        ],
        "summary": "Set bonding mode",
        "description": "Set bonding mode\n\nCLI command: `mode`, `lacp-rate`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bond_mode_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/arp": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Get ARP parameters",
        "description": "Get ARP parameters\n\nCLI command: `show proxy-arp`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_common_arp_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Update ARP parameters",
        "description": "Update ARP parameters\n\nCLI commands: `arp announce`, `arp reply`, `arp proxy pvlan`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_arp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/dhcp_client": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Get status of running DHCP client",
        "description": "Get status of running DHCP client on interface\n\nCLI command: `show dhcp client`\n\nNOTE: this command should not be polled more often than once per 5 seconds",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          },
          {
            "name": "leases",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Display lease file"
          },
          {
            "name": "config",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Display config file"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_common_dhcp_client_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/ip_address": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Set static IPv4 address",
        "description": "Set static IPv4 address of interface. The list of IP addresses might be requested by `/interfaces/state` `GET` request\n\nCLI command: `ip address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_ip_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Static address set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/ip_address_dhcp": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Run DHCP client on interface",
        "description": "Run DHCP client on interface. This command does not set IP address immediately, instead it runs DHCP client and address might be assigned later. Actual addresses are available via `/interfaces/state` `GET` request\n\nCLI command: `ip address dhcp`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_ip_address_dhcp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DHCP client started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/ip_forwarding": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Move to/from VRF",
        "description": "Associate interface with specific VRF\n\nCLI commands: `[no] ip forwarding vrf`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_ip_forwarding_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/ip_mtu": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Set MTU size for an interface",
        "description": "Set MTU size for an interface. Actual MTU size might be requested by `/interfaces/state` `GET` request\n\nCLI command: `ip mtu`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_ip_mtu_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/ipv6_address": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Set static IPv6 address",
        "description": "Set static IPv6 address of interface. The list of IPv6 addresses (including link-local) might be requested by `/interfaces/state` `GET` request\n\nCLI command: `ipv6 address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_ipv6_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Static address set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/ipv6_address_dhcp": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Run DHCPv6 on interface",
        "description": "Run DHCPv6 client on interface. This command does not set IPv6 address immediately, instead it runs DHCPv6 client and address might be assigned later. Actual addresses are available via `/interfaces/state` `GET` request\n\nCLI command: `ipv6 address dhcp`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_ipv6_address_dhcp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DHCP client started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/noip_address": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Remove static/DHCP IPv4 address of interface",
        "description": "Remove static/DHCP IPv4 address of interface\n\nCLI command: `no ip address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_noip_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/noipv6_address": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Remove static/DHCP IPv6 address of interface",
        "description": "Remove static/DHCP IPv6 address of interface\n\nCLI command: `no ipv6 address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_noipv6_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/queue_tx": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Set interface queue parameters",
        "description": "Set interface queue parameters. Actual parameters might be requested by `/interfaces/state` `GET` request\n\nCLI commands: `queue tx`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_queue_tx_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/reset_interface": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Reset interface configuration",
        "description": "Reset interface configuration\n\nCLI command: `reset interface`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_reset_interface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/common/reset_stats": {
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/common",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/loopback",
          "interfaces/vlan",
          "interfaces/wifi"
        ],
        "summary": "Reset interface statistics",
        "description": "Reset interface statistics\n\nCLI command: `reset stats`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_common_reset_stats_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ipv6_nd/config_iface": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "get ipv6_nd config overrides for specific interface",
        "description": "get config overrides for specific interface. \n\nCLI commands (for specific interface): `show running-config ospf`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ipv6_nd_config_iface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "set ipv6_nd config overrides for specific interface",
        "description": "set config overrides for specific interface\n\nCLI commands (in the interface mode): `[no] ipv6 nd current-hoplimit <UINT8_1>`, `[no] ipv6 nd dad attempts <UINT_0_600_1>`, `[no] ipv6 nd link-mtu <UINT_1280_65535_1>`, `[no] ipv6 nd managed-config-flag`, `[no] ipv6 nd minimum-ra-interval <RA_INTERVAL>`, `[no] ipv6 nd other-config-flag`, `[no] ipv6 nd prefix <ipv6_with_bit_prefix> [<one> <two> [off-link] [no-autoconfig]]`, `[no] ipv6 nd prefix no-autoconf`, `[no] ipv6 nd prefix offlink`, `[no] ipv6 nd prefix preferred-lifetime <UINT_0_4294967295_1>`, `[no] ipv6 nd prefix valid-lifetime <UINT_0_4294967295_1>`, `[no] ipv6 nd ra-interval <UINT_4_1800_1>`, `[no] ipv6 nd ra-lifetime <UINT_0_9000_1>`, `[no] ipv6 nd reachable-time <UINT_0_3600000_1>`, `[no] ipv6 nd retransmission-time <UINT_0_4294967295_1>`, `[no] ipv6 nd suppress-ra [mtu]`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ipv6_nd_config_iface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/config_iface": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "get ISIS config overrides for specific interface",
        "description": "get config overrides for specific interface. \n\nCLI commands (for specific interface): `show running-config isis`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_iface_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "set ISIS config overrides for specific interface",
        "description": "set config overrides for specific interface\n\nCLI commands (in the interface mode): `[no] ip router isis`, `[no] ipv6 router isis`, `[no] isis authentication key-chain`, `[no] isis authentication mode`, `[no] isis authentication send-only`, `[no] isis bfd`, `[no] isis circuit-type`, `[no] isis csnp-interval`, `[no] isis hello padding`, `[no] isis hello-interval`, `[no] isis hello-multiplier`, `[no] isis lsp-interval`, `[no] isis mesh-group`, `[no] isis mesh-group blocked`, `[no] isis metric`, `[no] isis network`, `[no] isis password`, `[no] isis priority`, `[no] isis restart-hello-interval`, `[no] isis retransmit-interval`, `[no] isis tag`, `[no] isis wide-metric`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_iface_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/config_iface": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "get LDP config overrides for specific interface",
        "description": "get config overrides for specific interface. \n\nCLI commands (for specific interface): `show running-config ldp`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_config_iface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "set LDP config overrides for specific interface",
        "description": "set config overrides for specific interface\n\nCLI commands (in the interface mode): `[no] ldp advertisement-mode`, `[no] ldp hello-interval`, `[no] ldp hold-time`, `[no] ldp keepalive-interval`, `[no] ldp keepalive-timeout`,`[no] ldp label-retention-mode`, `[no] ldp max-pdu-length`, `[no] ldp multicast-hellos`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_config_iface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/config_iface": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "get OSPF config overrides for specific interface",
        "description": "get config overrides for specific interface. \n\nCLI commands (for specific interface): `show running-config ospf`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          },
          {
            "name": "instanceID",
            "description": "OSPF instance ID",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_config_iface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "summary": "set OSPF config overrides for specific interface",
        "description": "set config overrides for specific interface\n\nCLI commands (in the interface mode): ",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_config_iface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/config_iface": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "description": "Get `RIP` interface settings. \n\nCLI commands: `show running-config rip`, `show ip rip interface`.",
        "summary": "`RIP` interface settings",
        "parameters": [
          {
            "name": "ifname",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_iface_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "description": "Set `RIP` interface settings. \n\nCLI commands: `[no] ip rip authentication key-chain`, `[no] ip rip authentication mode`, `[no] ip rip authentication string`, `[no] ip rip receive version`, `[no]  ip rip receive-packet`, `[no] ip rip send version`, `[no] ip rip send-packet`, `[no] ip rip split-horizon`, `[no] ip rip split-horizon poisoned`.",
        "summary": "Set `RIP` interface settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_iface_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/config_iface": {
      "get": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "description": "Get `IPv6 RIP` interface settings. \n\nCLI commands: `show running-config ripng`, `show ipv6 rip interface`.",
        "summary": "`IPv6 RIP` interface settings",
        "parameters": [
          {
            "name": "ifname",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ripng_iface_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bonding",
          "interfaces/bridge",
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/l2tp",
          "interfaces/loopback",
          "interfaces/tunnel",
          "interfaces/vlan"
        ],
        "description": "Set `IPv6 RIP` interface settings. \n\nCLI commands: `[no] ipv6 router rip`, `[no] ipv6 rip split-horizon`, `ipv6 rip split-horizon poisoned`, `[no] ipv6 rip metric-offset`.",
        "summary": "Set `IPv6 RIP` interface settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_iface_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bridge/add": {
      "post": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Add bridge interface",
        "description": "Add bridge interface\n\nCLI command: `interface br`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bridge_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bridge/capability": {
      "get": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Get bridge capabilities",
        "description": "Get bridge capabilities\n\nCLI commands: `show interfaces br`, `show running-config bridge`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_bridge_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_bridge_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Set bridge capabilities",
        "description": "Set bridge capabilities\n\nCLI commands: `include`, `exculde `,`priority`, `mode`,`max-mac-addresses`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bridge_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bridge/delete": {
      "post": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Delete bridge interface",
        "description": "Delete bridge interface\n\nCLI command: `no interface br`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bridge_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bridge/flush_fdb": {
      "post": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Flush FDB",
        "description": "Flush forwarding database for this interface\n\nCLI command: `flush-fdb`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bridge_flush_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FDB flushed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bridge/stp": {
      "get": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Get STP state",
        "description": "Show STP ports state for the bridge\n\nCLI commands: `show spanning-tree br`",
        "parameters": [
          {
            "name": "ifname",
            "description": "bridge name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_bridge_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_bridge_stp_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "enable/disable STP ",
        "description": "Enable/disable STP for the bridge\n\nCLI command: `spanning-tree on|off`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bridge_stp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bridge/stp/capability": {
      "post": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Set bridge STP capabilities",
        "description": "Set bridge STP capabilities\n\nCLI commands: `[no] spanning-tree priority`, `spanning-tree forward-delay`,`spanning-tree hello-time`, `spanning-tree max-age`, `[no] spanning-tree port` \n\nNote: The `port_name` should be selected from the list of included  interfaces returned by the `/interfaces/bridge/capability`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_bridge_stp_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/bridge/stp/show_mac_addresses": {
      "get": {
        "tags": [
          "interfaces/bridge"
        ],
        "summary": "Get list of learned MAC addresses",
        "description": "Show list of learned MAC addresses for this bridge\n\nCLI commands: `show spanning-tree br <number> mac-addresses`, `show spanning-tree br <number> mac-addresses count`",
        "parameters": [
          {
            "name": "ifname",
            "description": "bridge name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_bridge_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_bridge_stp_mac_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/eth_vlan/add": {
      "post": {
        "tags": [
          "interfaces/eth-vlan"
        ],
        "summary": "Add Ethernet VLAN subinterface",
        "description": "Add Ethernet VLAN subinterface\n\nCLI commands: `interface eth.nn`,`inner-vid`, `vid`\n\nNOTE: selected `vid` might be read by `GET` request `/interfaces/vlan_common/vid`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_eth_vlan_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/eth_vlan/delete": {
      "post": {
        "tags": [
          "interfaces/eth-vlan"
        ],
        "summary": "Delete Ethernet VLAN subinterface",
        "description": "Delete Ethernet VLAN subinterface\n\nCLI commands: `no interface eth.nn`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_eth_vlan_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface deleted  successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/vlan_common/egress_map": {
      "get": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/vlan",
          "interfaces/vlan_common"
        ],
        "summary": "Get egress QoS mapping",
        "description": "Get egress QoS mapping\n\nCLI commands: `show interfaces vlan`, `show running-config vlan`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_vlan_common_egress_map_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/vlan",
          "interfaces/vlan_common"
        ],
        "summary": "Set egress QoS mapping",
        "description": "Set egress QoS mapping\n\nCLI command: `egres-map`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_vlan_common_egress_map_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/vlan_common/ingress_map": {
      "get": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/vlan",
          "interfaces/vlan_common"
        ],
        "summary": "Get ingress QoS mapping",
        "description": "Get ingress QoS mapping\n\nCLI commands: `show interfaces vlan`, `show running-config vlan`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_vlan_common_ingress_map_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/vlan",
          "interfaces/vlan_common"
        ],
        "summary": "Set ingress QoS mapping",
        "description": "Set ingress QoS mapping\n\nCLI command: `igres-map`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_vlan_common_ingress_map_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/vlan_common/vid": {
      "get": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/vlan",
          "interfaces/vlan_common"
        ],
        "summary": "Get VID/inner VIDs",
        "description": "Get VID/inner VIDs\n\nCLI commands: `show interfaces vlan`, `show running-config vlan`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_vlan_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_vlan_common_vid_read"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/config_iface": {
      "get": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/switchport"
        ],
        "summary": "get LLDP config overrides for specific interface",
        "description": "get config overrides for specific interface. \n\nCLI commands (for specific interface): `show lldp`, `show running-config lldp`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_config_iface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/switchport"
        ],
        "summary": "set LLDP config overrides for specific interface",
        "description": "set config overrides for specific interface\n\nCLI commands (in the interface mode):`[no]lldp mode` , `[no]lldp agent-type`, `[no]lldp tlv-select dot3power`, `[no]lldp custom-tlv` , `[no]lldp portidsubtype`, `lldp enable`, `lldp disable`, `[no]lldp custom-tlv override-global`\n\nThis endpoint overrides the portion of settings defined in `/lldp/config` for specific interface. Generally all the settings are the same except for the `portidsubtype` which is confured differently.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_lldp_config_iface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/med_iface": {
      "get": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/switchport"
        ],
        "summary": "get LLDP-MED info specific interface",
        "description": "get MED info for specific interface.\n\nCLI commands (for specific interface): `show lldp`, `show running-config lldp`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_med_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/eth-vlan",
          "interfaces/ethernet",
          "interfaces/switchport"
        ],
        "summary": "set LLDP-MED info specific interface",
        "description": "set MED info for specific interface.\n\nCLI commands (in the interface mode): `[no]lldp med-tlv-select location address`, `[no]lldp med-tlv-select location coordinate`, `[no]lldp med-tlv-select location elin`, `[no]lldp med-tlv-select policy`, `[no]lldp med-tlv-select power`. \n\nThis endopoind is very similar to `/llpd/med` and is used in the interface configuration mode for eth , eth-vlan , switchport to override settings sent to the remote side via LLDP-MED from this specific interface",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_lldp_med_iface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/ethernet/blink": {
      "post": {
        "tags": [
          "interfaces/ethernet"
        ],
        "summary": "Blink by led",
        "description": "Blink by led\n\nCLI command: `blink`\n\nNOTE: this request might be failed if hardware does not support such function",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_ethernet_blink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/ethernet/capability": {
      "get": {
        "tags": [
          "interfaces/ethernet"
        ],
        "summary": "Get ethernet capabilities",
        "description": "Get ethernet capabilities\n\nCLI commands: `show interfaces ethn`, `show running-config ethernet`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_ethernet_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_ethernet_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/ethernet"
        ],
        "summary": "Set ethernet capabilities",
        "description": "Set ethernet capabilities\n\nCLI commands: `allmulti`, `autonegotiation`, `promiscuous`, `mac-address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_ethernet_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/loopback/add": {
      "post": {
        "tags": [
          "interfaces/loopback"
        ],
        "summary": "Add loopback interface",
        "description": "Add loopback interface\n\nCLI command: `interface lo`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_loopback_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/loopback/delete": {
      "post": {
        "tags": [
          "interfaces/loopback"
        ],
        "summary": "Delete loopback interface",
        "description": "Delete loopback interface\n\nCLI command: `no interface lo`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_loopback_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/capability": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Get switchport capabilities",
        "description": "Get switchport capabilities\n\nCLI commands: `show interfaces switchport`, `show running-config marvell`, `show port-security`, `show mac-address-table aging-time`, `show mac-address-table learn-limit`",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Set switchport capabilities",
        "description": "Set switchport capabilities\n\nCLI commands: `autonegotiation`, `mtu`, `igmp-snooping`, `mac-address-table aging-time`, `mac-address-table learn-limit`, `switchport port-security`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/igmp_multicast_groups": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Show IGMP/MLD multicast groups records",
        "description": "Show IGMP/MLD multicast groups records\n\nCLI command: `show igmp multicast groups`\n\nNOTE: IGMP snooping records might be changed indirectly by changing snooping control in `POST` `/interfaces/switchport/capability`. Also, web-application should poll this request periodically while browsing IGMP",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name (with common switchport CPU)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/switchport_cpu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_igmp_multicast_groups_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/igmp_snooping": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Show IGMP/MLD snooping control records",
        "description": "Show IGMP/MLD snooping control records\n\nCLI commands: `show igmp snooping`\n\nNOTE: IGMP snooping records might be changed indirectly by changing snooping control in `POST` `/interfaces/switchport/capability`. Also, web-application should poll this request periodically while browsing IGMP",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_igmp_snooping_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/mac_address_table": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Display MAC address table",
        "description": "Display MAC address table (with pagination)\n\nCLI command: `show mac-address-table`\n\nNOTE: in the web-application this request required to be polled periodically (say with interval 30-60 seconds) to update actual table of gathered addresses",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name, omit to display all",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/switchport_cpu"
            }
          },
          {
            "name": "vlan",
            "description": "VLAN ID, omit to display all",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VLAN_ID"
            }
          },
          {
            "name": "startidx",
            "description": "starting index (zero based), zero is default",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "pagesize",
            "description": "page size, 25 is default",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_mac_address_table_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/mac_address_table_acq": {
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Clear switchport acquired MAC address table",
        "description": "Clear switchport acquired MAC address table\n\nCLI command: `clear mac-address-table`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_mac_address_table_acq_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/mac_address_table_static": {
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Update switchport static MAC address table",
        "description": "Update switchport static MAC address table\n\nCLI command: `mac-address-table static`\n\nNOTE: this request allows to insert or delete static addresses but do not have direct control of their placement in the table",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_mac_address_table_static_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/mode": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Get switchport mode and VLAN",
        "description": "Get switchport mode and VLAN\n\nCLI commands: `show interfaces switchport`, `show running-config marvell`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_switchport_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_mode_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Set switchport mode and VLAN",
        "description": "Set switchport mode and VLAN\n\nCLI commands: `switchport mode access`, `switchport mode trunk`, `switchport access vlan`, `switchport trunk native vlan`, `switchport trunk allowed`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_mode_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/storm_control_counters": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Get storm control counters",
        "description": "Get storm control counters\n\nCLI command: `show storm-control cyclic-counters`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_switchport_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_storm_control_counters_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Manage storm control counters",
        "description": "Start/stop/clear storm control counters\n\nCLI commands: `storm-control cyclic-counters`, `clear storm-control cyclic-counters`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_storm_control_counters_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/vlandb": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Get switchport VLAN database",
        "description": "Get switchport VLAN database\n\nCLI commands: `show vlan`\n\nNOTE: some `POST` requests i.e. `/interfaces/switchport/capabilities`, `/interfaces/switchport/mode`, `/interfaces/switchport/mac-address-table-static`, `/interfaces/switchport/vlandb` may indirectly change the VLAN database, so this `GET` request may be needed either after those `POST` requests or to be polled periodically in the web-application",
        "parameters": [
          {
            "name": "vlan",
            "description": "VLAN ID list (i.e. 2,10-15,34)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VID_RANGE_LIST"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_vlandb_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "Manage switchport VLAN database",
        "description": "Manage switchport VLAN database\n\nCLI commands: `vlan`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_vlandb_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/AT/ppl": {
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "set PoE Pre-defined Power Limit (PPL)",
        "description": "set PoE Pre-defined Power Limit (0-30000 mW)\n\nCLI command: `[no] poe power-limit AT ppl <ppl_pl>`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_poe_AT_ppl_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/config_iface": {
      "get": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "get PoE config overrides for specific interface",
        "description": "get config overrides for specific interface. \n\nCLI commands: `show poe interfaces`, `show poe interfaces switchport <1-8>` `show running-config poe`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/interfaces_switchport_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_poe_config_iface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "modify PoE interfaces settings",
        "description": "modify PoE interfaces settings such as force power(on|off), priority(CRITICAL|HIGH|LOW) and operation mode(PoE|PoE+)\n\nCLI commands: `poe force power <on|off>`, `poe priority <val>`, `poe operation-mode <mode>`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_poe_ifaces_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/tppl": {
      "post": {
        "tags": [
          "interfaces/switchport"
        ],
        "summary": "set PoE Temporary Power Limit (TPPL)",
        "description": "set PoE Temporary Power Limit (0-300)\n\nCLI command: `poe power limit tppl <tppl_pl>`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_poe_tppl_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/capability": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Get switchport STP capabilities",
        "description": "Get switchport STP capabilities\n\nCLI commands: `show running-config spanning-tree`, `show spanning-tree`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Set switchport STP capabilities",
        "description": "Set switchport STP capabilities\n\nCLI commands: `spanning-tree bpdu-filter`, `spanning-tree bpdu-guard`, `spanning-tree cost`, `spanning-tree edge-port`, `spanning-tree forward-delay`, `spanning-tree hello-time`, `spanning-tree link-type`, `spanning-tree max-age`, `spanning-tree priority`,`spanning-tree restrict-root`, `spanning-tree transmit-hold-count`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_stp_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/mode": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Get STP running state and mode",
        "description": "Get STP running state and mode\n\nCLI commands: `show running-config spanning-tree`, `show spanning-tree`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_mode_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Run STP",
        "description": "Start/stop STP and configure its mode\n\nCLI commands: `spanning-tree on`, `spanning-tree off`, `spanning-tree mode`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_stp_mode_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/mst": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Get MSTI parameters",
        "description": "Get MSTI parameters (for MSTP mode only): \n\nCLI commands: `show running-config spanning-tree`, `show spanning-tree mst`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_msti_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Update MSTI parameters",
        "description": "Update MSTI parameters (for MSTP mode only)\n\nCLI command: `spanning-tree mst`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_switchport_stp_msti_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/show": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Display STP configuration/state for given interface",
        "description": "Display STP configuration/state for given interface as a log\n\nCLI commands: `show spanning-tree interface`, `show spanning-tree interfaces`\n\nNOTE: This command will be failed if STP is not running yet, see `GET` `/interfaces/switchport/stp/mode`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/interfaces_switchport_ifname"
            }
          },
          {
            "name": "detail",
            "description": "show detailed information",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/show_mst": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Display MSTI state for given interface",
        "description": "Display MSTI state for given interface as a log. \n\nCLI command: `show spanning-tree mst interface`\n\nNOTE: This command requres STP running in MSTP mode, otherwise it will be failed, see `GET` `/interfaces/switchport/stp/mode`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_switchport_ifname"
            }
          },
          {
            "name": "instance",
            "description": "show detailed information for specific instance. Use one from the list of instances returned by `/interfaces/switchport/stp/mst`",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/switchport_mstiex",
              "description": "MST instance number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_show_mst_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/show_msti": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Display MST instance configuration and state",
        "description": "Display MST instance configuration and state as a log\n\nCLI command: `show spanning-tree mst instance`\n\nNOTE: This command requres STP running in MSTP mode, otherwise it will be failed, see `GET` `/interfaces/switchport/stp/mode`",
        "parameters": [
          {
            "name": "instance",
            "description": "show detailed information for specific instance. Use one from the list of instances returned by `/interfaces/switchport/stp/mst`",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/switchport_mstiex",
              "description": "MST instance number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_show_msti_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/show_mstp": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Display MST protocol configuration",
        "description": "Display MST protocol configuration as a log\n\nCLI command: `show spanning-tree mst`\n\nNOTE: This command will be failed if STP is not running yet, see `GET` `/interfaces/switchport/stp/mode`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_show_mstp_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/switchport/stp/show_stp": {
      "get": {
        "tags": [
          "interfaces/switchport/stp"
        ],
        "summary": "Display STP configuration/state",
        "description": "Display STP configuration/state as a log\n\nCLI command: `show spanning-tree`\n\nNOTE: This command will be failed if STP is not running yet, see `GET` `/interfaces/switchport/stp/mode`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_switchport_stp_show_stp_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/tunnel/add": {
      "post": {
        "tags": [
          "interfaces/tunnel"
        ],
        "summary": "Add tunnel interface",
        "description": "Add tunnel interface\n\nCLI commands: `interface tunnel`, `tunnel source ... [destination] ...`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_tunnel_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/tunnel/capability": {
      "get": {
        "tags": [
          "interfaces/tunnel"
        ],
        "summary": "Get tunnel capabilities",
        "description": "Get tunnel capabilities (unique properties of tunnel interfaces)\n\nCLI commands: part of `show interfaces tunnel`",
        "parameters": [
          {
            "name": "ifname",
            "description": "tunnel name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_tunnel_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_tunnel_capability_read"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/tunnel/delete": {
      "post": {
        "tags": [
          "interfaces/tunnel"
        ],
        "summary": "Delete tunnel interface",
        "description": "Delete tunnel interface\n\nCLI command: `no interface tunnel`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_tunnel_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/tunnel/ip_address": {
      "post": {
        "tags": [
          "interfaces/tunnel"
        ],
        "summary": "Set static IPv4 address",
        "description": "Set static IPv4 address on tunnel interface with optional peer address.\n\nCLI command: `ip address` in tunnel shell",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tunnel_ip_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Static address set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/tunnel/multicast": {
      "post": {
        "tags": [
          "interfaces/tunnel"
        ],
        "summary": "Turn multicast on/off",
        "description": "Turn multicast on/off for a tunnel. Multicast is turned `off` by default.\n\nCLI commands: `[no] ip multicast`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tunnel_multicast_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Multicast set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/tunnel/ttl": {
      "post": {
        "tags": [
          "interfaces/tunnel"
        ],
        "summary": "Set/reset TTL",
        "description": "Set Time To Live (TTL) for a tunnel. Pass `'ttl': null` to reset it to default - `inherit` from the physical interface.\n\nCLI commands: `[no] ip ttl`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tunnel_ttl_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TTL set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/vlan/add": {
      "post": {
        "tags": [
          "interfaces/vlan"
        ],
        "summary": "Add switchport VLAN interface",
        "description": "Add switchport VLAN interface\n\nCLI command: `interface vlan`\n\nNOTE: selected `vid` might be read by `GET` request `/interfaces/vlan_common/vid`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_vlan_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/vlan/delete": {
      "post": {
        "tags": [
          "interfaces/vlan"
        ],
        "summary": "Delete switchport VLAN interface",
        "description": "Delete switchport VLAN interface\n\nCLI command: `no interface vlan`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_vlan_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface deleted  successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/wifi/add": {
      "post": {
        "tags": [
          "interfaces/wifi"
        ],
        "summary": "Add wifi interface",
        "description": "Add wifi interface\n\nCLI command: `interface wlan`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_wifi_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/wifi/capability": {
      "get": {
        "tags": [
          "interfaces/wifi"
        ],
        "summary": "Get wifi capabilities",
        "description": "Get wifi capabilities\n\nCLI commands: `show interfaces wlan`, `show running-config wifi`",
        "parameters": [
          {
            "name": "ifname",
            "description": "interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/interfaces_wifi_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_wifi_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "interfaces/wifi"
        ],
        "summary": "Set wifi capabilities",
        "description": "Set wifi capabilities\n\nCLI commands: `band`, `channel`, `encryption`, `hide-ssid`, `ht_capability`, `ssid`, `wep`, `wpa`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_wifi_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/wifi/delete": {
      "post": {
        "tags": [
          "interfaces/wifi"
        ],
        "summary": "Delete wifi interface",
        "description": "Delete wifi interface\n\nCLI command: `no interface wlan`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_interfaces_wifi_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interface deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/interfaces/wifi/phy": {
      "get": {
        "tags": [
          "interfaces/wifi"
        ],
        "summary": "Get WiFi PHY",
        "description": "Get WiFi PHY interfaces confuguration\n\nCLI commands: `show interfaces wlan phy`",
        "parameters": [
          {
            "name": "vrf_name",
            "description": "VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF",
              "description": "VRF name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_interfaces_wifi_phy_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get `ISIS` status. \n\nCLI commands: `show isis protocol`.",
        "summary": "Get `ISIS` status",
        "parameters": [
          {
            "name": "vrf",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_status_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Initiate/Remove `ISIS` routing instance. \n\nCLI commands: `[no] router isis`",
        "summary": "Initiate/Remove `ISIS` instance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_status_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/af_ipv6_config": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get `IPv6 Address Family` settings. \n\nCLI commands: `show isis protocols`, `show running-config isis`, `show ip isis`.",
        "summary": "Get `IPv6 Address Family` settings",
        "parameters": [
          {
            "name": "isis_tag",
            "description": "IS-IS router instance name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_af_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Set `IPv6 Address Family` settings. \n\nCLI commands: `address-family ipv6`, `[no] adjacency-check`, `[no] distance`, `[no] default-information originate`, `[no] redistribute isis`, `[no] summary-prefix`, `[no] multi-topology`",
        "summary": "Set `IPv6 Address Family` settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_af_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/af_ipv6_default": {
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Remove `ISIS` IPv6 Address Family. \n\nCLI commands: `[no] address-family ipv6`",
        "summary": "Remove Address Family configuration for IPv6",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_af_reset_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/clear": {
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Clear IS-IS IPv4 routes, adjacency and processes\n\nCLI commands: `clear ip isis`, `clear ipv6 isis`, `clear isis`, `clear isis adjacency`, `clear isis counter`, `clear isis interface counter`.",
        "summary": "Clear IS-IS IPv4 routes, adjacency and processes",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_clear_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/config": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get `ISIS` settings. \n\nCLI commands: `show isis protocols`, `show running-config isis`, `show ip isis`.",
        "summary": "Get `ISIS` settings",
        "parameters": [
          {
            "name": "isis_tag",
            "description": "IS-IS router instance name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Set `ISIS` settings. \n\nCLI commands: `[no] authentication key-chain`, `[no] authentication mode`, `[no] is-type`, `[no] authentication send-only`, `[no] bfd all-interfaces`, `[no] capability cspf`, `[no] area-password`, `[no] domain-password`, `[no] dynamic-hostname`, `[no] ip route high-priority tag`, `[no] ignore-lsp-errors`, `[no] default-information originate`, `[no] isis wait-timer`, `[no] ispf`, `[no] lsp-gen-interval`, `[no] lsp-mtu`, `[no] lsp-refresh-interval`, `[no] max-area-address`, `[no] max-lsp-lifetime`, `[no] metric-style`, `[no] mpls traffic-eng`, `[no] mpls traffic-eng router-id`, `[no] prc-interval-exp`, `[no] protocol-topology`, `[no] restart-timer`, `[no] set-overload-bit`, `[no] spf-interval-exp` ",
        "summary": "Set `ISIS` settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/debug": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "summary": "get ISIS debugging features",
        "description": "get ISIS debugging features\n\nCLI commands: `show debugging isis`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_debug_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "summary": "set ISIS debugging",
        "description": "set ISIS debugging\n\nCLI commands:`[no] debug isis`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_debug_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/distance": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get list of IS-IS Administrative Distance. \n\nCLI commands: `show running-config isis`, `show ip isis`.",
        "summary": "Get list of IS-IS Administrative Distance",
        "parameters": [
          {
            "name": "isis_tag",
            "description": "IS-IS router instance name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_distance_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Set IS-IS Administrative Distance\n\nCLI command: `[no] distance`",
        "summary": "Set IS-IS Administrative Distance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_distance_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/graceful_restart": {
      "post": {
        "tags": [
          "ISIS"
        ],
        "summary": "Graceful Restart of IS-IS router",
        "description": "Graceful Restart of IS-IS router\n\nCLI command:`restart isis graceful`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_graceful_restart_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/net": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get `ISIS` Network Entity Title. \n\nCLI commands: `show running-config isis`, `show ip isis`.",
        "summary": "Get `ISIS` Network Entity Title",
        "parameters": [
          {
            "name": "isis_tag",
            "description": "IS-IS router instance name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_net_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Set/Remove Network Entity Title\n\nCLI command: `[no] net`",
        "summary": "Set/Remove Network Entity Title",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_net_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/passive_interface": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get list of `ISIS`Passive interfaces. \n\nCLI commands: `show running-config isis`, `show ip isis`.",
        "summary": "Get list of `ISIS`Passive interfaces",
        "parameters": [
          {
            "name": "isis_tag",
            "description": "IS-IS router instance name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_passive_interface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Suppress routing updates on an interface or on all interfaces\n\nCLI command: `[no] passive-interface`",
        "summary": "Suppress routing updates on an interface or on all interfaces",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_passive_interface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/redistribute": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get `ISIS` Redistribute information. \n\nCLI commands: `show running-config isis`, `show ip isis`.",
        "summary": "Get `ISIS` Redistribute information",
        "parameters": [
          {
            "name": "isis_tag",
            "description": "IS-IS router instance name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_redistribute_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Redistribute information from another routing protocol\n\nCLI command: `[no] redistribute`, `[no] redistribute isis`",
        "summary": "Redistribute information from another routing protocols",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_redistribute_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/restart": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "summary": "get Restart IS-IS Signaling settings",
        "description": "get ISIS Restart settings\n\nCLI commands: `show running-config dynamic-routing-imi`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_restart_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "summary": "set Restart IS-IS Signaling settings",
        "description": "set ISIS Restart settings\n\nCLI commands:`[no] isis restart grace-period`, `[no] isis restart helper`, `[no] isis restart suppress-adjacency`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_restart_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_clns": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show CLNS routing protocol process information. \n\nCLI command: `show isis protocol`",
        "summary": "Show CLNS routing protocol process information",
        "parameters": [
          {
            "name": "area_tag",
            "description": "Routing area tag",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_counters": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show `IS-IS` counters. \n\nCLI commands: `show isis counter`, `show isis interface counter`",
        "summary": "Show `IS-IS` counters",
        "parameters": [
          {
            "name": "counters_type",
            "description": "System counters or interface counters",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "system",
                "interface"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_database": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show detailed link state database information. \n\nCLI commands: `show isis database`, `show isis`",
        "summary": "Show `IS-IS` database",
        "parameters": [
          {
            "name": "area_tag",
            "description": "Routing area tag",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "database_level",
            "description": "Database level",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "level-1",
                "level-2"
              ]
            }
          },
          {
            "name": "lspid",
            "description": "LSPID in the form of xxxx.xxxx.xxxx.xx-xx",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LSP_ID"
            }
          },
          {
            "name": "detail_level",
            "description": "Level of detail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "verbose",
                "detail"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_database_hostname": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show detailed link state database information by hostname. \n\nCLI commands: `show isis database <level> hostname`, `show isis`",
        "summary": "Show `IS-IS` database by hostname",
        "parameters": [
          {
            "name": "area_tag",
            "description": "Routing area tag",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "hostname",
            "description": "Associated hostname",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "database_level",
            "description": "Database level",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "level-1",
                "level-2"
              ]
            }
          },
          {
            "name": "detail_level",
            "description": "Level of detail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "verbose",
                "detail"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_hostname": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show hosts with their System ID. \n\nCLI commands: `show isis hostname`, `show ipv6 isis hostname`",
        "summary": "Show `IS-IS` hosts",
        "parameters": [
          {
            "name": "ip_type",
            "description": "ipv4 or ipv6",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ipv4",
                "ipv6"
              ]
            }
          },
          {
            "name": "hostname",
            "description": "Display this hostname. If missing - display all hostnames",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_igmp_shortcut": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show `IS-IS IGP` shortcut LSP entries and routing table. \n\nCLI command: `show ip isis`",
        "summary": "Show `IS-IS` routes",
        "parameters": [
          {
            "name": "area_tag",
            "description": "Routing area tag",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "data_type",
            "description": "LSP entries or routing table",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "lsp",
                "routes"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_interfaces": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show `IS-IS`Interface information. \n\nCLI command: `show isis interface`",
        "summary": "Show `IS-IS` interfaces",
        "parameters": [
          {
            "name": "ifname",
            "description": "Interface name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_neighbors": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show neighbor adjacencies. \n\nCLI commands: `show isis neighbors`,  `show isis is-neighbors`, `show isis`",
        "summary": "Show `IS-IS` neighbors",
        "parameters": [
          {
            "name": "area_tag",
            "description": "Routing area tag",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "neighbor_type",
            "description": "CLNS or IS",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "clns",
                "is"
              ]
            }
          },
          {
            "name": "ifname",
            "description": "Show information about a single interface",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          },
          {
            "name": "detail",
            "description": "Show detailed information",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_protocols": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show `IS-IS` parameters and statistics. \n\nCLI commands: `show ip protocols isis`, `show ipv6 protocols isis`.",
        "summary": "Get `IS-IS` parameters ans statistics",
        "parameters": [
          {
            "name": "ip_type",
            "description": "ipv4 or ipv6",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_routes": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show `IS-IS` routing table. \n\nCLI commands: `show ip isis`, `show ipv6 isis`",
        "summary": "Show `IS-IS` routes",
        "parameters": [
          {
            "name": "area_tag",
            "description": "Routing area tag",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "ip_type",
            "description": "ipv4 or ipv6",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/show_topology": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Show `IS-IS` topology. \n\nCLI commands: `show isis topology`, `show ipv6 isis topology`, `show isis`, `show ipv6 isis`",
        "summary": "Show `IS-IS` topology",
        "parameters": [
          {
            "name": "area_tag",
            "description": "Routing area tag",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "ip_type",
            "description": "ipv4 or ipv6",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ipv4",
                "ipv6"
              ]
            }
          },
          {
            "name": "topology_level",
            "description": "Topology level",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "level-1",
                "level-2"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/isis/summary_address": {
      "get": {
        "tags": [
          "ISIS"
        ],
        "description": "Get list of `ISIS` IP address summaries. \n\nCLI commands: `show running-config isis`, `show ip isis`.",
        "summary": "Get list of `ISIS` IP address summaries",
        "parameters": [
          {
            "name": "isis_tag",
            "description": "IS-IS router instance name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_isis_summary_addr_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ISIS"
        ],
        "description": "Configure IP address summaries\n\nCLI command: `[no] summary-address`",
        "summary": "Configure IP address summaries",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_isis_summary_addr_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/keychain": {
      "post": {
        "tags": [
          "KEYCHAIN"
        ],
        "summary": "Keychain",
        "description": "Add/Delete key chain\n\nCLI command:`[no] key chain`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_keychain_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/keychain/key": {
      "post": {
        "tags": [
          "KEYCHAIN"
        ],
        "summary": "Configure Key",
        "description": "Set key settings\n\nCLI commands: `[no] key`, `[no] key-string`, `[no] send-lifetime`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_key_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/keychain/settings": {
      "get": {
        "tags": [
          "KEYCHAIN"
        ],
        "summary": "get keychain settings",
        "description": "get keychain settings\n\nCLI commands: `show running-config dynamic-routing-imi`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_keychain_read"
                }
              }
            }
          }
        }
      }
    },
    "/l2/acl": {
      "get": {
        "tags": [
          "l2"
        ],
        "summary": "get L2 ACL rules",
        "description": "get L2 ACL rules\n\nCLI commands: `show running-config l2-access-control-list`, `show l2 access-list`",
        "parameters": [
          {
            "name": "acl",
            "description": "Specify the ACL name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ACL_NAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_l2_acl_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "l2"
        ],
        "summary": "Change L2 ACL rule",
        "description": "Change L2 ACL rule\n\nCLI commands: `[no] l2 access-list`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_l2_acl_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/l2/list": {
      "get": {
        "tags": [
          "l2"
        ],
        "summary": "get list of L2 ACLs",
        "description": "get list of L2 ACLs\n\nCLI commands: `show running-config l2-access-control-list`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_l2_acl_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/l2/filter/filter": {
      "get": {
        "tags": [
          "l2/filter"
        ],
        "summary": "get L2 ACL filters",
        "description": "get L2 ACL filters\n\nCLI commands: `show running-config l2-filtering`, `show l2 filter`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_l2_filter_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "l2/filter"
        ],
        "summary": "Change L2 ACL filter",
        "description": "Change L2 ACL filter\n\nCLI commands: `[no] l2 filter`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_l2_filter_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/l2/filter/show_ebtables": {
      "get": {
        "tags": [
          "l2/filter"
        ],
        "summary": "display ebtables for filters",
        "description": "display ebtables and statistics for filters\n\nCLI commands: `show l2 filter`",
        "parameters": [
          {
            "name": "chain",
            "description": "Specify the chain name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BASIC_CHAIN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_l2_show_ebtables_read"
                }
              }
            }
          }
        }
      }
    },
    "/l2/mangle/mangle": {
      "get": {
        "tags": [
          "l2/mangle"
        ],
        "summary": "get L2 ACL mangle lists",
        "description": "get L2 ACL mangle lists\n\nCLI commands: `show running-config l2-mangle-list`, `show l2 mangle-list`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_l2_mangle_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "l2/mangle"
        ],
        "summary": "Change L2 ACL mangle lists",
        "description": "Change L2 ACL mangle lists\n\nCLI commands: `[no] l2 mangle-list`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_l2_mangle_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/l2/mangle/show_ebtables": {
      "get": {
        "tags": [
          "l2/mangle"
        ],
        "summary": "display ebtables for mangle lists",
        "description": "display ebtables and statistics for mangle lists\n\nCLI commands: `show l2 mangle-list`",
        "parameters": [
          {
            "name": "chain",
            "description": "Specify the chain name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/NAT_CHAIN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_l2_show_ebtables_read"
                }
              }
            }
          }
        }
      }
    },
    "/ldp": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP status",
        "description": "get LDP status\n\nCLI commands: `show running-config ldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "change LDP status",
        "description": "change LDP status\n\nCLI commands: `[no] router ldp`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/clear": {
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "clear LDP sessions/adjacency/statistics",
        "description": "clear LDP sessions/adjacency/statistics\n\nCLI commands: `clear ldp statistics`, `clear ldp session`, `clear ldp adjacency`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_clear_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/config": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP config",
        "description": "get LDP config\n\nCLI commands: `show running-config ldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "set LDP config",
        "description": "set config\n\nCLI commands (from `router ldp` mode):`[no] advertisement-mode`, `[no] router-id`, `[no] keepalive-interval`, `[no] keepalive-timeout`, `[no] multicast-hellos`, `[no] graceful-restart`, `[no] loop-detection`, `[no] loop-detection-path-vec-count`, `[no] loop-detection-hop-count`, `[no] global-merge-capability`, `[no] explicit-null`, `[no] propagate-release`, `[no] targeted-peer-hello-interval`, `[no] targeted-peer-hold-time`, `[no] hello-interval`, `[no] hold-time`, `[no] pw-status-tlv`, `[no] label-retention-mode`, `[no] control-mode`, `[no] request-retry-timeout`, `[no] request-retry`, `[no] ldp-optimization`, `[no] inter-area-lsp`, `[no] label-withdraw-delay`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/debug": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP debugging features",
        "description": "get LDP debugging features\n\nCLI commands: `show debugging ldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_debug_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "set LDP debugging",
        "description": "set LDP debugging\n\nCLI commands:`[no] debug ldp`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_debug_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/graceful_restart": {
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "restart LDP daemon",
        "description": "restart LDP daemon\n\nCLI commands: `restart ldp graceful`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_restart_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/iface_list": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get list of LDP interface configs",
        "description": "get list of LDP interface configs",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_iface_list"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/labels": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP config for labels",
        "description": "get LDP config for receive/advertise labels\n\nCLI commands: `show running-config ldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_labels_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "set LDP receive/advertise labels config",
        "description": "set LDP receive/advertise labels config\n\nCLI commands (from `router ldp` mode):`[no] receive-labels`, `[no] advertise-labels`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_labels_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/neighbors": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP config for neighbors",
        "description": "get LDP config for neighbors\n\nCLI commands: `show running-config ldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_neighbors_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "set LDP neighbors config",
        "description": "set LDP neighbors config\n\nCLI commands (from `router ldp` mode):`[no] neighbor`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_neighbors_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/show": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP information and statistics",
        "description": "get LDP information and statistics\n\nCLI commands: `show ldp`, `show ldp statistics`, `show ldp statistics advertise-labels`, `show ldp statistics receive-labels`, `show ldp adjacency`, `show ldp graceful-restart`, `show ldp advertise-labels`, `show ldp receive-labels`, `show ldp inter-area-fecs`, `show ldp fec prefix`, `show ldp fec`, `show ldp fec-ipv4 count`, `show ldp upstream`, `show ldp downstream`, `show debugging ldp`, `show ldp igp sync`, `show ldp routes`, `show ldp targeted-peers`, `show ldp targeted-peer count`, `show ldp lsp`, `show ldp lsp detail`, `show ldp lsp host`, `show ldp lsp prefix`, `show ldp lsp prefix detail`",
        "parameters": [
          {
            "name": "param",
            "description": "show parameters (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ldp_show_type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/show_interface": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "show LDP configuration settings for interfaces",
        "description": "get LDP config for interfaces\n\nCLI commands: `show ldp interface`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/show_mpls_l2_circuit": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP information and statistics for MPLS L2 circuits",
        "description": "get LDP information and statistics for MPLS L2 circuits\n\nCLI commands: `show ldp mpls-l2-circuit`, `show ldp mpls-l2-circuit count`, `show ldp mpls-l2-circuit detail`\n\nNOTE:\n\nsome parameters combinations are not available. Exact list is below:\n- no parameters\n- `count_detail`=count\n- `count_detail`=detail\n- `vc`=<1-4294967295>\n- `count_detail`=detail `vc`=<1-4294967295>\n",
        "parameters": [
          {
            "name": "count_detail",
            "description": "count or detail (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ldp_count_detail"
            }
          },
          {
            "name": "vc",
            "description": "virtual circuit ID (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_4294967295"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/show_mspw": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get basic LDP attributes defined for the current LSR",
        "description": "get basic LDP attributes defined for the current LSR\n\nCLI commands: `show ldp ms-pw`",
        "parameters": [
          {
            "name": "name",
            "description": "Multi-Segment pseudowire name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/WORD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/show_session": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP session info",
        "description": "get LDP session info\n\nCLI commands: `show ldp session`, `show ldp session count`",
        "parameters": [
          {
            "name": "count",
            "description": "count (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ldp_count"
            }
          },
          {
            "name": "ip",
            "description": "IPv4/IPv6 address (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IPV4_IPV6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/show_vpls": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP information and statistics for VPLS",
        "description": "get LDP information and statistics for VPLS\n\nCLI commands: `show ldp vpls`, `show ldp vpls detail`, `show ldp vpls no-vc`, `show ldp vpls count`\n\nNOTE:\n\nsome parameters combinations are not available. Exact list is below:\n- no parameters\n- `count_detail_novc`=count\n- `count_detail_novc`=detail\n- `count_detail_novc`=no-vc\n- `vpls`=<1-4294967295>\n- `count_detail_novc`=count `vpls`=<1-4294967295>",
        "parameters": [
          {
            "name": "count_detail_novc",
            "description": "count, detail or no-vc (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ldp_count_detail_novc"
            }
          },
          {
            "name": "vpls",
            "description": "VPLS ID (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT_1_4294967295"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/targeted_peers": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP config for targeted peers",
        "description": "get LDP config for targeted peers\n\nCLI commands: `show running-config ldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_targeted_peers_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "set LDP config for targeted peers",
        "description": "set LDP config for targeted peers\n\nCLI commands (from `router ldp` mode):`[no] targeted-peer`; (from `targeted-peer` mode): `[no] hello-interval`, `[no] hold-time`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_targeted_peers_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ldp/transport_addresses": {
      "get": {
        "tags": [
          "ldp"
        ],
        "summary": "get LDP config for transport addresses",
        "description": "get LDP config for transport addresses\n\nCLI commands: `show running-config ldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ldp_transport_addresses_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ldp"
        ],
        "summary": "set LDP config for transport addresses",
        "description": "set LDP config for transport addresses\n\nCLI commands (from `router ldp` mode):`[no] transport-address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ldp_transport_addresses_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/chassis": {
      "get": {
        "tags": [
          "lldp"
        ],
        "summary": "get LLDP chassis info",
        "description": "get chassis info.\n\nCLI command: `show lldp chassis`.\n\nNOTE: information from this endpoint is available only if LLDP is already running",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_info_read"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/config": {
      "get": {
        "tags": [
          "lldp"
        ],
        "summary": "get LLDP config",
        "description": "get config\n\nCLI commands: `show lldp`, `show running-config lldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "lldp"
        ],
        "summary": "set LLDP config",
        "description": "set config\n\nCLI commands:`lldp on`, `lldp off`, `[no]lldp system-capabilities`, `[no]lldp tlv-select system-capabilities`, `[no]lldp description`, `[no]lldp chassisid`, `[no]lldp timer`, `[no]lldp holdtime`, `[no]lldp hostname`, `[no]lldp management-address`, `[no]lldp med-inventory`, `[no] lldp snmp`, `[no]lldp med fast-start`, `[no]lldp vlan`, `[no]lldp mode` , `[no]lldp agent-type`, `[no]lldp tlv-select dot3power`, `[no]lldp portidsubtype`, `[no]lldp tlv-select management-address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_lldp_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/configuration": {
      "get": {
        "tags": [
          "lldp"
        ],
        "summary": "get LLDP configuration info",
        "description": "get LLDP configuration info..\n\nCLI command: `show lldp configuration`.\n\nNOTE: information from this endpoint is available only if LLDP is already running",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_info_read"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/interfaces": {
      "get": {
        "tags": [
          "lldp"
        ],
        "summary": "get list of LLDP capable interfaces",
        "description": "returns a list of LLDP capable interfaces.\n\nNo CLI commands equivalent, but this list is available in `Tab` hints",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_interfaces_read"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/med": {
      "get": {
        "tags": [
          "lldp"
        ],
        "summary": "get LLDP-MED info",
        "description": "get MED info.\n\nCLI commands: `show lldp`, `show running-config lldp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_med_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "lldp"
        ],
        "summary": "set LLDP-MED info",
        "description": "set MED info.\n\nCLI commands: `[no]lldp med-tlv-select location address`, `[no]lldp med-tlv-select location coordinate`, `[no]lldp med-tlv-select location elin`, `[no]lldp med-tlv-select policy`, `[no]lldp med-tlv-select power`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_lldp_med_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/neighbors": {
      "get": {
        "tags": [
          "lldp"
        ],
        "summary": "get LLDP neighbor info",
        "description": "get neighbor info.\n\nCLI command: `show lldp neighbors`.\n\nNOTE: information from this endpoint is available only if LLDP is already running",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/interfaces_common_ifname"
            }
          },
          {
            "name": "details",
            "description": "show detailed info",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_info_read"
                }
              }
            }
          }
        }
      }
    },
    "/lldp/statistics": {
      "get": {
        "tags": [
          "lldp"
        ],
        "summary": "get LLDP statistics",
        "description": "get LLDP statistics.\n\nCLI command: `show lldp statistics`.\n\nNOTE: information from this endpoint is available only if LLDP is already running",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_lldp_info_read"
                }
              }
            }
          }
        }
      }
    },
    "/log/capabilities": {
      "get": {
        "tags": [
          "log"
        ],
        "summary": "get log capabilities",
        "description": "get log capabilities\n\nCLI commands: `show log syslog facilities`,`show log daemon level`,`show running-config access-violation-log`, `show running-config history`, `show running-config daemon-log`, `show running-config snortlog-reader`, `show running-config pppoelog-reader`, `show running-config pptplog-reader`, `show running-config system-integrity-log`, `show running-config webback-log`, `show running-config pim-ipv4-log-reader`, `show running-config pim-ipv6-log-reader`, `show running-config openvpnlog-reader`, `show running-config access-list-reader`",
        "parameters": [
          {
            "name": "log_type",
            "description": "Specify the log type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/log_type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_log_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "log"
        ],
        "summary": "set log capabilities",
        "description": "Set logging capabilities\n\nCLI commands: `log syslog`, `log kernel`, `log daemon`, `log ip pim`, `log ipv6 pim`, `log pppoe-server`, `log pptp-server`, `log snort`, `log vpn`, `log authentication`, `log command-history`, `log webback`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_log_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/log/clear": {
      "post": {
        "tags": [
          "log"
        ],
        "summary": "clear logs",
        "description": "Clear logs\n\nCLI command: `clear log`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_log_clear_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/log/copy": {
      "get": {
        "tags": [
          "log"
        ],
        "summary": "get results of copying the log file",
        "description": "get results of copying the logs\n\nCLI command: `copy log`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_log_script_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "log"
        ],
        "summary": "copy logs to specific location",
        "description": "Copy logs to specific location\n\nCLI command: `copy log`\n\n This command actually run the script and result of copying the log will be read asynchronously by `GET` request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_log_copy_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/log/show": {
      "get": {
        "tags": [
          "log"
        ],
        "summary": "get results of showing the log file",
        "description": "get results of showing the logs\n\nCLI command: `show log`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_log_script_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "log"
        ],
        "summary": "display logs",
        "description": "Display logs\n\nCLI command: `show log`\n\n This command actually run the script and result of displaying the log will be read asynchronously by `GET` request.\n\nCommand actually displays last (up to 1000) lines and may format somehow the output. To get full content of logs, use `/log/copy` requests",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_log_show_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/mpls/acl": {
      "get": {
        "tags": [
          "mpls"
        ],
        "summary": "get MPLS ACL rules",
        "description": "get MPLS ACL rules\n\nCLI commands: `show running-config mpls-access-control-list`, `show mpls access-list`",
        "parameters": [
          {
            "name": "acl",
            "description": "Specify the ACL name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ACL_NAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_mpls_acl_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "mpls"
        ],
        "summary": "Change MPLS ACL rule",
        "description": "Change MPLS ACL rule\n\nCLI commands: `[no] mpls access-list`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_mpls_acl_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/mpls/list": {
      "get": {
        "tags": [
          "mpls"
        ],
        "summary": "get list of MPLS ACLs",
        "description": "get list of MPLS ACLs\n\nCLI commands: `show running-config mpls-access-control-list`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_mpls_acl_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/mpls/filter/filter": {
      "get": {
        "tags": [
          "mpls/filter"
        ],
        "summary": "get MPLS ACL filters",
        "description": "get MPLS ACL filters\n\nCLI commands: `show running-config mpls-filtering`, `show mpls filter`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_mpls_filter_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "mpls/filter"
        ],
        "summary": "Change MPLS ACL filter",
        "description": "Change MPLS ACL filter\n\nCLI commands: `[no] mpls filter`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_mpls_filter_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/mpls/filter/show_ebtables": {
      "get": {
        "tags": [
          "mpls/filter"
        ],
        "summary": "display ebtables for filters",
        "description": "display ebtables and statistics for filters\n\nCLI commands: `show mpls filter`",
        "parameters": [
          {
            "name": "chain",
            "description": "Specify the chain name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MPLS_CHAIN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_mpls_show_ebtables_read"
                }
              }
            }
          }
        }
      }
    },
    "/mpls/mangle/mangle": {
      "get": {
        "tags": [
          "mpls/mangle"
        ],
        "summary": "get MPLS ACL mangle lists",
        "description": "get MPLS ACL mangle lists\n\nCLI commands: `show running-config mpls-mangle-list`, `show mpls mangle-list`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_mpls_mangle_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "mpls/mangle"
        ],
        "summary": "Change MPLS ACL mangle lists",
        "description": "Change MPLS ACL mangle lists\n\nCLI commands: `[no] mpls mangle-list`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_mpls_mangle_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/mpls/mangle/show_ebtables": {
      "get": {
        "tags": [
          "mpls/mangle"
        ],
        "summary": "display ebtables for mangle lists",
        "description": "display ebtables and statistics for mangle lists\n\nCLI commands: `show mpls mangle-list`",
        "parameters": [
          {
            "name": "chain",
            "description": "Specify the chain name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MPLS_CHAIN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_mpls_show_ebtables_read"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/configuration": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP configuration file",
        "description": "get NTP configuration file. \n\nCLI command: `show ntp configuration`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_configuration_read"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/dhcp": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP DHCP settings",
        "description": "get NTP DHCP settings\n\nCLI commands: `show ntp`, `show running-config ntp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_dhcp_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "configure NTP DHCP options",
        "description": "configure NTP server options for servers configured via DHCP\n\nCLI commands: `[no]ntp dhcp`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_dhcp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/interface": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP interface settings",
        "description": "get NTP settings for specific interface. \n\nCLI commands: `show running-config ntp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_interface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "modify NTP interface settings",
        "description": "modify NTP interface settings\n\nCLI commands: `[no]ntp interface`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_interface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/pool": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP pools settings",
        "description": "get NTP pools settings.\n\nCLI commands: `show running-config ntp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_server_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "modify NTP pool settings",
        "description": "modify NTP pool settings\n\nCLI commands: `[no]ntp pool`,\n\nNOTE: pairs `burst/iburst` and `ipv4/ipv6` in `settings` are mutually exclusive",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_server_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/restrict": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP restrict settings",
        "description": "get NTP restrict settings.\n\nCLI commands: `show running-config ntp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_restrict_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "modify NTP restrict settings",
        "description": "modify NTP restrict settings\n\nCLI commands: `[no]ntp restrict`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_restrict_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/server": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP server settings",
        "description": "get NTP servers settings.\n\nCLI commands: `show running-config ntp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_server_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "modify NTP servers settings",
        "description": "modify NTP servers settings\n\nCLI commands: `[no]ntp server`\n\nNOTE: pairs `burst/iburst` and `ipv4/ipv6` in `settings` are mutually exclusive",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_server_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/status": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP running status",
        "description": "get NTP service running status\n\nCLI commands: `show ntp`, `show running-config ntp`\n\nNOTE: optional field `connection_state` may display status returned by `ntpq` system utility in the tabular textual format",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_status_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "change NTP running status",
        "description": "change NTP running status\n\nCLI commands: `ntp on`, `ntp off`, `ntp restart`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_status_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/stratum": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get NTP local stratum",
        "description": "get NTP local stratum settings. \n\nCLI commands: `show running-config ntp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_stratum_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "modify NTP stratum settings",
        "description": "modify NTP stratum settings\n\nCLI commands: `[no]ntp local-server stratum`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_stratum_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ntp/synchronize": {
      "get": {
        "tags": [
          "ntp"
        ],
        "summary": "get result of NTP synchronization",
        "description": "get result of NTP synchronization started with the post request\n\nCLI command: `system clock synchronize`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ntp_synchronize_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntp"
        ],
        "summary": "start synchronization with NTP",
        "description": "start synchronization with NTP\n\nCLI command: `system clock synchronize`\n\nThis endpoint run asynchronous scripting procedure and processed as usual scripting methods, i.e. might be aborted via `/system/restapi_kill_scriptid`. Actual results should be requested via GET request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ntp_synchronize_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/client": {
      "get": {
        "tags": [
          "openvpn client"
        ],
        "description": "Get VPN client configuration. \n\nCLI commands: `show vpn client`.",
        "summary": "Get VPN client configuration",
        "parameters": [
          {
            "name": "client_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Client common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_client_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn client"
        ],
        "description": "Add or edit VPN client configuration. \n\nCLI commands: `vpn client`, `compression`, `device`, `dhcp option`, `dynamic port number`, `protocol`, `server-address`, `server-address random`, `server-address resolv infinite`.",
        "summary": "Add or edit VPN client configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_client_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/client/check": {
      "get": {
        "tags": [
          "openvpn client"
        ],
        "description": "Check minimum client configuration. \n\nCLI commands: `check config`.",
        "summary": "Check config",
        "parameters": [
          {
            "name": "client_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Client common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_client_check_read"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/client/control": {
      "post": {
        "tags": [
          "openvpn client"
        ],
        "description": "Control VPN client. Enable, disable or restart vpn client. \n\nCLI commands: `restart`, `shutdown`. \n\nNOTE: Before enabling client use `/openvpn/client/check` to confirm that minimum configuration is reached.",
        "summary": "Control VPN client",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_client_control_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/client/delete": {
      "post": {
        "tags": [
          "openvpn client"
        ],
        "description": "Delete VPN client configuration. \n\nCLI commands: `no vpn client`.",
        "summary": "Delete VPN client configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_client_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/client/import": {
      "get": {
        "tags": [
          "openvpn client"
        ],
        "description": "Get result of execution the `POST` /openvpn/client/import. \n\nCLI commands: `import`.",
        "summary": "Get result of execution the `POST` /openvpn/client/import",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_client_import_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn client"
        ],
        "description": "Import keys to the client via TFTP/SFTP or flash. \n\nCLI commands: `import`. \n\nNOTE:the key and certificate name should match the current client name. So, for client configuration `myclient` you need to place files `myclient.crt`, `myclient.key` and `ca.crt` to your TFTP/SFTP server or flash.",
        "summary": "Import keys",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_client_import_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/client/list": {
      "get": {
        "tags": [
          "openvpn client"
        ],
        "description": "Get a list of VPN clients. \n\nCLI commands: `show vpn client`.",
        "summary": "Get a list of VPN clients",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_client_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get OPENVPN server configuration. \n\nCLI commands: `show vpn server`.",
        "summary": "Get OPENVPN server configuration",
        "parameters": [
          {
            "name": "server_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Server common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Add or edit OPENVPN server configuration. \n\nCLI commands: `vpn server`, `cipher`, `client-max-number`, `client-to-client`, `compression`, `device`, `ip pool linear`, `keepalive`, `local address`, `point-to-point`, `port`, `protocol`, `remote-host`, `server-address`, `server-bridge-address`, `server`. \n\nNOTE: `static-key` parameter is not compatible with some of ciphers from `cipher`parameter. ",
        "summary": "Add or edit OPENVPN server configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/check": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Check if server meets minimum server configuration. Missing settings will be returned in error message.  \n\nCLI commands: `check config`.",
        "summary": "Check minimum server configuration",
        "parameters": [
          {
            "name": "server_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Server common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_check_read"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/control": {
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Control OPENVPN server (on/off/restart). \n\nCLI commands: `shutdown`, `restart`. ",
        "summary": "Control OPENVPN server (on/off/restart)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_control_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/export": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get result of execution the `POST` /openvpn/server/export. \n\nCLI commands: `export`.",
        "summary": "Get result of execution the `POST` /openvpn/server/export",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_export_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Export server certificate and client keys via TFTP/SFTP server or flash. \n\nCLI commands: `export`.",
        "summary": "Export keys",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_export_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/iproute": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get server's ip route related settings. \n\nCLI commands: `show vpn server`.",
        "summary": "Get server's ip route related settings",
        "parameters": [
          {
            "name": "server_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Server common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_iproute_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Add/delete after connection route or route to client network. \n\nCLI commands: `ip route client`, `ip route`.",
        "summary": "Add/delete after connection route or route to client network",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_iproute_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/keys": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get openvpn keys. \n\nCLI commands: `show vpn keys`. \n\nNOTE: You need maximum user privileges to display private server key.",
        "summary": "Get keys",
        "parameters": [
          {
            "name": "server_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Server common name"
            }
          },
          {
            "name": "client_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Client common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_keys_read"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/keys/build": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get result of execution the `POST` /openvpn/server/keys/build. \n\nCLI commands: `build-key client`, `build-key server`.",
        "summary": "Get result of execution the `POST` /openvpn/server//keys/bild",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_keys_build_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Build server/client keys. \n\nCLI commands: `build-key client`, `build-key server`. \n\nNOTE: Generation of private server keys with option `static` removes completely the keys/certificate database. So, all the certificates/keys for all clients and server Diffie Hellman key generated by `build-key server tls` command should be regenerated again.",
        "summary": "Build keys",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_keys_build_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/keys/noclient": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get result of execution the `POST` /openvpn/server/keys/noclient. \n\nCLI commands: `no client`.",
        "summary": "Get result of execution the `POST` /openvpn/server/keys/noclient",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_keys_noclient_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Revoke client keys and certificate. \n\nCLI commands: `no client`. \n\nNOTE: client certificate is not removed from the server but revoked and can no longer be used. All clients that received given certificate will not be able to use their keys.",
        "summary": "Revoke client keys and certificate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_keys_noclient_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/list": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get a list of OPENVPN servers. \n\nCLI commands: `show vpn server`.",
        "summary": "Geta a list of servers",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/pushclient": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get OPENVPN server push client options. \n\nCLI commands: `show vpn server`.",
        "summary": "Get push client options",
        "parameters": [
          {
            "name": "server_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Server common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_push_client_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Push configuration or DHCP options to the client. \n\nCLI commands: `push client`. ",
        "summary": "Push configuration or DHCP options to the client",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_push_client_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/openvpn/server/pushclientall": {
      "get": {
        "tags": [
          "openvpn server"
        ],
        "description": "Get OPENVPN server push all client options. \n\nCLI commands: `show vpn server`.",
        "summary": "Get push all client options",
        "parameters": [
          {
            "name": "server_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Server common name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_openvpn_server_push_client_all_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "openvpn server"
        ],
        "description": "Push configuration or DHCP options to all clients. \n\nCLI commands: `push client all`. ",
        "summary": "Push configuration or DHCP options to all clients",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_openvpn_server_push_client_all_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF status",
        "description": "get OSPF status\n\nCLI commands: `show running-config ospf`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "add/delete OSPF router",
        "description": "add/delete OSPF router\n\nCLI commands: `[no] router ospf`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/area": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for areas",
        "description": "get OSPF config for areas\n\nCLI commands: `show running-config ospf`\n\nNOTE:\n\nsome areas might be created indirectly via `ospf/network`, `ospf/vlink` requests. So, there is no way to delete such areas and they will be deleted automatically as soon as those referring resources will be deleted",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_area_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for areas",
        "description": "get OSPF config for areas\n\nCLI commands (from `router ospf` mode):`[no] area`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_area_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/clear": {
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "clear OSPF processes",
        "description": "clear OSPF processes\n\nCLI commands: `clear ip ospf`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_clear_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/config": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config",
        "description": "get OSPF config\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config",
        "description": "set config\n\nCLI commands (from `router ospf` mode): `[no] auto-cost reference-bandwidth`, `[no] bfd all-interfaces`, `[no] capability`, `[no] compatible_rfc1583`, `[no] cspf`, `[no] default-information`, `[no] default-metric`, `[no] distance`, `enable db-summary-opt`, `disable db-summary-opt`, `[no] fast_reroute`, `[no] log-adjacency-changes`, `[no] max-concurrent-dd`, `[no] maximum-area`, `[no] ospf abr-type`, `[no] ospf flood-reduction`, `[no] router-id`, `[no] overflow database`, `[no] refresh timer`, `[no] timers`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/debug": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF debugging features",
        "description": "get OSPF debugging features\n\nCLI commands: `show debugging ospf`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_debug_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF debugging",
        "description": "set OSPF debugging\n\nCLI commands:`[no] debug ospf`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_debug_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/global": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF global settings for all instances",
        "description": "get OSPF global settings for all instances\n\nCLI commands: `show running-config ospf`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_global_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "change OSPF global settings for all instances",
        "description": "change OSPF global settings for all instances\n\nCLI commands: `enable ext-ospf-multi-inst`, `disable ext-ospf-multi-inst`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_global_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/graceful_restart": {
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "restart OSPF daemon",
        "description": "restart OSPF daemon\n\nCLI commands: `restart ospf graceful`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_restart_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/host": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for hosts",
        "description": "get OSPF config for hosts\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_host_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for hosts",
        "description": "get OSPF config for hosts\n\nCLI commands (from `router ospf` mode):`[no] host`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_host_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/neighbor": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for neighbors",
        "description": "get OSPF config for neighbors\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_neighbor_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for neighbors",
        "description": "get OSPF config for neighbors\n\nCLI commands (from `router ospf` mode):`[no] neighbor`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_neighbor_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/network": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for networks",
        "description": "get OSPF config for networks\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_network_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for networks",
        "description": "get OSPF config for networks\n\nCLI commands (from `router ospf` mode):`[no] network`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_network_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/passive_interface": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for passive interfaces",
        "description": "get OSPF config for passive interfaces\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_passive_interface_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for passive interfaces",
        "description": "get OSPF config for passive interfaces\n\nCLI commands (from `router ospf` mode):`[no] passive_interface`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_passive_interface_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/redistribute": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for redistributes",
        "description": "get OSPF config for redistributes\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_redistribute_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for redistributes",
        "description": "get OSPF config for redistributes\n\nCLI commands (from `router ospf` mode):`[no] redistribute`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_redistribute_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/show": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF information and statistics for all processes",
        "description": "get OSPF information and statistics for all processes\n\nCLI commands: `show ip ospf`, `show ip protocols ospf`, `show ip ospf border-routers`, `show ip ospf database`, `show ip ospf buffers`, `show ip ospf igp-shortcut-lsp`, `show ip ospf igp-shortcut-route`, `show ip ospf multi-area-adjacencies`, `show ip ospf neighbour`, `show ip ospf opaque-area`, `show ip ospf opaque-as`, `show ip ospf opaque-link`, `show ip ospf te-database`, `show ip ospf virtual-links`",
        "parameters": [
          {
            "name": "param",
            "description": "show parameters (optional)",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ospf_show_type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/show_adv_router": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF adverising routers",
        "description": "get OSPF adverising routers\n\nCLI commands: `show ip ospf database adv-router`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          },
          {
            "name": "adv_router",
            "description": "IP address of advertising router",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IP_ADDR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/show_interface": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF interface info",
        "description": "get OSPF interface info\n\nCLI command: `show ip ospf interface`",
        "parameters": [
          {
            "name": "ifname",
            "description": "Interface name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          },
          {
            "name": "brief",
            "description": "brief/full info (false by default)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/show_neighbor": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF neighbor info",
        "description": "get OSPF  neighbor info\n\nCLI command: `show ip ospf neighbor`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          },
          {
            "name": "neighbor",
            "description": "IP address of neighbor",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IP_ADDR"
            }
          },
          {
            "name": "brief",
            "description": "brief/full info (false by default)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/show_neighbor_interface": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF neighbor info",
        "description": "get OSPF  neighbor info\n\nCLI command: `show ip ospf neighbor interface`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          },
          {
            "name": "interface_address",
            "description": "interface address",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IP_ADDR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/show_process": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF information and statistics for specific OSPF process",
        "description": "get OSPF information and statistics for specific OSPF process\n\nCLI commands: `show ip ospf`, `show ip ospf border-routers`, `show ip ospf database`, `show ip ospf buffers`, `show ip ospf multi-area-adjacencies`, `show ip ospf neighbour`, `show ip ospf opaque-area`, `show ip ospf opaque-as`, `show ip ospf opaque-link`, `show ip ospf te-database`, `show ip ospf virtual-links`",
        "parameters": [
          {
            "name": "param",
            "description": "show parameters",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ospf_show_process_type"
            }
          },
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/show_route": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF route information",
        "description": "get OSPF route information\n\nCLI commands: `show ip ospf route`",
        "parameters": [
          {
            "name": "param",
            "description": "summary, fast-reroute, ip-address or subnet",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ospf_show_route_type"
            }
          },
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/summary_address": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for summary addresses",
        "description": "get OSPF config for summary addresses\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_summary_address_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for summary addresses",
        "description": "get OSPF config for summary addresses\n\nCLI commands (from `router ospf` mode):`[no] summary_address`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_summary_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ospf/vlink": {
      "get": {
        "tags": [
          "ospf"
        ],
        "summary": "get OSPF config for virtual links",
        "description": "get OSPF config for virtual links\n\nCLI commands: `show running-config ospf`",
        "parameters": [
          {
            "name": "processID",
            "description": "OSPF process ID",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UINT16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ospf_virtual_link_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ospf"
        ],
        "summary": "set OSPF config for virtual links",
        "description": "get OSPF config for virtual links\n\nCLI commands (from `router ospf` mode):`[no] area <> virtual-link`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ospf_virtual_link_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/config": {
      "get": {
        "tags": [
          "poe"
        ],
        "summary": "get PoE config settings",
        "description": "get PoE config settings\n\nCLI command: `show running-config poe`",
        "responses": {
          "200": {
            "description": "Successfully read PoE config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_poe_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "poe"
        ],
        "summary": "set config settings for poe",
        "description": "set PoE temperature alarm threshold(0-255) and power-mode(dynamic|static)\n\nCLI command: `[no] poe temperature-alarm <poe_tsh>, poe power-mode <tp_mode>`)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_poe_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/config/AT": {
      "post": {
        "tags": [
          "poe"
        ],
        "summary": "set PoE AT disconnection/power-limit modes",
        "description": "set PoE AT disconnection(higher-priority|ignore-priority)/power-limit modes(PPL|class-based)\n\nCLI commands: `poe AT disconnection-method <pd_method>`, `poe AT power-limit-mode <pl_mode>`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_poe_AT_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/control": {
      "post": {
        "tags": [
          "poe"
        ],
        "summary": "<on|off|restart> PoE",
        "description": "Control commands(on|off|restart) for PoE\n\nCLI command: `poe <on|off|restart>`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_poe_control_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/reset": {
      "get": {
        "tags": [
          "poe"
        ],
        "summary": "get PoE reset result",
        "description": "get PoE reset result\n\nPoE reset is completed successfully only if the result is error-free",
        "responses": {
          "200": {
            "description": "Successfully read PoE reset result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_poe_reset_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "poe"
        ],
        "summary": "reset PoE controller",
        "description": "reset PoE controller\n\nCLI command: `poe reset`\n\nNote: Since this request takes time to execute, you need to make sure that it is finished executing using the `GET` `/poe/reset`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_poe_reset_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reset started",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/poe/show_events": {
      "get": {
        "tags": [
          "poe"
        ],
        "summary": "get PoE events info",
        "description": "Get PoE events info\n\nCLI commands: `show poe events`",
        "responses": {
          "200": {
            "description": "Successfully read PoE events info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_poe_events_read"
                }
              }
            }
          }
        }
      }
    },
    "/poe/show_interfaces": {
      "get": {
        "tags": [
          "poe"
        ],
        "summary": "get PoE interfaces info",
        "description": "Get PoE interfaces info\n\nCLI commands: `show poe interfaces`, `show poe interfaces switchport <1-8>`",
        "parameters": [
          {
            "name": "interface_name",
            "description": "interface name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/interfaces_switchport_ifname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read PoE interfaces info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_poe_interfaces_read"
                }
              }
            }
          }
        }
      }
    },
    "/poe/show_poe": {
      "get": {
        "tags": [
          "poe"
        ],
        "summary": "get PoE info",
        "description": "Get PoE info\n\nCLI commands: `show poe`",
        "responses": {
          "200": {
            "description": "Successfully read PoE info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_poe_status_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/config-number": {
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Set maximum config files number \n\nCLI command: `system config-files-number`",
        "summary": "Set maximum config files number",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profile_config_num_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get maximum config files number \n\nCLI command: `show system config-files-number`",
        "summary": "Get maximum config files number",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_profile_config_num_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/diff": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get the result of the `POST` `/profiles/diff`. \n\nCLI command: `show diff`. \n\nNote: The differences in running-configs are available when the request is completed without errors and is contained in the `result`",
        "summary": "Get the result of the `POST` `/profiles/diff`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_profiles_diff_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Show differences in running-configs. \n\nCLI command: `show diff`. \n\nNote: Since this request takes time to execute, the result of the request execution must be obtained using `GET` `/profiles/diff`",
        "summary": "Show differences in running-configs",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profiles_diff_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/export": {
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Export part of configuration. \n\nCLI command: `export`. \n\nNote: The `profile_name`, should be selected from the list returned by the `GET` `/profiles/list` and `/profiles/rollback/list`. \n\nThe `module_name`, should be selected from the list returned by the `GET` `/profiles/get_modules`",
        "summary": "Export part of configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profile_export_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/get_modules": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get list of modules \n\nCLI commands: no command \n\nNote: This helper request is used by other requests: `/profiles/running_config`, `/profiles/rollback/running_config`,`/profiles/export`, `/profiles/diff`",
        "summary": "Get list of modules",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_modules_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/list": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get list of all profiles \n\nCLI commands: `show profiles detail`",
        "summary": "Get list of all profiles",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_profiles_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/load": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get result of execution the `POST` `/profiles/load` \n\nCLI command: `load`. \n\nNote: The loading operation operation is completed successfully only if the `result` is error-free.",
        "summary": "Get result of execution the `POST` `/profiles/load`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_profile_load_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Load configuration \n\nCLI command: `load`. \n\nNote: The `profile_name` should be selected from the list returned by the `GET` `/profiles/list`. \n\nSince this request takes time to execute, you need to make sure that it is finished executing using the `GET` `/profiles/load`",
        "summary": "Load configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profile_load_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/profile": {
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Write configuration profile \n\nCLI commands: `write profile` ",
        "summary": "Write configuration profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profile_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Read the configuration profile \n\nCLI commands: `show profile` \n\nNote: `The profile_name` should be selected from the list returned by the `/profiles/list`.",
        "summary": "Read the configuration profile",
        "parameters": [
          {
            "name": "profile_name",
            "description": "Specify the configuration profile name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/profile_name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_profile_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/profile/boot": {
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Set boot profile \n\nCLI command: `boot-profile`. \n\nNote: The profile should be selected from the list returned by the `/profiles/list`.",
        "summary": "Set boot profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profile_boot_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/profile/copy": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get result of execution the `POST` /profiles/profile/copy. \n\nCLI command: `copy profile`. \n\nNote: The copy operation is completed successfully only if the `result` is error-free.",
        "summary": "Get result of execution the `POST` /profiles/profile/copy",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_profile_copy_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Copy profile. \n\nCLI command: `copy profile`. \n\nNote: The `profile_name` should be selected from the list returned by the `GET` `/profiles/list`. \n\nThe `dev_name`, should be selected from the list (`mount_path`) returned by the `GET` `/usb/media/show_mounted`. \n\nSince this request takes time to execute, you need to make sure that it is finished executing using the `GET` `/profiles/profile/copy`",
        "summary": "Copy profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profile_copy_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/profile/delete": {
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Delete configuration profile. \n\nCLI commands: `no profile` \n\nNote: The profile should be selected from the list returned by the `/profiles/list`.",
        "summary": "Delete configuration profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_profile_del_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/running_config": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Show running-config info for profile \n\nCLI commands: `show profile running-config detail`, `show running-config` \n\nNote: `The profile_name` should be selected from the list returned by the `/profiles/list`. \n\nThe `module_name` should be selected from the list returned by the `/profiles/get_modules`.",
        "summary": "Show running-config info for profile",
        "parameters": [
          {
            "name": "profile_name",
            "description": "Specify the configuration profile name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/run_config_name"
            }
          },
          {
            "name": "module_name",
            "description": "Show running-config info for given module",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_run_conf_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/system_config": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Show system running configuration \n\nCLI command: `show running-config system-config`.",
        "summary": "Show system running configuration",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_sys_conf_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback": {
      "post": {
        "tags": [
          "profiles/rollback"
        ],
        "title": "system rollback",
        "description": "Set rollback point and actions. \n\nCLI command: `system rollback`. \n\nNote: The `config_name` should be selected from the list returned by the `GET` `/profiles/list`.",
        "summary": "Set rollback point and actions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rollback_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "profiles/rollback"
        ],
        "title": "show system rollback",
        "description": "Get the status of ongoing rollback procedure. \n\nCLI command:`show system rollback`",
        "summary": "Get the status of ongoing rollback procedure",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rollback_status_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback/commit": {
      "post": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Cancel ongoing rollback procedure. \n\nCLI command: `system commit`",
        "summary": "Cancel ongoing rollback procedure",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rollback_commit_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback/config-number": {
      "post": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Set maximum rollback config files number. \n\nCLI command: system rollback-files-number",
        "summary": "Set maximum rollback config files number",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rollback_config_num_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Get maximum rollback config files number. \n\nCLI command: `show system rollback-files-number`",
        "summary": "Get maximum rollback config files number",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rollback_config_num_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback/delete": {
      "post": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Delete rollback profile. \n\nCLI command: `system clear-rollback`. \n\nNote: The `rollback_name` should be selected from the list returned by the `GET` `/profiles/rollback/list`.",
        "summary": "Delete rollback profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rollback_del_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback/list": {
      "get": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Get list of all rollback profiles \n\nCLI commands: `show profiles rollback`",
        "summary": "Get list of all rollback profiles",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rollback_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback/profile": {
      "get": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Read the rollback profile \n\nCLI commands: `show profile rollback` \n\nNote: `The rollback_name` should be selected from the list returned by the `/profiles/rollback/list`.",
        "summary": "Read the rollback profile",
        "parameters": [
          {
            "name": "rollback_name",
            "description": "Specify the rollback profile name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Rollback profile name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rollback_profile_read"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback/revert": {
      "get": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Get result of execution the `POST` profiles/rollback. \n\nCLI command: `system revert`. \n\nNote: The revert operation is completed successfully only if the `result` is error-free.",
        "summary": "Get result of execution the `POST` profiles/rollback",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rollback_revert_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Revert system settings. \n\nCLI command: `system revert`. \n\nNote: The `rollback_name` should be selected from the list returned by the `GET` `/profiles/rollback/list`. \n\n Since this request takes time to execute, the result of the request execution must be obtained using `GET` `/profiles/rollback/revert`",
        "summary": "Revert system settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rollback_revert_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/rollback/running_config": {
      "get": {
        "tags": [
          "profiles/rollback"
        ],
        "description": "Show running-config info for rollback profile \n\nCLI commands: `show profile rollback running-config detail` \n\nNote: The `rollback_name` should be selected from the list returned by the `/profiles/rollback/list`. \n\nThe `module_name` should be selected from the list returned by the `/profiles/get_modules`.",
        "summary": "Show running-config info for rollback profile",
        "parameters": [
          {
            "name": "rollback_name",
            "description": "Specify the rollback profile name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Rollback profile name"
            }
          },
          {
            "name": "module_name",
            "description": "Show running-config info for given module",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rollback_run_conf_read"
                }
              }
            }
          }
        }
      }
    },
    "/qos/classes": {
      "get": {
        "tags": [
          "QoS"
        ],
        "description": "Show QoS classes. \n\nCLI command: `show qos classes`.",
        "summary": "Show QoS classes",
        "parameters": [
          {
            "name": "iface_name",
            "description": "Interface system name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_qos_classes_read"
                }
              }
            }
          }
        }
      }
    },
    "/qos/delete": {
      "post": {
        "tags": [
          "QoS"
        ],
        "description": "Negate Quality of Service configuration \n\nCLI commands: `no qos`, `no class`, `no qos input`",
        "summary": "Negate Quality of Service configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_qos_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/filter": {
      "post": {
        "tags": [
          "QoS"
        ],
        "description": "Manage filter of QoS class \n\nCLI commands: `class <class_id> include`, `class <class_id> exclude`",
        "summary": "Manage filter of QoS class",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_qos_filter_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/filter/show": {
      "get": {
        "tags": [
          "QoS"
        ],
        "description": "Show filters of QoS classes. \n\nCLI command: `show qos filters`.",
        "summary": "Show filters of QoS classes",
        "parameters": [
          {
            "name": "iface_name",
            "description": "Interface system name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "parent_id",
            "description": "Parent node ID. This parameter is used only if an `interface name` is specified.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/QOS_ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_qos_filters_read"
                }
              }
            }
          }
        }
      }
    },
    "/qos/statistics": {
      "get": {
        "tags": [
          "QoS"
        ],
        "description": "Show queueing discipline settings and statistics. \n\nCLI command: `show qos`.",
        "summary": "Show QoS",
        "parameters": [
          {
            "name": "iface_name",
            "description": "Interface system name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_qos_stat_read"
                }
              }
            }
          }
        }
      }
    },
    "/qos/statistics/clear": {
      "post": {
        "tags": [
          "QoS"
        ],
        "description": "Reset traffic counters on the interface \n\nCLI command: `clear qos statistics`",
        "summary": "Reset QoS statistics",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_qos_statistics_clear_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/cbq": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "`Class Based Queueing` configuration \n\nCLI command: `qos type cbq` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`CBQ` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_cbq_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/cbq/class": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Add class for CBQ queueing discipline \n\nCLI command: `class type cbq` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`CBQ` class",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_cbq_class_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/fifo": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS `First In First Out` \n\nCLI command: `qos type fifo` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`FIFO` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_fifo_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/gred": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS GRED `Gentle Random Early Detection` \n\nCLI command: `qos type gred` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`GRED` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_gred_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/gred/vq": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure virtual-queue for GRED queueing discipline \n\nCLI command: `virtual-queue type gred` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`GRED` virtual-queue",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_gred_vq_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/hfsc": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "`Hierarchical Fair Service Curve` configuration \n\nCLI command: `qos type hfsc` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`HFSC` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_hfsc_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/hfsc/class": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Add class for HFSC queueing discipline \n\nCLI command: `class type hfsc` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`HFSC` class",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_hfsc_class_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/htb": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "`Hierarchy Tocken Bucket` configuration \n\nCLI command: `qos type htb` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`HTB` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_htb_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/htb/class": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Add class for HTB queueing discipline \n\nCLI command: `class type htb` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`HTB` class",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_htb_class_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/htb/statistics": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "`Manage kernel HTB statistics collection \n\nCLI command: `htb statistics`",
        "summary": "`HTB` statistics",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_htb_stat_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/input": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS for input traffic \n\nCLI command: `qos type input` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "QoS input",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_input_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/pq": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS PQ `Priority Queue` \n\nCLI command: `qos type pq` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`PQ` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_pq_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/red": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS RED `Random Early Detection` \n\nCLI command: `qos type red` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`RED` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_red_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/rio": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS RIO `RED In/Out` \n\nCLI command: `qos type rio` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`RIO` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rio_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/rio/vq": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure virtual-queue for RIO queueing discipline \n\nCLI command: `virtual-queue type rio` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`RIO` virtual-queue",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rio_vq_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/sfq": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS SFQ `Stochastic Fairness Queue` \n\nCLI command: `qos type sfq` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`SFQ` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_sfq_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/tbf": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS TBF `Tocken Bucket Filter` \n\nCLI command: `qos type tbf` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`TBF` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tbf_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/wfq": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS WFQ `Weighted Fair Queuing` \n\nCLI command: `qos type wfq` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`WFQ` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_wfq_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/wred": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS WRED `Weighted Random Early Detection` \n\nCLI command: `qos type wred` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`WRED` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_wred_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/wred/vq": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure virtual-queue for WRED queueing discipline \n\nCLI command: `virtual-queue type wred` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`WRED` virtual-queue",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_wred_vq_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/qos/wrr": {
      "post": {
        "tags": [
          "QoS types"
        ],
        "description": "Configure QoS WRR `Weighted Round Robin` \n\nCLI command: `qos type wrr` \n\n Note: The `Class ID` for `parent_id` should be selected from the list returned by the `GET` `/qos/classes`",
        "summary": "`WRR` configuration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_wrr_qos_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/radius/accounting": {
      "get": {
        "tags": [
          "radius"
        ],
        "description": "Get RADIUS accounting. \n\nCLI commands: `show running-config radius`.",
        "summary": "Get accounting",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_radius_accounting_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "radius"
        ],
        "description": "Set RADIUS accounting. \n\nCLI commands: `radius accounting`.",
        "summary": "Set accounting",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_radius_accounting_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/radius/attributes": {
      "get": {
        "tags": [
          "radius"
        ],
        "description": "Get RADIUS attributes. \n\nCLI commands: `show radius attributes`.",
        "summary": "Get attributes",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_radius_attributes_read"
                }
              }
            }
          }
        }
      }
    },
    "/radius/attributes/add": {
      "post": {
        "tags": [
          "radius"
        ],
        "description": "Add RADIUS attribute. \n\nCLI commands: `radius attribute`.",
        "summary": "Add attribute",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_radius_attributes_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/radius/attributes/delete": {
      "post": {
        "tags": [
          "radius"
        ],
        "description": "Delete RADIUS attribute. \n\nCLI commands: `no radius attribute`. \n\nNOTE: The attribute should be selected from the list returned by the `/radius/attributes/list`.",
        "summary": "Delete attribute",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_radius_attributes_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/radius/attributes/interfaces": {
      "get": {
        "tags": [
          "radius"
        ],
        "description": "Get received from RADIUS server attributes. \n\nCLI commands: `show radius interface attributes`. \n\nNOTE: Returns attributes received from remote RADIUS server, not to be confused with local attributes set with `/radius/attributes/add`.",
        "summary": "Get interface attributes",
        "parameters": [
          {
            "name": "interface",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Interface name to show RADIUS attributes for",
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_radius_attributes_interfaces_read"
                }
              }
            }
          }
        }
      }
    },
    "/radius/attributes/list": {
      "get": {
        "tags": [
          "radius"
        ],
        "description": "Get a list of RADIUS attributes. \n\nCLI commands: `show radius attributes`.",
        "summary": "Get a list of attributes",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_radius_attributes_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/radius/radius-test": {
      "post": {
        "tags": [
          "radius"
        ],
        "description": "Send packets to a RADIUS server and show reply. \n\nCLI commands: `radius-test`. \n\nNOTE: Potentially huge output.",
        "summary": "Radius-test",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_radius_radius_test_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_generic",
                  "title": "Response for radius-test",
                  "properties": {
                    "result": {
                      "description": "output of radius-test",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/radius/servers": {
      "get": {
        "tags": [
          "radius"
        ],
        "description": "Get RADIUS servers settings. \n\nCLI commands: `show radius servers`.",
        "summary": "Get servers settings",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_radius_servers_read"
                }
              }
            }
          }
        }
      }
    },
    "/radius/servers/add": {
      "post": {
        "tags": [
          "radius"
        ],
        "description": "Add RADIUS server. \n\nCLI commands: `radius server`. \n\nNOTE: Adds the address of the RADIUS server used for authorization (see the AAA module). It is assumed that there is a correctly configured RADIUS server at the specified address. Most of the settings for it are standard, but there must be a user privilege level setting in the following form: `Cisco-AVPair = \"shell:priv-lvl=14\"`.",
        "summary": "Add server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_radius_servers_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/radius/servers/delete": {
      "post": {
        "tags": [
          "radius"
        ],
        "description": "Delete RADIUS server. \n\nCLI commands: `no radius server`. \n\nNOTE: The server should be selected from the list returned by the `/radius/servers/list`.",
        "summary": "Delete server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_radius_servers_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/radius/servers/list": {
      "get": {
        "tags": [
          "radius"
        ],
        "description": "Get a list of RADIUS servers names. \n\nCLI commands: `show radius servers`.",
        "summary": "Get a list of servers",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_radius_servers_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/rip": {
      "get": {
        "tags": [
          "RIP"
        ],
        "description": "Get `RIP` status. \n\nCLI commands: `show ip protocols rip`.",
        "summary": "`RIP` status",
        "parameters": [
          {
            "name": "vrf",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_status_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Enable/Disable Routing Information Protocol (RIP). \n\nCLI commands: `[no] router rip`, [no] address-family ipv4 vrf.",
        "summary": "Enable/Disable `RIP`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_status_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/clear_route": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Clear RIP routing tables \n\nCLI commands: `clear ip rip route`, `clear ip rip route vrf`, `clear ipv4 rip route vrf`.",
        "summary": "`Clear RIP routing tables",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_clear_route_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/clear_statistics": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Clear RIP statistics \n\nCLI command: `clear ip rip statistics`.",
        "summary": "`Clear RIP statistics",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_clear_stat_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/config": {
      "get": {
        "tags": [
          "RIP"
        ],
        "description": "Get `RIP` settings. \n\nCLI commands: `show ip protocols rip`, `show running-config rip`, `show ip rip`.",
        "summary": "`RIP` settings",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Set `RIP` settings. \n\nCLI commands: `[no] bfd all-interfaces`, `[no] cisco-metric-behavior`, `[no] default-information originate`, `[no] default-metric`, `[no] maximum-prefix`, `[no] recv-buffer-size`, `[no] version`, `[no] timers basic`.",
        "summary": "Set `RIP` settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/debug": {
      "get": {
        "tags": [
          "RIP"
        ],
        "summary": "get RIP debugging features",
        "description": "get RIP debugging features\n\nCLI commands: `show debugging rip`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_debug_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RIP"
        ],
        "summary": "set RIP debugging",
        "description": "set RIP debugging\n\nCLI commands:`[no] debug rip`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_debug_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/distance": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "`RIP` Administrative distance. \n\nCLI command: `[no] distance`.",
        "summary": "`RIP` Administrative distance ",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_distance_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/distribute_list": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Filtering networks in routing updates by access list or prefix. \n\nCLI command: `[no] distribute-list`, `[no] distribute-list prefix`.",
        "summary": "Distribute list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_distribute_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/neighbor": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Neighbor router. \n\nCLI command: `[no] neighbor`.",
        "summary": "Neighbor router",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_neighbor_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/network": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Enable/Disable RIP routing on an IP network. \n\nCLI command: `[no] network`.",
        "summary": "Set `RIP` networks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_network_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/offset_list": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Offset for the RIP metric. \n\nCLI command: `[no] offset-list`.",
        "summary": "Offset for the RIP metric",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_offset_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/passive_interface": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Suppress RIP routing updates on an interface. \n\nCLI command: `[no] passive-interface`.",
        "summary": "`RIP` passive interfaces",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_passive_if_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/redistribute": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "Redistribute information from another routing protocol. \n\nCLI command: `[no] redistribute`.",
        "summary": "Redistribute",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_redistribute_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/route": {
      "post": {
        "tags": [
          "RIP"
        ],
        "description": "`RIP` Static route advertisement. \n\nCLI command: `[no] route`.",
        "summary": "`RIP` route ",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rip_route_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/rip/show_database": {
      "get": {
        "tags": [
          "RIP"
        ],
        "description": "Get `IP RIP` database. \n\nCLI commands: `show ip rip database`.",
        "summary": "`RIP` database",
        "parameters": [
          {
            "name": "vrf",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_show_database_read"
                }
              }
            }
          }
        }
      }
    },
    "/rip/show_interface": {
      "get": {
        "tags": [
          "RIP"
        ],
        "description": "Get `IP RIP` interfaces status and configuration. \n\nCLI commands: `show ip rip interface`.",
        "summary": "Show `RIP` interfaces status",
        "parameters": [
          {
            "name": "vrf",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          },
          {
            "name": "ifname",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_show_interface_read"
                }
              }
            }
          }
        }
      }
    },
    "/rip/show_rip": {
      "get": {
        "tags": [
          "RIP"
        ],
        "description": "Get `IP RIP` parameters. \n\nCLI commands: `show ip protocols rip`.",
        "summary": "`RIP` parameters",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_show_rip_read"
                }
              }
            }
          }
        }
      }
    },
    "/rip/show_statistics": {
      "get": {
        "tags": [
          "RIP"
        ],
        "description": "Get `RIP` statistics. \n\nCLI commands: `show ip rip statistics`.",
        "summary": "`RIP` statistics",
        "parameters": [
          {
            "name": "ifname",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rip_show_statistics_read"
                }
              }
            }
          }
        }
      }
    },
    "/ripng": {
      "get": {
        "tags": [
          "RIPng"
        ],
        "description": "Get `IPv6 RIP` status. \n\nCLI commands: `show ipv6 protocols rip`.",
        "summary": "`IPv6 RIP` status",
        "parameters": [
          {
            "name": "vrf",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ripng_status_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Enable/Disable Routing Information Protocol for IPv6 (RIPng). \n\nCLI commands: `[no] router ipv6 rip`, [no] address-family ipv6 vrf.",
        "summary": "Enable/Disable `IPv6 RIP`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_status_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/aggregate_address": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Add/Delete aggregate RIPng route announcement. \n\nCLI command: `[no] aggregate-address`.",
        "summary": "`IPv6 RIP` aggregate address",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_ag_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/clear_route": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Clear RIPng routing tables \n\nCLI command: `clear ipv6 rip route`.",
        "summary": "`Clear RIPng routing tables",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_clear_route_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/config": {
      "get": {
        "tags": [
          "RIPng"
        ],
        "description": "Get `RIP` settings for IPv6. \n\nCLI commands: `show ipv6 protocols rip`, `show running-config ripng`, `show ipv6 rip`.",
        "summary": "`IPv6 RIP` settings",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ripng_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Set `RIP` settings for IPv6. \n\nCLI commands:  `[no] cisco-metric-behavior`, `[no] default-information originate`, `[no] default-metric`, `[no] recv-buffer-size`, `[no] timers basic`",
        "summary": "Set `IPv6 RIP` settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/debug": {
      "get": {
        "tags": [
          "RIPng"
        ],
        "summary": "get IPv6 RIP debugging features",
        "description": "get IPv6 RIP debugging features\n\nCLI commands: `show debugging ipv6 rip`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ripng_debug_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RIPng"
        ],
        "summary": "set IPv6 RIP debugging",
        "description": "set IPv6 RIP debugging\n\nCLI commands:`[no] debug ipv6 rip`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_debug_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/distribute_list": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Filtering networks in routing updates by access list or prefix for IPv6. \n\nCLI command: `[no] distribute-list`, `[no] distribute-list prefix`.",
        "summary": "`IPv6 RIP` Distribute list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_distribute_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/neighbor": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Neighbor router for IPv6. \n\nCLI command: `[no] neighbor`.",
        "summary": "`IPv6 RIP` Neighbor router",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_neighbor_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/offset_list": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Offset for the `IPv6 RIP` metric. \n\nCLI command: `[no] offset-list`.",
        "summary": "Offset for the `IPv6 RIP` metric",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_offset_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/passive_interface": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Suppress `IPv6 RIP` routing updates on an interface. \n\nCLI command: `[no] passive-interface`.",
        "summary": "`IPv6 RIP` passive interfaces",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_passive_if_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/redistribute": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Redistribute information from another routing protocol for IPv6. \n\nCLI command: `[no] redistribute`.",
        "summary": "`IPv6 RIP` Redistribute",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_redistribute_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/route": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "`RIP` Static route advertisement for IPv6. \n\nCLI command: `[no] route`.",
        "summary": "`IPv6 RIP` route ",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_route_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/route_map": {
      "post": {
        "tags": [
          "RIPng"
        ],
        "description": "Attach/Detach route map. \n\nCLI command: `[no] route-map`.",
        "summary": "`IPv6 RIP` route map",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ripng_route_map_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/show_database": {
      "get": {
        "tags": [
          "RIPng"
        ],
        "description": "Get `IPv6 RIP` database. \n\nCLI commands: `show ipv6 rip database`.",
        "summary": "`IPv6 RIP` database",
        "parameters": [
          {
            "name": "vrf",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ripng_show_database_read"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/show_interface": {
      "get": {
        "tags": [
          "RIPng"
        ],
        "description": "Get `IPv6 RIP` interfaces status and configuration. \n\nCLI commands: `show ipv6 rip interface`.",
        "summary": "Show `IPv6 RIP` interfaces status",
        "parameters": [
          {
            "name": "vrf",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          },
          {
            "name": "ifname",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IFNAME"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ripng_show_interface_read"
                }
              }
            }
          }
        }
      }
    },
    "/ripng/show_rip": {
      "get": {
        "tags": [
          "RIPng"
        ],
        "description": "Get `IPv6 RIP` parameters. \n\nCLI commands: `show ipv6 protocols rip`.",
        "summary": "`IPv6 RIP` parameters",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ripng_show_rip_read"
                }
              }
            }
          }
        }
      }
    },
    "/routing/config": {
      "get": {
        "tags": [
          "routing"
        ],
        "summary": "get routing configuration",
        "description": "get routing configuration\n\nCLI command: `show ip forwarding`, `show ipv6 forwarding`, `show router-id`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_routing_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "routing"
        ],
        "summary": "change routing configuration",
        "description": "change routing configuration\n\nCLI commands: `[no] router-id`, `dste`, `[no] ip forwarding`, `[no] ipv6 forwarding`, `[no] ip icmp-broadcast`, `[no] if-arbiter`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_routing_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/routing/rib/config": {
      "get": {
        "tags": [
          "routing"
        ],
        "summary": "get RIB configuration",
        "description": "get RIB configuration\n",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_rib_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "routing"
        ],
        "summary": "change RIB configuration",
        "description": "change RIB configuration\n\nCLI commands: `[no] max-fib-routes`, `[no] max-static-routes`, `[no] fib retain`, `[no] maximum-paths`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_rib_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/samba/server": {
      "get": {
        "tags": [
          "samba"
        ],
        "description": "Get Samba Server settings. \n\nCLI command: `show samba server`.",
        "summary": "Get Samba Server settings",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_samba_server_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "samba"
        ],
        "description": "Set Samba Server settings \n\nCLI commands: `workgroup`, `netbios-name`, `ports`, `dns-proxy`, `interfaces`, `server-string`",
        "summary": "Set Samba Server settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_samba_server_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/samba/server/restart": {
      "post": {
        "tags": [
          "samba"
        ],
        "description": "Restart Samba Server \n\nCLI command: `restart`",
        "summary": "Restart Samba Server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_samba_server_restart_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/samba/server/state": {
      "post": {
        "tags": [
          "samba"
        ],
        "description": "Switch Samba Server on|off \n\nCLI commands: `on`, `off`",
        "summary": "Switch Samba Server on|off",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_samba_server_state_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/samba/share": {
      "get": {
        "tags": [
          "samba"
        ],
        "description": "Get setting of Samba share. \n\nCLI command: `show samba share`. \n\n Note: The `share_name` should be selected from the list returned by the `GET` `/samba/shares`",
        "summary": "Get setting of Samba share",
        "parameters": [
          {
            "name": "share_name",
            "description": "Share name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_samba_share_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "samba"
        ],
        "description": "Manage Samba share. \n\nCLI commands: `writable`, `path`, `audit`, `comment`, `disk`, `users`, `enable`, `disable`. \n\n Note: The `share_name` should be selected from the list returned by the `GET` `/samba/shares`",
        "summary": "Manage Samba share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_samba_share_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/samba/share/add": {
      "post": {
        "tags": [
          "samba"
        ],
        "description": "Add Samba share. \n\nCLI command: `share add`",
        "summary": "Add Samba share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_share_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/samba/share/delete": {
      "post": {
        "tags": [
          "samba"
        ],
        "description": "Remove Samba share. \n\nCLI commands: `no share`",
        "summary": "Remove Samba share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_share_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/samba/shares": {
      "get": {
        "tags": [
          "samba"
        ],
        "description": "Get list of all Samba shares. \n\nCLI command: `show samba shares`.",
        "summary": "Get list of Samba shares",
        "parameters": [
          {
            "name": "shares_type",
            "description": "Type of shares shown",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "user-defined",
                "system",
                "mounted"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_samba_shares_read"
                }
              }
            }
          }
        }
      }
    },
    "/samba/users": {
      "get": {
        "tags": [
          "samba"
        ],
        "description": "Get list of Samba users. \n\nCLI command: `show samba users`.",
        "summary": "Get list of Samba users",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_samba_users_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "samba"
        ],
        "description": "Manage Samba users. \n\nCLI commands: `user add`, `user remove`, `user password`. \n\n Note: The `user_name` should be selected from the list returned by the `GET` `/samba/users`",
        "summary": "Manage Samba users",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_samba_users_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/serial_port": {
      "get": {
        "tags": [
          "serial_port"
        ],
        "description": "Get serial port information. \n\nCLI commands: `show serial port`. \n\nNOTE: If serial port name is not specified returns information for all serial ports.",
        "summary": "Get serial port information",
        "parameters": [
          {
            "name": "serial_port_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING",
              "description": "Serial port name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_serial_port_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "serial_port"
        ],
        "description": "Set serial port parameters. \n\nCLI commands: `serial port`, `baudrate`, `data-bits`, `flow-control`, `parity`,  `stop-bits`, `tcp-port`, `telnet on`, `telnet off`, `telnet restart`.",
        "summary": "Set serial port parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_serial_port_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/serial_port/list": {
      "get": {
        "tags": [
          "serial_port"
        ],
        "description": "Get list of all serial ports names names. \n\nCLI commands: `show serial port`.",
        "summary": "Get list of serial ports",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_serial_port_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/snmp": {
      "get": {
        "summary": "Get SNMP server configuration",
        "description": "Get SNMP server configuration.\n\nCLI commands: `show snmp [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/communities": {
      "get": {
        "summary": "Get list of SNMP communities",
        "description": "Get list of SNMP communities.\n\nCLI commands:`show snmp communities [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_communities"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add or delete SNMP community or community subnet",
        "description": "Add or delete SNMP community or community subnet. SNMP server must be restarted to apply the settings.\n\nCLI commands: `snmp community ...`, `no snmp community ...`",
        "tags": [
          "SNMP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snmp_write_communities_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/mib": {
      "get": {
        "summary": "Get SNMP MiB installed on a local server",
        "description": "Get SNMP MiB installed on a local server. Community `<community_name>` with local address 127.0.0.1 must be created to access.\n\nCLI commands: `show snmp mib walk <community_name> [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "community",
            "in": "query",
            "required": true,
            "description": "Community name to be used when requesting MiB",
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_mib"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/state": {
      "get": {
        "summary": "Get SNMP server state",
        "description": "Get SNMP server state.\n\nCLI commands: `show snmp state [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_state"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Turn SNMP server on, off or restart",
        "description": "Turn SNMP server on, off or restart.\n\nCLI commands: `snmp (on | off | restart) [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snmp_write_state_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "State successfully switched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/traps": {
      "get": {
        "summary": "Get list of SNMP traps",
        "description": "Get list of SNMP traps.\n\nCLI commands: `show snmp traps [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_traps"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add or delete SNMP trap",
        "description": "Add or delete SNMP trap.\n\nCLI commands: `snmp trap <ip_address> <port> version ...`, `no snmp trap <ip_address> <port> version ...`.",
        "tags": [
          "SNMP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snmp_write_traps_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/traps/engineid": {
      "get": {
        "summary": "Get engineID for SNMP traps",
        "description": "Get engineID for SNMP traps.\n\nCLI commands: `show snmp traps engineID [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_traps_engineid"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set engineID for SNMP traps",
        "description": "Set engineID for SNMP traps. Set `'engine_id': null` to reset it to default.\n\nCLI commads: `snmp trap engineID <id> [vrf <vrf_name>]`, `no snmp trap engineID [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snmp_write_traps_engineid_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/traps/state": {
      "get": {
        "summary": "Get state of sending SNMP traps",
        "description": "Get state of sending SNMP traps.\n\nCLI commands: no corresponding CLI command, part of `show snmp traps [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_traps_state"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Enable or disable sending of SNMP traps",
        "description": "Enable or disable sending of SNMP traps.\n\nCLI commands: `snmp trap (on | off) [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snmp_write_traps_state_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/users": {
      "get": {
        "summary": "Show SNMP user[s]",
        "description": "Show SNMP user[s].\n\nCLI commands: `show snmp users [vrf <vrf_name>]`, `show snmp user <username> [vrf <vrf_name>]`.",
        "tags": [
          "SNMP"
        ],
        "parameters": [
          {
            "name": "user_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "vrf_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_users"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add or delete SNMP user",
        "description": "Add or delete SNMP user. SNMP server must be restarted to apply the settings.\n\nCLI commands: `snmp user ...`, `no snmp user ...`.",
        "tags": [
          "SNMP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snmp_write_users_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snmp/vrf": {
      "get": {
        "summary": "Get list of VRF with SNMP servers",
        "description": "Get list of VRF with SNMP servers.\n\nCLI commands: no corresponding CLI command.",
        "tags": [
          "SNMP"
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snmp_read_vrf"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add or delete SNMP server on a specific VRF",
        "description": "Add or delete SNMP server on a specific VRF. SNMP server in `default` VRF is already added and can not be deleted.\n\nCLI commands: `snmp vrf <vrf_name>`, `no snmp vrf <vrf_name>`.",
        "tags": [
          "SNMP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snmp_write_vrf_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snort/config_mgmt": {
      "get": {
        "tags": [
          "snort"
        ],
        "summary": "get result of SNORT import/delete",
        "description": "get result of import/delete\n\nCLI commands: `snort import`, `snort delete`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_snort_config_mgmt_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "snort"
        ],
        "summary": "Import/delete SNORT configs",
        "description": "Import/delete SNORT configs\n\nCLI commands: `snort import`, `snort delete`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_snort_config_mgmt_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snort/configuration": {
      "get": {
        "tags": [
          "snort"
        ],
        "summary": "get SNORT configuration",
        "description": "get configuration for all SNORT instances\n\nCLI commands: `show snort`, `show running-config snort`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_snort_configuration_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "snort"
        ],
        "summary": "change SNORT configuration/add/delete instances",
        "description": "change configuration for SNORT instance/add/delete instances\n\nCLI commands: `[no]snort ips`, `[no]snort ids`, `[no]snort log-format`, `[no]snort alert`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_snort_configuration_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snort/list": {
      "get": {
        "tags": [
          "snort"
        ],
        "summary": "get list of SNORT configs",
        "description": "get list of available SNORT configs\n\nCLI command: `show snort configs`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_snort_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/snort/show": {
      "get": {
        "tags": [
          "snort"
        ],
        "summary": "show SNORT config or rules",
        "description": "display generated SNORT configuration/rules\n\nCLI commands: `show snort ips/ids config/rules`\n\nNOTE: to get SNORT status as displayed by `show snort` command without parameters, use `/snort/status` endpoint",
        "parameters": [
          {
            "name": "interface",
            "description": "Specify IDS interface or `ips` for IPS mode",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "ips",
                  "title": "ips mode"
                },
                {
                  "$ref": "#/components/schemas/IFNAME",
                  "title": "interface name for ids mode"
                }
              ]
            }
          },
          {
            "name": "bShowRules",
            "description": "`true` to display rules, otherwise display config",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_snort_show_read"
                }
              }
            }
          }
        }
      }
    },
    "/snort/status": {
      "get": {
        "tags": [
          "snort"
        ],
        "summary": "get SNORT running status",
        "description": "get running status\n\nCLI commands: `show snort`, `show running-config snort`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_snort_status_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "snort"
        ],
        "summary": "change SNORT running status",
        "description": "change running status\n\nCLI commands: `snort on`, `snort off`, `snort restart`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_snort_status_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/snort/test": {
      "get": {
        "tags": [
          "snort"
        ],
        "summary": "get test results",
        "description": "get test results\n\nCLI command: `snort test`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_snort_config_mgmt_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "snort"
        ],
        "summary": "run SNORT test for specific config",
        "description": "run SNORT test for specific config\n\nCLI command: `snort test`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_snort_test_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/client/key": {
      "post": {
        "tags": [
          "ssh/client"
        ],
        "description": "Generate new ssh client key. \n\nCLI command: `ssh client generate` \n\nNote: Since this request takes time to execute, you need to make sure that it is finished executing using the `GET` `/ssh/client/key/generation_result`",
        "summary": "Generate new ssh client key",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_client_key_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ssh/client"
        ],
        "description": "Get ssh client key. \n\nCLI command: `show ssh client key key-name`",
        "summary": "Get ssh client key",
        "parameters": [
          {
            "name": "key_name",
            "description": "Specify key name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_client_key_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/client/key/copy": {
      "post": {
        "tags": [
          "ssh/client"
        ],
        "description": "Copy client SSH key to remote server. \n\nCLI command: `ssh client copy-key remote_addr`. \n\nNote: Since this request takes time to execute, the result of the request execution must be obtained using `GET` `/ssh/client/key/copy`",
        "summary": "Copy client SSH key to remote server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_client_key_copy_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ssh/client"
        ],
        "description": "Get the result of the request to copy the key.  \n\nNote: The copy operation is completed successfully only if the `result` is error-free.",
        "summary": "Get the result of the request to copy the key",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_client_key_copy_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/client/key/delete": {
      "post": {
        "tags": [
          "ssh/client"
        ],
        "description": "Delete ssh client key. \n\nCLI command: `no ssh client key`",
        "summary": "Delete ssh client key",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_client_key_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/client/key/generation_result": {
      "get": {
        "tags": [
          "ssh/client"
        ],
        "description": "Get the result of the key generation request. \n\nNote: The client key generation is completed successfully only if the `result` is error-free.",
        "summary": "Get the result of the key generation request",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_client_key_get_result_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/client/list": {
      "get": {
        "tags": [
          "ssh/client"
        ],
        "description": "Get ssh client key list. \n\nCLI command: `show ssh client key-list`",
        "summary": "Get ssh client key list",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_client_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/client/nohostkey": {
      "post": {
        "tags": [
          "ssh/client"
        ],
        "description": "Remove hostkey of remote server from known hosts list. \n\nCLI command: `ssh client remove-known-hosts`. \n\nNote: Since this request takes time to execute, the result of the request execution must be obtained using `GET` `/ssh/client/nohostkey`",
        "summary": "Remove hostkey of remote server from known hosts list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_client_nokey_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ssh/client"
        ],
        "description": "Get the result of the request to remove the key. \n\nNote: The removal operation is completed successfully only if the `result` is error-free.",
        "summary": "Get the result of the request to remove the key",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_client_nokey_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/add": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Add ssh server for vrf. \n\nCLI command: `system ssh vrf`",
        "summary": "Add ssh server for vrf",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/delete": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Delete ssh server for vrf. \n\nCLI command: `no system ssh vrf`",
        "summary": "Delete ssh server for vrf",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/hostkey": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Generate host key for device identification. \n\nCLI command: `system ssh hostkey generate` \n\nNote: Since this request takes time to execute, you need to make sure that it is finished executing using the `GET` `/ssh/server/hostkey`",
        "summary": "Generate host key for device identification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_hostkey_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ssh/server"
        ],
        "description": "Get the result of the hostkey generation request. \n\nNote: The hostkey generation is completed successfully only if the `result` is error-free.",
        "summary": "Get the result of the hostkey generation request",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_hostkey_get_result_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/limit": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Set SSH connection limits per time period. \n\nCLI commands: `no system ssh limit`,`system ssh limit period-time <period_value> count <period_count_value>`",
        "summary": "Set SSH connection limits per time period",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_limit_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/list": {
      "get": {
        "tags": [
          "ssh/server"
        ],
        "description": "Get list of all ssh servers. \n\nCLI command: `show system ssh`",
        "summary": "List of all ssh servers",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/listen_address": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Change SSH listen_address. \n\nCLI commands: `system ssh listen-address`, `no system ssh listen-address`",
        "summary": "Change SSH listen_address",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_listen_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/on": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Switch SSH server on/off. \n\nCLI commands: `system ssh on`, `system ssh off`",
        "summary": "Switch SSH server on/off",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_on_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/params": {
      "get": {
        "tags": [
          "ssh/server"
        ],
        "description": "Get ssh server's settings. \n\nCLI command: `show system ssh`",
        "summary": "SSH server's settings",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_params_read"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/port": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Change SSH port. \n\nCLI commands: `system ssh port`, `no system ssh port`",
        "summary": "Change SSH port",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_port_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/public_key": {
      "get": {
        "tags": [
          "ssh/server"
        ],
        "description": "Get list of ssh public keys. \n\nCLI command: `show system ssh public-key`",
        "summary": "Get list of ssh public keys",
        "parameters": [
          {
            "name": "key_username",
            "description": "Get public keys for the specified user. If not specified, get for the current user",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/USERNAME_UP_TO_31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_ssh_public_key_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Set SSH public key. \n\nCLI commands: `system ssh public-key`, `no system ssh public-key`",
        "summary": "Set SSH public key",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_public_key_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/restart": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Restart SSH server. \n\nCLI command: `system ssh restart`",
        "summary": "Restart SSH server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_restart_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/timeout": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Set inactivity timeout for ssh connection. \n\nCLI commands: `system ssh timeout`, `no system ssh timeout`",
        "summary": "Set inactivity timeout for ssh connection",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_timeout_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/ssh/server/whitelist": {
      "post": {
        "tags": [
          "ssh/server"
        ],
        "description": "Set SSH trusted networks. \n\nCLI commands: `system ssh whitelist`, `no system ssh whitelist`",
        "summary": "Set SSH trusted networks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_ssh_whitelist_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/affinity": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get affinity info",
        "description": "get CPU affinity info\n\nCLI command: `show system control-plane`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_affinity_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "change affinity settings",
        "description": "change CPU affinity settings\n\nCLI command: `system control-plane affinity`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_affinity_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/cli": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get terminal CLI settings",
        "description": "get terminal CLI parameters\n\nCLI command: `show terminal`, `show timeout`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_cli_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "change terminal CLI settings",
        "description": "change terminal CLI settings\n\nCLI command: `terminal language`, `terminal prompt`, `terminal example`, `terminal feature`, `[no] system ssh timeout`, `[no] system telnet timeout`, `[no] system tty timeout`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_cli_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/connections": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get connections",
        "description": "get connection list\n\nCLI commands: `show tcp`, `show udp`",
        "parameters": [
          {
            "name": "protocol",
            "description": "Protocol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "tcp",
                "udp"
              ]
            }
          },
          {
            "name": "version",
            "description": "version of IP protocol",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IP_PROTO"
            }
          },
          {
            "name": "vrf",
            "description": "VRF name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_connections_read"
                }
              }
            }
          }
        }
      }
    },
    "/system/factory_default": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get result of execution the `POST` `/system/factory_default`",
        "description": "get result of execution the `POST` request `/system/factory_default`\n\nCLI command: `system factory-default`\n\nIf result returns true than reboot process will be continued automatically in few seconds, otherwise error message will be written and system will continue normal operation",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_upgrade_reboot_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Start factory default process",
        "description": "Start factory default process\n\nThis process will clean up user data, profiles, etc. and get back system to the factory default state so REST API access will be lost as soon as reboot will be started. So, web-application should inform user before doing this critical thing and request acknodledgement. Anyway, after execution of this `POST` request result should be polled with `/system/restapi_get_busy`, afterwards, execution status will be requested by `GET` request and web-application should stop processing is result is positive because it means the device is ready to enter software rollback process. The end of this processmight be recognized by system indicators, i.e. LEDs on the front panel. Turning the REST API on will be possible via console by the CLI commands.\n\nCLI command: system `factory-default`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_dummy_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/host_name": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "display hostname",
        "description": "get hostname\n\nCLI commands: `show host-name`, `show domain-name`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_hostname_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "set hostname/domain name",
        "description": "set hostname/domain name\n\nCLI command: `system host-name`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_hostname_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/hosts": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get hosts list",
        "description": "get hosts list\n\nCLI command: `show hosts`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_hosts_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "add/delete host",
        "description": "add/delete host\n\nCLI commands: `[no]ip hosts`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_hosts_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/integrity": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get system integrity parameters and status",
        "description": "get system integrity parameters and status\n\nCLI command: `show system integrity`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_integrity_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "manage integrity check",
        "description": "set integrity check parameters/manual run the check-up\n\nCLI commands: `system integrity`\n\nNOTE: this request with parameter `run` starts execution of script and until it will completed all the operations with device are forbidden. The results of execution will be read after by the `GET` request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_integrity_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/irq": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get irq info",
        "description": "get irq info\n\nCLI command: `show system irq`",
        "parameters": [
          {
            "name": "irq",
            "description": "IRQ number or name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "detail",
            "description": "show detailed information",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_irq_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "change irq settings",
        "description": "change irq settings\n\nCLI command: `system irq`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_irq_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/memory_cache": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get memory/cache settings and statistics",
        "description": "get memory/cache settings and statistics\n\nCLI command: `show system memory-cache`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_memory_cache_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "manage system cache",
        "description": "set parameters/reset system cache\n\nCLI commands: `[no]system memory-cache`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_memory_cache_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/pci": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get PCI device info",
        "description": "get PCI device information\n\nCLI commands: `show lspci`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_pci_read"
                }
              }
            }
          }
        }
      }
    },
    "/system/platform": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get platform/version info",
        "description": "get platform/version information\n\nCLI commands: `show platform`, `show version`, `show version openapi`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_platform_read"
                }
              }
            }
          }
        }
      }
    },
    "/system/reboot": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get result of execution the `POST` `/system/reboot`",
        "description": "get result of execution the `POST` request `/system/reboot`\n\nCLI command: `system reboot`\n\nNOTE: if result returns true than reboot process will be continued automatically in few seconds, otherwise error message will be written and system will continue normal operation",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_upgrade_reboot_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Start rebooting process",
        "description": "Start rebooting process\n\nweb-application should recommend user to save `boot` profile before doing this operation and ack acknowledement. If settings will not be saved it is possible that REST API will not be available after reboot. All other required steps are similar to the `/system/upgrade` request\n\nCLI command: `system reboot`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_dummy_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/restapi_debug": {
      "get": {
        "summary": "Get REST API debug status",
        "description": "Return REST API debug status",
        "tags": [
          "system"
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_generic",
                  "title": "restapi_debug request output PDU",
                  "properties": {
                    "result": {
                      "type": "boolean",
                      "description": "is debug turned on"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set REST API debug/validation status",
        "description": "Manage REST API debug/validation. Also allows to clean internal log files for REST API debugging",
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/restapi_debug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/restapi_get_busy": {
      "get": {
        "summary": "Get busy state for REST-API scripts",
        "description": "Get busy state for a list of scriptIDs. Request returns `true` if at least one of scripts is executing. It alse returns a list of active executing scriptIDs. \n\nNOTE: zero scriptID sets busy state for all endpoints and such scripts can not be killed",
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "name": "scriptid",
            "description": "numerical scriptIDs separated by spaces",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/restapi_scriptid_list"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_restapi_get_busy"
                }
              }
            }
          }
        }
      }
    },
    "/system/restapi_get_scriptid": {
      "get": {
        "summary": "return list of REST API scriptIDs",
        "description": "return list of scriptIDs by list of endpoints",
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "description": "endpoint names: should omit leading backslashes i.e. `system/upgrade` separated by spaces",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/restapi_endpoint_list"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_restapi_get_scriptid"
                }
              }
            }
          }
        }
      }
    },
    "/system/restapi_kill_scriptid": {
      "post": {
        "summary": "kill executing REST API scripts",
        "description": "kill executing scripts by their scriptIDs.\n\nNOTE: system wide scripts with zero scriptID can not be killed",
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/restapi_kill_scriptid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/upgrade": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get result of execution the `POST` `/system/upgrade`",
        "description": "get result of execution the `POST` request `/system/upgrade`\n\nCLI command: `system upgrade`\n\nIf result returns true than reboot process will be continued automatically in few seconds, otherwise error message will be written and system will continue normal operation",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_upgrade_reboot_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Start system upgrade process",
        "description": "Start upgrading process. \n\nExecution of this request by the web application causes initiation of complicated process and should be managed in a special way: \n\n- before staring the process by this `POST` request, web-applicaiton should request user acknowledgement. Also, web application shouldrecommend to save current settings to the `boot` profile otherwise REST API might not be available after reboot \n- After execution of this `POST` request you should wait for the completion of this request with `/system/restapi_get_busy` polled with 1 second interval \n- read result of execution by the `GET` request \n- if result is positive, web application should inform user that system is going to the upgrade phase which may take a long time - at least 5 minutes, wait for 10 seconds and begin polling with `/system/restapi_get_busy` with zero argument with 10 second interval until device will not return valid result \n- if script execution is failed, web application should display error and continue functioning.  \n\nCLI command: `system upgrade`\n\nNOTE: as for usual scripts, the script initiated by this `POST` request might be aborted by `/system/restapi_kill_scriptid`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_upgrade_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/system/usage": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get system usage",
        "description": "get system resource usage\n\nCLI commands: `show usage`, `show load-average`, `show working-cpus`, `show system memory`, `show disks`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_usage_read"
                }
              }
            }
          }
        }
      }
    },
    "/system/watchdog": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "get watchdog info",
        "description": "get watchdog info\n\nCLI command: `show system watchdog`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_system_watchdog_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system"
        ],
        "summary": "change watchdog settings",
        "description": "change watchdog settings\n\nCLI command: `system watchdog`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_system_watchdog_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/tacacs": {
      "get": {
        "tags": [
          "tacacs"
        ],
        "description": "Get all TACACS settings. \n\nCLI commands: `show tacacs server`.",
        "summary": "Get all TACACS settings",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_tacacs_read"
                }
              }
            }
          }
        }
      }
    },
    "/tacacs/accounting": {
      "get": {
        "tags": [
          "tacacs"
        ],
        "description": "Get TACACS accounting. \n\nCLI commands: `show tacacs server`.",
        "summary": "Get accounting",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_tacacs_accounting_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tacacs"
        ],
        "description": "Set TACACS accounting. \n\nCLI commands: `tacacs accounting`.",
        "summary": "Set accounting",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tacacs_accounting_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/tacacs/servers": {
      "get": {
        "tags": [
          "tacacs"
        ],
        "description": "Get TACACS server settings. \n\nCLI commands: `show tacacs server`. \n\nNOTE: The server should be selected from the list returned by the `/tacacs/servers/list`.",
        "summary": "Get server",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tacacs_server_address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_tacacs_servers_read"
                }
              }
            }
          }
        }
      }
    },
    "/tacacs/servers/add": {
      "post": {
        "tags": [
          "tacacs"
        ],
        "description": "Add TACACS server. \n\nCLI commands: `tacacs server`. \n\nNOTE: Adds the address of the TACACS server used for authorization (see the AAA module). It is assumed that there is a correctly configured TACACS server at the specified address. Most of the settings for it are standard, but there must be a user privilege level setting in the following form: service = exec { priv-lvl = 14 }.",
        "summary": "Add server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tacacs_servers_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/tacacs/servers/delete": {
      "post": {
        "tags": [
          "tacacs"
        ],
        "description": "Delete TACACS server. \n\nCLI commands: `no tacacs server`. \n\nNOTE: The server should be selected from the list returned by the `/tacacs/servers/list`.",
        "summary": "Delete server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tacacs_servers_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/tacacs/servers/list": {
      "get": {
        "tags": [
          "tacacs"
        ],
        "description": "Get a list of all TACACS servers. \n\nCLI commands: `show tacacs server`.",
        "summary": "Get a list of servers",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_tacacs_servers_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/add": {
      "post": {
        "tags": [
          "telnet"
        ],
        "description": "Add telnet server for vrf. \n\nCLI command: `system telnet vrf`",
        "summary": "Add telnet server for vrf",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_telnet_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/delete": {
      "post": {
        "tags": [
          "telnet"
        ],
        "description": "Delete telnet server for vrf. \n\nCLI command: `no system telnet vrf`",
        "summary": "Delete telnet server for vrf",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_telnet_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/list": {
      "get": {
        "tags": [
          "telnet"
        ],
        "description": "Get list of all telnet servers. \n\nCLI command: `show system telnet`",
        "summary": "List of all telnet servers",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_telnet_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/listen_address": {
      "post": {
        "tags": [
          "telnet"
        ],
        "description": "Change Telnet listen_address. \n\nCLI command: `system telnet listen-address`",
        "summary": "Change Telnet listen_address",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_telnet_listen_address_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/on": {
      "post": {
        "tags": [
          "telnet"
        ],
        "description": "Switch Telnet server on/off. \n\nCLI commands: `system telnet on`, `system telnet off`",
        "summary": "Switch Telnet server on/off",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_telnet_on_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/params": {
      "get": {
        "tags": [
          "telnet"
        ],
        "description": "Get telnet server's settings. \n\nCLI command: `show system telnet`",
        "summary": "Telnet server's settings",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_telnet_params_read"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/port": {
      "post": {
        "tags": [
          "telnet"
        ],
        "description": "Change Telnet port. \n\nCLI command: `system telnet port`",
        "summary": "Change Telnet port",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_telnet_port_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/restart": {
      "post": {
        "tags": [
          "telnet"
        ],
        "description": "Restart Telnet server. \n\nCLI command: `system telnet restart`",
        "summary": "Restart Telnet server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_telnet_restart_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/telnet/whitelist": {
      "post": {
        "tags": [
          "telnet"
        ],
        "description": "Set Telnet trusted networks. \n\nCLI commands: `system telnet whitelist`, `no system telnet whitelist`",
        "summary": "Set Telnet trusted networks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_telnet_whitelist_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/tftp/capabilities": {
      "get": {
        "tags": [
          "tftp"
        ],
        "summary": "get TFTP settings",
        "description": "get settings of TFTP server\n\nCLI command: `show tftp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_tftp_capability_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tftp"
        ],
        "summary": "Change TFTP settings",
        "description": "Change TFTP server settings\n\nCLI commands: `tftp on`, `tftp off`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_tftp_capability_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/tftp/clear_files": {
      "post": {
        "tags": [
          "tftp"
        ],
        "summary": "clear TFTP home directory",
        "description": "clear TFTP home directory\n\nCLI command: `tftp clear-files`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/null"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/tftp/show_files": {
      "get": {
        "tags": [
          "tftp"
        ],
        "summary": "display te list of files in the TFTP home directory",
        "description": "display a list of files\n\nCLI command: `show tftp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_tftp_show_files_read"
                }
              }
            }
          }
        }
      }
    },
    "/usb/format": {
      "get": {
        "tags": [
          "usb"
        ],
        "description": "Get the result of the `POST` `/usb/format`. \n\nCLI command: `format`.  \n\nNote: The formatting operation is completed successfully only if the `result` is error-free.",
        "summary": "Get the result of the `POST` `/usb/format`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usb_format_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "usb"
        ],
        "description": "Format usb drive \n\nCLI command: `format` \n\nNote: The `dev_name` should be selected from the list returned by the `GET` `/usb/list`. \n\n Since this request takes time to execute, the result of the request execution must be obtained using `GET` `/usb/format`",
        "summary": "Format usb drive",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usb_format_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usb/list": {
      "get": {
        "tags": [
          "usb"
        ],
        "description": "Get list of all usb devices \n\nCLI command: `show usb media`",
        "summary": "Get list of all usb devices",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usb_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/usb/media/chmod": {
      "post": {
        "tags": [
          "usb"
        ],
        "description": "Change files permissions on the drive/partition \n\nCLI command: `chmod` \n\nNote: The `dev_name` should be selected from the list (`mount_path`) returned by the `GET` `/usb/media/show_mounted`. \n\n The `dir_name` should be selected from the `content` returned by the `GET` `/usb/media/show_dir`.",
        "summary": "Change files permissions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usb_chmod_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usb/media/mkdir": {
      "post": {
        "tags": [
          "usb"
        ],
        "description": "Create directory on the drive/partition \n\nCLI command: `mkdir` \n\nNote: The `dev_name` should be selected from the list (`mount_path`) returned by the `GET` `/usb/media/show_mounted`. ",
        "summary": "Create directory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usb_mkdir_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usb/media/rmdir": {
      "post": {
        "tags": [
          "usb"
        ],
        "description": "Remove directory on the drive/partition \n\nCLI command: `rmdir` \n\nNote: The `dev_name` should be selected from the list (`mount_path`) returned by the `GET` `/usb/media/show_mounted`. \n\n The `dir_name` should be selected from the `content` returned by the `GET` `/usb/media/show_dir`.",
        "summary": "Remove directory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usb_rmdir_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usb/media/show_dir": {
      "get": {
        "tags": [
          "usb"
        ],
        "description": "Show files and directories of usb disk \n\nCLI command: `show usb media <dev_name> <dir_name>` \n\nNote: The `dev_name` should be selected from the list (`mount_path`) returned by the `GET` `/usb/media/show_mounted`.",
        "summary": "Show files and directories",
        "parameters": [
          {
            "name": "dev_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          },
          {
            "name": "dir_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING_NO_QUOTES"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usb_media_dir_read"
                }
              }
            }
          }
        }
      }
    },
    "/usb/media/show_mounted": {
      "get": {
        "tags": [
          "usb"
        ],
        "description": "Get the result of the `POST` `/usb/media/show_mounted`. \n\nCLI command: `show usb media`. \n\nNote: Information about mounted disks is available when the request is completed without errors and is contained in the `result`",
        "summary": "Get the result of the  `POST` `/usb/media/show_mounted`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usb_mounted_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "usb"
        ],
        "description": "Show information of all mounted usb disks \n\nCLI command: `show usb media` \n\nNote: Since this request takes time to execute, the result of the request execution must be obtained using `GET` `/usb/media/show_mounted`",
        "summary": "Get list of all mounted usb disks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usb_mounted_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usb/media/umount": {
      "post": {
        "tags": [
          "usb"
        ],
        "description": "Unmount USB drive \n\nCLI commands: `umount` \n\nNote: The `dev_name` should be selected from the list (`mount_path`) returned by the `GET` `/usb/media/show_mounted`. ",
        "summary": "Unmount USB drive",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usb_umount_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/active-users": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "description": "Get current active users. \n\nCLI commands: `show active-users`. \n\nNOTE: Returns dynamic information, not user settings. Should use a poller.",
        "summary": "Get active users",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usergroups_active-users_read"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/force-logout": {
      "post": {
        "tags": [
          "usergroups"
        ],
        "description": "Close all active sessions for given user. \n\nCLI commands: `force-logout`. \n\nNOTE: The user should be selected from one of the lists returned by `/usergroups/users/list`.",
        "summary": "Force logout",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usergroups_force-logout_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/groups": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "description": "Get all groups settings. \n\nCLI commands: `show groups`.",
        "summary": "Get groups",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usergroups_groups_read"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/groups/add": {
      "post": {
        "tags": [
          "usergroups"
        ],
        "description": "Add new group or change privilege of existing group. \n\nCLI commands: `group`.",
        "summary": "Add or edit group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usergroups_groups_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/groups/delete": {
      "post": {
        "tags": [
          "usergroups"
        ],
        "description": "Delete user group. \n\nCLI commands: `no group`. \n\nNOTE: The group should be selected from the list returned by `/usergroups/groups/list`.",
        "summary": "Delete group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usergroups_groups_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/groups/list": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "description": "Get list of all groups names. \n\nCLI commands: `show groups`.",
        "summary": "Get list of groups",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usergroups_groups_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/privilege": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "description": "Get current privilege level. \n\nCLI commands: `show privilege`.",
        "summary": "Get privilege level",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usergroups_privilege_read"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/serviceuser": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "description": "Get serviceuser status. \n\nCLI commands: `show serviceuser`.",
        "summary": "Get serviceuser status",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usergroups_serviceuser_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "usergroups"
        ],
        "description": "Enable/disable serviceuser. \n\nCLI commands: `serviceuser`. \n\nNote: Enabling serviceuser returns a temporary password. There is no other way to get that password, including get request. Enabling serviceuser again will generate new password.",
        "summary": "Enable/disable serviceuser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usergroups_serviceuser_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_generic",
                  "title": "Response for enabling serviceuser",
                  "properties": {
                    "result": {
                      "description": "New serviceuser password",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/users": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "description": "Get users and their information such as group, type and privilege level. \n\nCLI commands: `show users`.",
        "summary": "Get users information",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usergroups_users_read"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/users/add": {
      "post": {
        "tags": [
          "usergroups"
        ],
        "description": "Create user account. \n\nCLI commands: `username add`. \n\nNOTE: The group should be selected from the list returned by `/usergroups/groups/list`.",
        "summary": "Add user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usergroups_users_add_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/users/delete": {
      "post": {
        "tags": [
          "usergroups"
        ],
        "description": "Delete user. \n\nCLI commands: `no username`. \n\nNOTE: The group should be selected from the list returned by `/usergroups/groups/list`. The user should be selected from `local` list returned by `/usergroups/users/list`.",
        "summary": "Delete user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usergroups_users_delete_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/users/edit": {
      "post": {
        "tags": [
          "usergroups"
        ],
        "description": "Edit user information. \n\nCLI commands: `username edit`. \n\nNOTE: The group should be selected from the list returned by `/usergroups/groups/list`. The user should be selected from `local` list returned by `/usergroups/users/list`.",
        "summary": "Edit user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_usergroups_users_edit_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully written",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/usergroups/users/list": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "description": "Get list of all users names. \n\nCLI commands: `show users`.",
        "summary": "Get list of users",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_usergroups_users_list_read"
                }
              }
            }
          }
        }
      }
    },
    "/vrf": {
      "get": {
        "tags": [
          "vrf"
        ],
        "summary": "get list of available VRFs",
        "description": "get list of available VRFs\n\nCLI command: `show ip vrf`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_vrf_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vrf"
        ],
        "summary": "add/delete VRF",
        "description": "add/delete VRF\n\nCLI commands: `[no] ip vrf`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_vrf_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/vrf/config": {
      "get": {
        "tags": [
          "vrf"
        ],
        "summary": "get VRF config",
        "description": "get VRF config\n\nCLI commands: `show running-config vrf-management`, `show ip forwarding vrf`, `show ipv6 forwarding vrf`, `show ip vrf`",
        "parameters": [
          {
            "name": "vrf_name",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_vrf_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vrf"
        ],
        "summary": "set VRF config",
        "description": "set VRF config\n\nCLI commands: `[no] ip forwarding vrf`, `[no] ipv6 forwarding vrf`, `[no] ip icmp-broadcast`, \n\nfrom `ip vrf` mode:`[no] description`, `[no] router-id`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_vrf_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/vrrp": {
      "get": {
        "tags": [
          "vrrp"
        ],
        "summary": "get vrrp working state for specific instance or all",
        "description": "get vrrp working state for specific instance or all.\n\nCLI command: `show vrrp [<name_of_instance>]`",
        "parameters": [
          {
            "name": "name_of_instance",
            "description": "name of VRRP instance",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_vrrp_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vrrp"
        ],
        "summary": "Create/Delete VRRP instance",
        "description": "Use command to create or delete VRRP instance.\n\nCLI commands: `[no] vrrp <instance_name>`, `interface`, `priority`, `virtual ip`, `virtual-router-id`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_vrrp_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/vrrp/config": {
      "get": {
        "tags": [
          "vrrp"
        ],
        "summary": "get vrrp params for specific instance or all",
        "description": "get params for specific instance or all.\n\nCLI command: `show vrrp [<name_of_instance>]`",
        "parameters": [
          {
            "name": "name_of_instance",
            "description": "name of VRRP instance",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/STRING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_vrrp_config_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vrrp"
        ],
        "summary": "Manage VRRP instance settings",
        "description": "Use commands to control settings and parameters of an VRRP instance.\n\nCLI commands(in VRRP mode): `advertising-interval`, `[no] authentication (password | secret)`, `[no] checksum-compatibility-mode`, `interface`, `priority`, `[no] state`, `[no] sync-group`, `[no] track`, `[no] track interface`, `[no] track ip times in ok-percent weight`, `version`, `[no] virtual ip (<ipv4> | <ipv6>)`, `virtual-router-id`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_vrrp_config_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    },
    "/vrrp/control": {
      "get": {
        "tags": [
          "vrrp"
        ],
        "summary": "get vrrp status",
        "description": "get vrrp status.\n\nCLI command: `show vrrp`",
        "responses": {
          "200": {
            "description": "Successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_vrrp_control_read"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vrrp"
        ],
        "summary": "Turn on/off all VRRP instances",
        "description": "Use command to Turn on/off all VRRP instances.\n\nCLI commands: `vrrp (on|off)`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/in_vrrp_control_write"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "done",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/out_noanswer"
                }
              }
            }
          }
        }
      }
    }
  }
}